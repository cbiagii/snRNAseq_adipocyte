<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials | AdipoSNAP</title>
    <link>https://cbiagii.github.io/AdipoSNAP/post/</link>
      <atom:link href="https://cbiagii.github.io/AdipoSNAP/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Tutorials</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 18 Oct 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://cbiagii.github.io/AdipoSNAP/images/icon_hu64d5fdaaa5c80254dbe3c681e74a1b81_409389_512x512_fill_lanczos_center_2.png</url>
      <title>Tutorials</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/</link>
    </image>
    
    <item>
      <title>2 - Functions</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/2_functions/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://cbiagii.github.io/AdipoSNAP/post/2_functions/</guid>
      <description>&lt;pre&gt;&lt;code&gt;## plotMonocle
plotMonocle &amp;lt;- function(cds, gene) {
  if (sum(gene %in% rownames(cds)) == 0) {
    stop(&#39;None gene found in dataset&#39;)
  }
  
  if (sum(gene %in% rownames(cds)) != length(gene)) {
    gene &amp;lt;- gene[gene %in% rownames(cds)]
  }
  
  suppressPackageStartupMessages(library(dplyr))
  suppressPackageStartupMessages(library(monocle))
  suppressPackageStartupMessages(library(scales))
  suppressPackageStartupMessages(library(ggpubr))
  suppressPackageStartupMessages(library(viridis))
  
  return_rotation_mat &amp;lt;- function(theta) {
    theta &amp;lt;- theta/180 * pi
    matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), 
           nrow = 2)
  }
  monocle_theme_opts &amp;lt;- function() {
    theme(strip.background = element_rect(colour = &#39;white&#39;, fill = &#39;white&#39;)) +
      theme(panel.border = element_blank()) +
      theme(axis.line.x = element_line(size=0.25, color=&amp;quot;black&amp;quot;)) +
      theme(axis.line.y = element_line(size=0.25, color=&amp;quot;black&amp;quot;)) +
      theme(panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank()) +
      theme(panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank()) + 
      theme(panel.background = element_rect(fill=&#39;white&#39;)) +
      theme(legend.key=element_blank())
  }
  
  tmp &amp;lt;- cds@assayData$exprs[gene, ]
  if (length(gene) == 1) {
    tmp &amp;lt;- rescale(tmp, to = c(-2,2))
    cds[[gene]] &amp;lt;- tmp
  } else {
    tmp &amp;lt;- apply(tmp, 1, function(x) rescale(x, to = c(-2,2)))
    for (i in 1:ncol(tmp)) {
      cds[[colnames(tmp)[i]]] &amp;lt;- tmp[,i]
    }
  }
  
  pt &amp;lt;- plot_cell_trajectory(cds, color_by = gene[1])
  
  reduced_dim_coords &amp;lt;- reducedDimK(cds)
  ica_space_df &amp;lt;- Matrix::t(reduced_dim_coords) %&amp;gt;% as.data.frame() %&amp;gt;% 
    select_(prin_graph_dim_1 = 1, prin_graph_dim_2 = 2) %&amp;gt;% 
    mutate(sample_name = rownames(.), sample_state = rownames(.))
  dp_mst &amp;lt;- minSpanningTree(cds)
  
  edge_df &amp;lt;- dp_mst %&amp;gt;% igraph::as_data_frame() %&amp;gt;% select_(source = &amp;quot;from&amp;quot;, target = &amp;quot;to&amp;quot;) %&amp;gt;% left_join(ica_space_df %&amp;gt;% select_(source = &amp;quot;sample_name&amp;quot;, source_prin_graph_dim_1 = &amp;quot;prin_graph_dim_1&amp;quot;, source_prin_graph_dim_2 = &amp;quot;prin_graph_dim_2&amp;quot;), by = &amp;quot;source&amp;quot;) %&amp;gt;% left_join(ica_space_df %&amp;gt;% select_(target = &amp;quot;sample_name&amp;quot;, target_prin_graph_dim_1 = &amp;quot;prin_graph_dim_1&amp;quot;, target_prin_graph_dim_2 = &amp;quot;prin_graph_dim_2&amp;quot;), by = &amp;quot;target&amp;quot;)
  
  rot_mat &amp;lt;- return_rotation_mat(0)
  cn2 &amp;lt;- c(&amp;quot;source_prin_graph_dim_1&amp;quot;, &amp;quot;source_prin_graph_dim_2&amp;quot;)
  cn3 &amp;lt;- c(&amp;quot;target_prin_graph_dim_1&amp;quot;, &amp;quot;target_prin_graph_dim_2&amp;quot;)
  edge_df[, cn2] &amp;lt;- as.matrix(edge_df[, cn2]) %*% t(rot_mat)
  edge_df[, cn3] &amp;lt;- as.matrix(edge_df[, cn3]) %*% t(rot_mat)
  
  data_df &amp;lt;- pt$data
  
  g &amp;lt;- ggplot(data = data_df, aes(x = data_dim_1, y = data_dim_2))
  
  g &amp;lt;- g + geom_segment(aes_string(x = &amp;quot;source_prin_graph_dim_1&amp;quot;, 
                                   y = &amp;quot;source_prin_graph_dim_2&amp;quot;, xend = &amp;quot;target_prin_graph_dim_1&amp;quot;, 
                                   yend = &amp;quot;target_prin_graph_dim_2&amp;quot;), size = 0.75, 
                        linetype = &amp;quot;solid&amp;quot;, na.rm = TRUE, data = edge_df)
  
  mst_branch_nodes &amp;lt;- cds@auxOrderingData[[cds@dim_reduce_type]]$branch_points
  branch_point_df &amp;lt;- ica_space_df %&amp;gt;% slice(match(mst_branch_nodes, sample_name)) %&amp;gt;% mutate(branch_point_idx = seq_len(n()))
  g &amp;lt;- g + geom_point(aes_string(x = &amp;quot;prin_graph_dim_1&amp;quot;, y = &amp;quot;prin_graph_dim_2&amp;quot;), size = 5, na.rm = TRUE, branch_point_df) + 
    geom_text(aes_string(x = &amp;quot;prin_graph_dim_1&amp;quot;, y = &amp;quot;prin_graph_dim_2&amp;quot;, label = &amp;quot;branch_point_idx&amp;quot;), size = 4, color = &amp;quot;white&amp;quot;, na.rm = TRUE, branch_point_df)
  
  g &amp;lt;- g + monocle_theme_opts() + xlab(&amp;quot;Component 1&amp;quot;) + ylab(&amp;quot;Component 2&amp;quot;) + 
    theme(legend.position = &amp;quot;top&amp;quot;, legend.key.height = grid::unit(0.35, &amp;quot;in&amp;quot;)) + theme(legend.key = element_blank()) + 
    theme(panel.background = element_rect(fill = &amp;quot;white&amp;quot;))
  
  plotlist &amp;lt;- list()
  for (i in 1:length(gene)) {
    plotlist[[i]] &amp;lt;- g + geom_point(data = data_df[which(data_df[[gene[i]]] &amp;lt; 0), ], aes_string(color = paste0(&#39;`&#39;, gene[i], &#39;`&#39;)), size = I(1), na.rm = TRUE) + 
      geom_point(data = data_df[which(data_df[[gene[i]]] &amp;gt; 0), ], aes_string(color = paste0(&#39;`&#39;, gene[i], &#39;`&#39;)), size = I(1.5), na.rm = TRUE) + 
      scale_color_viridis(option = &#39;C&#39;, discrete = F, end = 0.9) + ggtitle(gene[i]) + 
      theme(plot.title = element_text(hjust = 0.5)) + labs(color = &amp;quot;&amp;quot;)
  }
  
  pt2 &amp;lt;- ggarrange(plotlist = plotlist, common.legend = T)
  
  return(pt2)
}



## SeuratToH5ad
SeuratToH5ad &amp;lt;- function(seurat_object, filename, assay = NULL, res = 1) {
  library(reticulate)
  
  if (!py_module_available(&amp;quot;anndata&amp;quot;) | !py_module_available(&amp;quot;scanpy&amp;quot;) | !py_module_available(&amp;quot;igraph&amp;quot;) | !py_module_available(&amp;quot;louvain&amp;quot;)) {
    stop(&amp;quot;Please install the anndata python module&amp;quot;)
  }
  ad &amp;lt;- import(&amp;quot;anndata&amp;quot;)
  sc &amp;lt;- import(&amp;quot;scanpy&amp;quot;)
  
  message(paste(&amp;quot;Starting to fix the mess...&amp;quot;))
  
  raw &amp;lt;- seurat_object@assays$RNA@data
  if (assay == &amp;quot;RNA&amp;quot;) {
    X &amp;lt;- as.matrix(seurat_object@assays$RNA@data)
  } else if (assay == &amp;quot;SCT&amp;quot;) {
    X &amp;lt;- as.matrix(seurat_object@assays$SCT@data)
  } else {
    stop(&amp;quot;Please select an existent assay&amp;quot;)
  }
  
  cell_names &amp;lt;- colnames(x = X)
  gene_names &amp;lt;- rownames(x = X)
  raw &amp;lt;- as(object = raw, Class = &amp;quot;dgCMatrix&amp;quot;)
  
  scipy &amp;lt;- import(module = &#39;scipy.sparse&#39;, convert = FALSE)
  sp_sparse_csc &amp;lt;- scipy$csc_matrix
  raw.rownames &amp;lt;- rownames(x = raw)
  raw &amp;lt;- sp_sparse_csc(
    tuple(np_array(raw@x), np_array(raw@i), np_array(raw@p)),
    shape = tuple(raw@Dim[1], raw@Dim[2])
  )
  
  raw &amp;lt;- raw$T
  raw &amp;lt;- dict(X = raw, var = dict(var_names = raw.rownames))
  
  X &amp;lt;- np_array(t(x = X))
  
  obsm &amp;lt;- list()
  for (dr in names(seurat_object@reductions)) {
    obsm[[paste0(&amp;quot;X_&amp;quot;,dr)]] &amp;lt;- np_array(Embeddings(
      object = seurat_object,
      reduction = dr
    ))
  }
  obsm &amp;lt;- dict(obsm)
  meta_data &amp;lt;- seurat_object@meta.data
  if (&amp;quot;nCount_RNA&amp;quot; %in% colnames(x = meta_data)) {
    colnames(x = meta_data) &amp;lt;- gsub(
      pattern = &amp;quot;nCount_RNA&amp;quot;,
      replacement = &amp;quot;n_counts&amp;quot;,
      x = colnames(x = meta_data)
    )
  }
  if (&amp;quot;nFeature_RNA&amp;quot; %in% colnames(x = meta_data)) {
    colnames(x = meta_data) &amp;lt;- gsub(
      pattern = &amp;quot;nFeature_RNA&amp;quot;,
      replacement = &amp;quot;n_genes&amp;quot;,
      x = colnames(x = meta_data)
    )
  }
  colnames(x = meta_data) &amp;lt;- gsub(
    pattern = &amp;quot;\\.&amp;quot;,
    replacement = &amp;quot;_&amp;quot;,
    x = colnames(x = meta_data)
  )
  
  anndata.object &amp;lt;- ad$AnnData(
    raw = raw,
    X = X,
    obs = meta_data,
    obsm = obsm
  )
  anndata.object$var_names &amp;lt;- gene_names
  anndata.object$obs_names &amp;lt;- cell_names
  
  message(paste(&amp;quot;Clustering for resolution:&amp;quot;, res))
  sc$pp$neighbors(anndata.object)
  sc$tl$louvain(anndata.object, resolution=res, key_added = &amp;quot;L1_Round0&amp;quot;)
  
  message(paste(&amp;quot;Writing to h5ad file...&amp;quot;))
  anndata.object$write(filename)
  message(paste(&amp;quot;Finished!!&amp;quot;))
}



## volcano.plot
volcano.plot &amp;lt;- function(res, upGenes = NULL, downGenes = NULL){
  mut &amp;lt;- as.data.frame(res)
  mut &amp;lt;- na.omit(mut)
  mutateddf &amp;lt;- mutate(mut, sig=ifelse(mut$gene %in% upGenes,&amp;quot;Up_regulated&amp;quot;, ifelse(mut$gene %in% downGenes , &amp;quot;Down_regulated&amp;quot;, &amp;quot;Not_different&amp;quot;)))
  rownames(mutateddf) &amp;lt;- rownames(mut)
  input &amp;lt;- cbind(gene=rownames(mutateddf), mutateddf)
  colnames(input)[which(colnames(input)==&amp;quot;sig&amp;quot;)] &amp;lt;- &amp;quot;Significance&amp;quot;
  input[,1] &amp;lt;- NULL
  input[which(input[[&amp;quot;p_val_adj&amp;quot;]] == 0), &amp;quot;p_val_adj&amp;quot;] &amp;lt;- min(input[which(input[[&amp;quot;p_val_adj&amp;quot;]] != 0), &amp;quot;p_val_adj&amp;quot;], na.rm = TRUE) * 10^-1
  
  p &amp;lt;- ggplot(input, aes(avg_logFC, -log10(p_val_adj))) +
    geom_point(colour=&amp;quot;white&amp;quot;) +
    ggtitle(&amp;quot;&amp;quot;) +
    theme_bw() +
    scale_y_continuous(limits = c(0, -log10(input$p_val_adj)))
  p &amp;lt;- p + geom_point(data=subset(input, input$Significance == &#39;Not_different&#39;), aes(avg_logFC, -log10(p_val_adj)), colour=&amp;quot;gray70&amp;quot;) +
    geom_point(data=subset(input, input$Significance == &#39;Up_regulated&#39;), aes(avg_logFC, -log10(p_val_adj)), colour=&amp;quot;firebrick4&amp;quot;) +
    geom_point(data=subset(input, input$Significance == &#39;Down_regulated&#39;), aes(avg_logFC, -log10(p_val_adj)), colour=&amp;quot;dodgerblue&amp;quot;) +
    xlab(&amp;quot;logFC&amp;quot;) + ylab(&amp;quot;-log10(padj)&amp;quot;)
  p &amp;lt;- p + geom_text_repel(data=input[c(head(upGenes, 5), head(downGenes, 5)), ], aes(label=gene))
  
  return(p)
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>3 - Original Preprocessing</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/3_original_preprocess/</link>
      <pubDate>Sat, 17 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://cbiagii.github.io/AdipoSNAP/post/3_original_preprocess/</guid>
      <description>&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)

## Loading data Cellranger output format
data &amp;lt;- Read10X(&amp;quot;/Users/biagi/PhD/AdipoSNAP/data/10x/&amp;quot;)

## Reading metadata annotation
anno &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/data/GSE133486_10XAdiposeNuclei.metaData.tsv&amp;quot;)

## Creating Seurat object
data &amp;lt;- CreateSeuratObject(counts = data,
                           project = &amp;quot;Adipocyte&amp;quot;, 
                           meta.data = anno, 
                           min.cells = 3,
                           min.features = 200)

## Subset remaining only N condition
data &amp;lt;- subset(data, cells = rownames(data@meta.data)[which(data@meta.data$condition == &amp;quot;N&amp;quot;)])

## Cell cycle genes
m.s.genes &amp;lt;- c(&amp;quot;Gmnn&amp;quot;, &amp;quot;Rad51&amp;quot;, &amp;quot;Prim1&amp;quot;, &amp;quot;Dscc1&amp;quot;, &amp;quot;Cdca7&amp;quot;, &amp;quot;Slbp&amp;quot;, &amp;quot;Mcm7&amp;quot;, &amp;quot;Cenpu&amp;quot;, &amp;quot;Pold3&amp;quot;, 
               &amp;quot;Ccne2&amp;quot;, &amp;quot;Mcm4&amp;quot;, &amp;quot;Polr1b&amp;quot;, &amp;quot;Fen1&amp;quot;, &amp;quot;Rad51ap1&amp;quot;, &amp;quot;Tyms&amp;quot;, &amp;quot;Usp1&amp;quot;, &amp;quot;Rrm2&amp;quot;, &amp;quot;Wdr76&amp;quot;, 
               &amp;quot;Dtl&amp;quot;, &amp;quot;Rrm1&amp;quot;, &amp;quot;Gins2&amp;quot;, &amp;quot;Tipin&amp;quot;, &amp;quot;Hells&amp;quot;, &amp;quot;Ubr7&amp;quot;, &amp;quot;Chaf1b&amp;quot;, &amp;quot;Clspn&amp;quot;, &amp;quot;E2f8&amp;quot;, &amp;quot;Mcm5&amp;quot;, 
               &amp;quot;Nasp&amp;quot;, &amp;quot;Pcna&amp;quot;, &amp;quot;Mrpl36&amp;quot;, &amp;quot;Rfc2&amp;quot;, &amp;quot;Cdc45&amp;quot;, &amp;quot;Casp8ap2&amp;quot;, &amp;quot;Mcm6&amp;quot;, &amp;quot;Exo1&amp;quot;, &amp;quot;Pola1&amp;quot;, &amp;quot;Cdc6&amp;quot;, 
               &amp;quot;Ung&amp;quot;, &amp;quot;Uhrf1&amp;quot;, &amp;quot;Blm&amp;quot;, &amp;quot;Msh2&amp;quot;)
m.g2m.genes &amp;lt;- c(&amp;quot;Cdk1&amp;quot;, &amp;quot;Tmpo&amp;quot;, &amp;quot;Smc4&amp;quot;, &amp;quot;Tacc3&amp;quot;, &amp;quot;Mki67&amp;quot;, &amp;quot;Ckap2l&amp;quot;, &amp;quot;Cks2&amp;quot;, &amp;quot;Cdc25c&amp;quot;, &amp;quot;Nusap1&amp;quot;, &amp;quot;Kif11&amp;quot;, 
                 &amp;quot;Top2a&amp;quot;, &amp;quot;Cdca3&amp;quot;, &amp;quot;Cks1b&amp;quot;, &amp;quot;Ect2&amp;quot;, &amp;quot;Ckap5&amp;quot;, &amp;quot;Ckap2&amp;quot;, &amp;quot;Cenpa&amp;quot;, &amp;quot;Cdca2&amp;quot;, &amp;quot;Ncapd2&amp;quot;, &amp;quot;Aurkb&amp;quot;, 
                 &amp;quot;Cenpf&amp;quot;, &amp;quot;Gtse1&amp;quot;, &amp;quot;Birc5&amp;quot;, &amp;quot;Bub1&amp;quot;, &amp;quot;Cdca8&amp;quot;, &amp;quot;Anp32e&amp;quot;, &amp;quot;Rangap1&amp;quot;, &amp;quot;Tpx2&amp;quot;, &amp;quot;Hjurp&amp;quot;, &amp;quot;Lbr&amp;quot;, 
                 &amp;quot;Dlgap5&amp;quot;, &amp;quot;Psrc1&amp;quot;, &amp;quot;Ndc80&amp;quot;, &amp;quot;Nek2&amp;quot;, &amp;quot;Cbx5&amp;quot;, &amp;quot;Ube2c&amp;quot;, &amp;quot;Gas2l3&amp;quot;, &amp;quot;G2e3&amp;quot;, &amp;quot;Cdc20&amp;quot;, &amp;quot;Hmgb2&amp;quot;, 
                 &amp;quot;Cenpe&amp;quot;, &amp;quot;Nuf2&amp;quot;, &amp;quot;Anln&amp;quot;, &amp;quot;Ttk&amp;quot;, &amp;quot;Kif2c&amp;quot;, &amp;quot;Kif20b&amp;quot;, &amp;quot;Aurka&amp;quot;, &amp;quot;Hmmr&amp;quot;, &amp;quot;Pimreg&amp;quot;, &amp;quot;Cks1brt&amp;quot;, 
                 &amp;quot;Tubb4b&amp;quot;, &amp;quot;Kif23&amp;quot;, &amp;quot;Ccnb2&amp;quot;, &amp;quot;Ctcf&amp;quot;)

## MT based cell thresholding
data &amp;lt;- subset(data, subset = nFeature_RNA &amp;gt; 200 &amp;amp; nFeature_RNA &amp;lt; 2500)

## Normalizing data
data &amp;lt;- NormalizeData(data)

## Finding variable features
data &amp;lt;- FindVariableFeatures(data)

## Scoring cell cycle phases
data &amp;lt;- CellCycleScoring(data, s.features = m.s.genes, g2m.features = m.g2m.genes, set.ident = TRUE)

## Scalling and centering the data regressing out nCount_RNA, S.Score and G2M.Score
data &amp;lt;- ScaleData(data, vars.to.regress = c(&amp;quot;nCount_RNA&amp;quot;, &amp;quot;S.Score&amp;quot;, &amp;quot;G2M.Score&amp;quot;))

# Running PCA
data &amp;lt;- RunPCA(data)

## Defining the best number of PC that has a explained variance greater than 80%
dp &amp;lt;- data@reductions$pca@stdev
dp &amp;lt;- dp^2
for (z in 1:length(dp)) {
  soma &amp;lt;- sum(dp[1:z])/sum(dp)
  if (soma &amp;gt;= 0.8) {
    best_pc &amp;lt;- z
    break()
  }
}

## Clustering
data &amp;lt;- FindNeighbors(data, dims = 1:best_pc)
data &amp;lt;- FindClusters(data)

## RunUMAP
data &amp;lt;- RunUMAP(data, dims = 1:best_pc)

## RunUMAP
data &amp;lt;- RunTSNE(data, dims = 1:best_pc, max_iter = 5000, perplexity = 50, verbose = T)

## Saving RDS file
saveRDS(data, &amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_Processed.rds&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>4 - Metacell Original</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/4_metacell_original/</link>
      <pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://cbiagii.github.io/AdipoSNAP/post/4_metacell_original/</guid>
      <description>&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)
library(future)
library(metacell)
library(ggpubr)
library(DropletUtils)
library(pheatmap)

## Convert an Seurat object to 10x format to input in metacell
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_Processed.rds&amp;quot;)
write10xCounts(x = data@assays$RNA@counts, path = &amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/data&amp;quot;)


## Initializing a database
if(!dir.exists(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/db&amp;quot;)) dir.create(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/db&amp;quot;)
scdb_init(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/db&amp;quot;, force_reinit=T)

## Loading the data generated by the 10x conversion above
mcell_import_scmat_10x(&amp;quot;test1&amp;quot;, base_dir=&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/data&amp;quot;)
mat = scdb_mat(&amp;quot;test1&amp;quot;)

## Linking to a figure directory
if(!dir.exists(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/figs&amp;quot;)) dir.create(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/figs&amp;quot;)
scfigs_init(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/figs&amp;quot;)

## Plotting the distribution of UMI count per cell
mcell_plot_umis_per_cell(&amp;quot;test1&amp;quot;)

## Cleaning the data using a list of mitochondrial genes that typically mark cells as being stressed or dying, as well as immunoglobulin genes that may represent strong clonal signatures in plasma cells
mat &amp;lt;- scdb_mat(&amp;quot;test1&amp;quot;)
nms &amp;lt;- c(rownames(mat@mat), rownames(mat@ignore_gmat))
ig_genes &amp;lt;- c(grep(&amp;quot;^Igj&amp;quot;, nms, v=T), 
             grep(&amp;quot;^Igh&amp;quot;,nms,v=T),
             grep(&amp;quot;^Igk&amp;quot;, nms, v=T), 
             grep(&amp;quot;^Igl&amp;quot;, nms, v=T))
bad_genes &amp;lt;- unique(c(grep(&amp;quot;^mt-&amp;quot;, nms, v=T), grep(&amp;quot;^mtmr&amp;quot;, nms, v=T), grep(&amp;quot;^Mtnd&amp;quot;, nms, v=T),&amp;quot;NEAT1&amp;quot;,&amp;quot;TMSB4X&amp;quot;, &amp;quot;TMSB10&amp;quot;, ig_genes))
mcell_mat_ignore_genes(new_mat_id=&amp;quot;test1&amp;quot;, mat_id=&amp;quot;test1&amp;quot;, bad_genes, reverse=F)

## Eliminating cells with less than 700 UMIs
mcell_mat_ignore_small_cells(&amp;quot;test1&amp;quot;, &amp;quot;test1&amp;quot;, 700)

## Computing statistics on the distributions of each gene in the data, which are going to be our main tool for selecting feature genes
mcell_add_gene_stat(gstat_id=&amp;quot;test1&amp;quot;, mat_id=&amp;quot;test1&amp;quot;, force=T)

## We create a new object of type gset, to which all genes whose scaled variance (variance divided by mean) exceeds a given threshold are added:
mcell_gset_filter_varmean(gset_id=&amp;quot;test_feats&amp;quot;, gstat_id=&amp;quot;test1&amp;quot;, T_vm=0.08, force_new=T)
mcell_gset_filter_cov(gset_id = &amp;quot;test_feats&amp;quot;, gstat_id=&amp;quot;test1&amp;quot;, T_tot=100, T_top3=2)

## Plotting all genes and our selected gene set given the mean and variance statistics
mcell_plot_gstats(gstat_id=&amp;quot;test1&amp;quot;, gset_id=&amp;quot;test_feats&amp;quot;)

## Creating a similarity graph, using a construction called balanced K-nn graph
mcell_add_cgraph_from_mat_bknn(mat_id=&amp;quot;test1&amp;quot;, 
                               gset_id = &amp;quot;test_feats&amp;quot;, 
                               graph_id=&amp;quot;test_graph&amp;quot;,
                               K=150,
                               dsamp=F)

## Use the cgraph to sample 1000 metacell partitions, each covering 75% of the cells and organizing them in dense subgraphs
mcell_coclust_from_graph_resamp(
  coc_id=&amp;quot;test_coc500&amp;quot;, 
  graph_id=&amp;quot;test_graph&amp;quot;,
  min_mc_size=20, 
  p_resamp=0.75, n_resamp=1000)

## The co-clustering statistics are used to generate a new similarity graph, based on which accurate calling of the final set of metacells
mcell_mc_from_coclust_balanced(
  coc_id=&amp;quot;test_coc500&amp;quot;, 
  mat_id= &amp;quot;test1&amp;quot;,
  mc_id= &amp;quot;test_mc&amp;quot;, 
  K=20, min_mc_size=20, alpha=2)

## Splitting metacells whose underlying similarity structure supports the existence of multiple sub-clusters, and removes outlier cells that strongly deviate from their metacell&#39;s expression profile
mcell_plot_outlier_heatmap(mc_id=&amp;quot;test_mc&amp;quot;, mat_id = &amp;quot;test1&amp;quot;, T_lfc=3)
mcell_mc_split_filt(new_mc_id=&amp;quot;test_mc_f&amp;quot;, 
                    mc_id=&amp;quot;test_mc&amp;quot;, 
                    mat_id=&amp;quot;test1&amp;quot;,
                    T_lfc=3, plot_mats=F)

## The filtered metacell object test_mc_f can now be visualized. In order to do this effectively, we usually go through one or two iterations of selecting informative marker genes. The package can select markers for you automatically - by simply looking for genes that are strongly enriched in any of the metacells
mcell_gset_from_mc_markers(gset_id=&amp;quot;test_markers&amp;quot;, mc_id=&amp;quot;test_mc_f&amp;quot;)


## Running 1st Round with known markers
load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/db/mc.test_mc_f.Rda&amp;quot;)
lfp &amp;lt;- log2(object@mc_fp)

marks_colors &amp;lt;- NULL
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;blue&amp;quot;, 1, 2))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial&amp;quot;, &amp;quot;Pecam1&amp;quot;, &amp;quot;green&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_1&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;#ff748c&amp;quot;, 1, 0.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_2&amp;quot;, &amp;quot;Cd19&amp;quot;, &amp;quot;#ff8fa3&amp;quot;, 1, 0.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_1&amp;quot;, &amp;quot;Cd34&amp;quot;, &amp;quot;#ffa500&amp;quot;, 1, 2))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_2&amp;quot;, &amp;quot;Pdgfra&amp;quot;, &amp;quot;#ffb732&amp;quot;, 1, 2))
marks_colors &amp;lt;- as.data.frame(marks_colors)
colnames(marks_colors) &amp;lt;- c(&amp;quot;group&amp;quot;, &amp;quot;gene&amp;quot;, &amp;quot;color&amp;quot;, &amp;quot;priority&amp;quot;, &amp;quot;T_fold&amp;quot;)
marks_colors$priority &amp;lt;- as.integer(marks_colors$priority)
marks_colors$T_fold &amp;lt;- as.numeric(marks_colors$T_fold)

mc = scdb_mc(&amp;quot;test_mc_f&amp;quot;)
gene_folds &amp;lt;- mc@mc_fp

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/db/gset.test_markers.Rda&amp;quot;)
gset &amp;lt;- object
good_marks &amp;lt;- intersect(names(gset@gene_set), rownames(mc@mc_fp))
mc_ord &amp;lt;- 1:ncol(mc@mc_fp)

mat = log2(gene_folds[good_marks, mc_ord])
mat = pmax(pmin(mat, 3), -3)

## Selecting best markers for adipocyte cells
mat_A &amp;lt;- mat[, which(mc@colors == &amp;quot;blue&amp;quot;)]
mat_A &amp;lt;- mat_A[rowSums(mat_A) &amp;gt; quantile(rowSums(mat_A), 0.9), ]
rowMeans(mat_A[names(head(sort(rowSums(mat_A), decreasing = T), 5)), ])

## Selecting best markers for endothelial cells
mat_E &amp;lt;- mat[, which(mc@colors == &amp;quot;green&amp;quot;)]
mat_E &amp;lt;- mat_E[rowSums(mat_E) &amp;gt; quantile(rowSums(mat_E), 0.9), ]
rowMeans(mat_E[names(head(sort(rowSums(mat_E), decreasing = T), 5)), ])

## Selecting best markers for immune cells
mat_I &amp;lt;- mat[, which(mc@colors %in% c(&amp;quot;#ff748c&amp;quot;, &amp;quot;#ff8fa3&amp;quot;))]
mat_I &amp;lt;- mat_I[rowSums(mat_I) &amp;gt; quantile(rowSums(mat_I), 0.9), ]
rowMeans(mat_I[names(head(sort(rowSums(mat_I), decreasing = T), 5)), ])

## Selecting best markers for progenitor cells
mat_P &amp;lt;- mat[, which(mc@colors %in% c(&amp;quot;#ffa500&amp;quot;, &amp;quot;#ffb732&amp;quot;))]
mat_P &amp;lt;- mat_P[rowSums(mat_P) &amp;gt; quantile(rowSums(mat_P), 0.9), ]
rowMeans(mat_P[names(head(sort(rowSums(mat_P), decreasing = T), 5)), ])

## Plotting heatmat to check the found markers
items &amp;lt;- list(Adipocytes = mat_A, Endothelials = mat_E, Immunes = mat_I, Progenitors = mat_P)
plot_list=list()
for (i in 1:length(items)){
  x &amp;lt;- pheatmap(items[[i]], fontsize = 6, main = names(items)[i], legend = FALSE, treeheight_row = 0, treeheight_col = 0)
  plot_list[[i]] = x[[4]]
}
gggpubr(plotlist = plot_list, ncol = 2)


## Running 2nd round with unsupervised markers provided by metacell
marks_colors &amp;lt;- NULL
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_1&amp;quot;, &amp;quot;Acsl1&amp;quot;, &amp;quot;#0000b3&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_2&amp;quot;, &amp;quot;Plin4&amp;quot;, &amp;quot;#0000cc&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_3&amp;quot;, &amp;quot;Mlxipl&amp;quot;, &amp;quot;#0000e6&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_4&amp;quot;, &amp;quot;Pck1&amp;quot;, &amp;quot;#0000ff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_5&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;#1a1aff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_1&amp;quot;, &amp;quot;Btnl9&amp;quot;, &amp;quot;#00cd00&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_2&amp;quot;, &amp;quot;Flt1&amp;quot;, &amp;quot;#00b300&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_3&amp;quot;, &amp;quot;Kdr&amp;quot;, &amp;quot;#009a00&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_4&amp;quot;, &amp;quot;Cdh13&amp;quot;, &amp;quot;#008000&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_5&amp;quot;, &amp;quot;Cyyr1&amp;quot;, &amp;quot;#006700&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_1&amp;quot;, &amp;quot;Zeb2&amp;quot;, &amp;quot;#ff7f7f&amp;quot;, 1, 0.85))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_2&amp;quot;, &amp;quot;Trps1&amp;quot;, &amp;quot;#ff6666&amp;quot;, 1, 0.85))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_3&amp;quot;, &amp;quot;Runx1&amp;quot;, &amp;quot;#ff4c4c&amp;quot;, 1, 0.85))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_4&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;#ff3232&amp;quot;, 1, 0.85))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_5&amp;quot;, &amp;quot;Adap2&amp;quot;, &amp;quot;#ff1919&amp;quot;, 1, 0.85))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_1&amp;quot;, &amp;quot;Dcn&amp;quot;, &amp;quot;#ffff4d&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_2&amp;quot;, &amp;quot;Celf2&amp;quot;, &amp;quot;#ffff33&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_3&amp;quot;, &amp;quot;Meg3&amp;quot;, &amp;quot;#ffff1a&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_4&amp;quot;, &amp;quot;Col1a2&amp;quot;, &amp;quot;#ffff00&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_5&amp;quot;, &amp;quot;Col3a1&amp;quot;, &amp;quot;#e6e600&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- as.data.frame(marks_colors)
colnames(marks_colors) &amp;lt;- c(&amp;quot;group&amp;quot;, &amp;quot;gene&amp;quot;, &amp;quot;color&amp;quot;, &amp;quot;priority&amp;quot;, &amp;quot;T_fold&amp;quot;)
marks_colors$priority &amp;lt;- as.integer(marks_colors$priority)
marks_colors$T_fold &amp;lt;- as.numeric(marks_colors$T_fold)

mc_colorize(&amp;quot;test_mc_f&amp;quot;, marker_colors=marks_colors)
mc &amp;lt;- scdb_mc(&amp;quot;test_mc_f&amp;quot;)

## We can use the colors to produce a labeled heat map, showing selected genes and their distributions over metacells, with the colored annotation shown at the bottom
mcell_mc_plot_marks(mc_id=&amp;quot;test_mc_f&amp;quot;, gset_id=&amp;quot;test_markers&amp;quot;, mat_id=&amp;quot;test1&amp;quot;, plot_cells = F)

lfp &amp;lt;- log2(mc@mc_fp)

## Projecting metacells and cells in 2D
mcell_mc2d_force_knn(mc2d_id=&amp;quot;test_2dproj&amp;quot;,mc_id=&amp;quot;test_mc_f&amp;quot;, graph_id=&amp;quot;test_graph&amp;quot;)
tgconfig::set_param(&amp;quot;mcell_mc2d_height&amp;quot;,1000, &amp;quot;metacell&amp;quot;)
tgconfig::set_param(&amp;quot;mcell_mc2d_width&amp;quot;,1000, &amp;quot;metacell&amp;quot;)
mcell_mc2d_plot(mc2d_id=&amp;quot;test_2dproj&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>5 - SCCAF SCT</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/5_sccaf_sct/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://cbiagii.github.io/AdipoSNAP/post/5_sccaf_sct/</guid>
      <description>&lt;pre&gt;&lt;code&gt;library(Seurat)
source(&amp;quot;/projects/cangen/coliveir/SeuratToH5ad.R&amp;quot;)
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed.rds&amp;quot;)
SeuratToH5ad(data, &amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/data.h5ad&amp;quot;, &amp;quot;SCT&amp;quot;, 1)


# python to define the optimal accuracy number
import warnings
warnings.filterwarnings(&amp;quot;ignore&amp;quot;)
from SCCAF import *
  
ad = sc.read(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/data.h5ad&amp;quot;)

y_prob, y_pred, y_test, clf, cvsm, acc = SCCAF_assessment(ad.X, ad.obs[&#39;L1_Round0&#39;],n=100)
aucs = plot_roc(y_prob, y_test, clf, cvsm=cvsm, acc=acc)
plt.show()


##### Optimisation and general purpose usage
cd /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/
  sccaf -i /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/data.h5ad --optimise --skip-assessment -s L1_Round0 -a 0.796 -c 10 --produce-rounds-summary -o /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results.h5ad --optimisation-plots-output /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results.pdf


##### Parallel run of assessments
sccaf-assess -i /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results.h5ad -o /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/sccaf_assess_L1_Round0.txt --slot-for-existing-clustering L1_Round0 --iterations 20 --cores 16
sccaf-assess -i /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results.h5ad -o /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/sccaf_assess_L1_Round1.txt --slot-for-existing-clustering L1_Round1 --iterations 20 --cores 16
sccaf-assess -i /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results.h5ad -o /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/sccaf_assess_L1_Round2.txt --slot-for-existing-clustering L1_Round2 --iterations 20 --cores 16
sccaf-assess -i /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results.h5ad -o /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/sccaf_assess_L1_Round3.txt --slot-for-existing-clustering L1_Round3 --iterations 20 --cores 16


##### Merging parallel runs to produce plot
sccaf-assess-merger -i /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes -r /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/rounds.txt -o /Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/rounds-acc-comparison-plot.png


# python
import scanpy as sc
adata = sc.read(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results.h5ad&amp;quot;)
adata.write_csvs(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results&amp;quot;, sep=&#39;\t&#39;, skip_data=True)

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>6 - Metacell SCT</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/6_metacell_sct/</link>
      <pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://cbiagii.github.io/AdipoSNAP/post/6_metacell_sct/</guid>
      <description>&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)
library(future)
library(metacell)
library(ggpubr)
library(DropletUtils)
library(pheatmap)

## Convert an Seurat object to 10x format to input in metacell
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed.rds&amp;quot;)
write10xCounts(x = data@assays$RNA@counts, path = &amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/data&amp;quot;)


## Initializing a database
if(!dir.exists(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/db&amp;quot;)) dir.create(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/db&amp;quot;)
scdb_init(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/db&amp;quot;, force_reinit=T)

## Loading the data generated by the 10x conversion above
mcell_import_scmat_10x(&amp;quot;test1&amp;quot;, base_dir=&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/data&amp;quot;)
mat = scdb_mat(&amp;quot;test1&amp;quot;)

## Linking to a figure directory
if(!dir.exists(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/figs&amp;quot;)) dir.create(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/figs&amp;quot;)
scfigs_init(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/figs&amp;quot;)

## Plotting the distribution of UMI count per cell
mcell_plot_umis_per_cell(&amp;quot;test1&amp;quot;)

## Cleaning the data using a list of mitochondrial genes that typically mark cells as being stressed or dying, as well as immunoglobulin genes that may represent strong clonal signatures in plasma cells
mat = scdb_mat(&amp;quot;test1&amp;quot;)
nms = c(rownames(mat@mat), rownames(mat@ignore_gmat))
ig_genes = c(grep(&amp;quot;^Igj&amp;quot;, nms, v=T),
             grep(&amp;quot;^Igh&amp;quot;,nms,v=T),
             grep(&amp;quot;^Igk&amp;quot;, nms, v=T),
             grep(&amp;quot;^Igl&amp;quot;, nms, v=T))
bad_genes = unique(c(grep(&amp;quot;^mt-&amp;quot;, nms, v=T), grep(&amp;quot;^mtmr&amp;quot;, nms, v=T), grep(&amp;quot;^Mtnd&amp;quot;, nms, v=T),&amp;quot;NEAT1&amp;quot;,&amp;quot;TMSB4X&amp;quot;, &amp;quot;TMSB10&amp;quot;, ig_genes))
mcell_mat_ignore_genes(new_mat_id=&amp;quot;test1&amp;quot;, mat_id=&amp;quot;test1&amp;quot;, bad_genes, reverse=F)

## Eliminating cells with less than 700 UMIs
mcell_mat_ignore_small_cells(&amp;quot;test1&amp;quot;, &amp;quot;test1&amp;quot;, 700)

## Computing statistics on the distributions of each gene in the data, which are going to be our main tool for selecting feature genes
mcell_add_gene_stat(gstat_id=&amp;quot;test1&amp;quot;, mat_id=&amp;quot;test1&amp;quot;, force=T)

## We create a new object of type gset, to which all genes whose scaled variance (variance divided by mean) exceeds a given threshold are added:
mcell_gset_filter_varmean(gset_id=&amp;quot;test_feats&amp;quot;, gstat_id=&amp;quot;test1&amp;quot;, T_vm=0.08, force_new=T)
mcell_gset_filter_cov(gset_id = &amp;quot;test_feats&amp;quot;, gstat_id=&amp;quot;test1&amp;quot;, T_tot=100, T_top3=2)

## Plotting all genes and our selected gene set given the mean and variance statistics
mcell_plot_gstats(gstat_id=&amp;quot;test1&amp;quot;, gset_id=&amp;quot;test_feats&amp;quot;)

## Creating a similarity graph, using a construction called balanced K-nn graph
mcell_add_cgraph_from_mat_bknn(mat_id=&amp;quot;test1&amp;quot;,
                               gset_id = &amp;quot;test_feats&amp;quot;,
                               graph_id=&amp;quot;test_graph&amp;quot;,
                               K=150,
                               dsamp=F)

## Use the cgraph to sample 1000 metacell partitions, each covering 75% of the cells and organizing them in dense subgraphs
mcell_coclust_from_graph_resamp(
  coc_id=&amp;quot;test_coc500&amp;quot;,
  graph_id=&amp;quot;test_graph&amp;quot;,
  min_mc_size=20,
  p_resamp=0.75, n_resamp=1000)

## The co-clustering statistics are used to generate a new similarity graph, based on which accurate calling of the final set of metacells
mcell_mc_from_coclust_balanced(
  coc_id=&amp;quot;test_coc500&amp;quot;,
  mat_id= &amp;quot;test1&amp;quot;,
  mc_id= &amp;quot;test_mc&amp;quot;,
  K=20, min_mc_size=20, alpha=2)

## Splitting metacells whose underlying similarity structure supports the existence of multiple sub-clusters, and removes outlier cells that strongly deviate from their metacell&#39;s expression profile
mcell_plot_outlier_heatmap(mc_id=&amp;quot;test_mc&amp;quot;, mat_id = &amp;quot;test1&amp;quot;, T_lfc=3)
mcell_mc_split_filt(new_mc_id=&amp;quot;test_mc_f&amp;quot;,
                    mc_id=&amp;quot;test_mc&amp;quot;,
                    mat_id=&amp;quot;test1&amp;quot;,
                    T_lfc=3, plot_mats=F)

## The filtered metacell object test_mc_f can now be visualized. In order to do this effectively, we usually go through one or two iterations of selecting informative marker genes. The package can select markers for you automatically - by simply looking for genes that are strongly enriched in any of the metacells
mcell_gset_from_mc_markers(gset_id=&amp;quot;test_markers&amp;quot;, mc_id=&amp;quot;test_mc_f&amp;quot;)


## Running 1st Round with known markers
load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/db/mc.test_mc_f.Rda&amp;quot;)
lfp = log2(object@mc_fp)

marks_colors &amp;lt;- NULL
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;blue&amp;quot;, 1, 2))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial&amp;quot;, &amp;quot;Pecam1&amp;quot;, &amp;quot;green&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_1&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;#ff748c&amp;quot;, 1, 0.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_2&amp;quot;, &amp;quot;Cd19&amp;quot;, &amp;quot;#ff8fa3&amp;quot;, 1, 0.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_1&amp;quot;, &amp;quot;Cd34&amp;quot;, &amp;quot;#ffa500&amp;quot;, 1, 2))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_2&amp;quot;, &amp;quot;Pdgfra&amp;quot;, &amp;quot;#ffb732&amp;quot;, 1, 2))
marks_colors &amp;lt;- as.data.frame(marks_colors)
colnames(marks_colors) &amp;lt;- c(&amp;quot;group&amp;quot;, &amp;quot;gene&amp;quot;, &amp;quot;color&amp;quot;, &amp;quot;priority&amp;quot;, &amp;quot;T_fold&amp;quot;)
marks_colors$priority &amp;lt;- as.integer(marks_colors$priority)
marks_colors$T_fold &amp;lt;- as.numeric(marks_colors$T_fold)

mc = scdb_mc(&amp;quot;test_mc_f&amp;quot;)
gset = scdb_gset(&amp;quot;test_markers&amp;quot;)

gene_folds = mc@mc_fp

good_marks = intersect(names(gset@gene_set), rownames(mc@mc_fp))
mc_ord = 1:ncol(mc@mc_fp)

mat = log2(gene_folds[good_marks, mc_ord])
mat = pmax(pmin(mat, 3), -3)

## Selecting best markers for adipocyte cells
mat_A &amp;lt;- mat[, which(mc@colors == &amp;quot;blue&amp;quot;)]
mat_A &amp;lt;- mat_A[rowSums(mat_A) &amp;gt; quantile(rowSums(mat_A), 0.9), ]
rowMeans(mat_A[names(head(sort(rowSums(mat_A), decreasing = T), 5)), ])

## Selecting best markers for endothelial cells
mat_E &amp;lt;- mat[, which(mc@colors == &amp;quot;green&amp;quot;)]
mat_E &amp;lt;- mat_E[rowSums(mat_E) &amp;gt; quantile(rowSums(mat_E), 0.9), ]
rowMeans(mat_E[names(head(sort(rowSums(mat_E), decreasing = T), 5)), ])

## Selecting best markers for immune cells
mat_I &amp;lt;- mat[, which(mc@colors %in% c(&amp;quot;#ff748c&amp;quot;, &amp;quot;#ff8fa3&amp;quot;))]
mat_I &amp;lt;- mat_I[rowSums(mat_I) &amp;gt; quantile(rowSums(mat_I), 0.9), ]
rowMeans(mat_I[names(head(sort(rowSums(mat_I), decreasing = T), 5)), ])

## Selecting best markers for progenitor cells
mat_P &amp;lt;- mat[, which(mc@colors %in% c(&amp;quot;#ffa500&amp;quot;, &amp;quot;#ffb732&amp;quot;))]
mat_P &amp;lt;- mat_P[rowSums(mat_P) &amp;gt; quantile(rowSums(mat_P), 0.9), ]
rowMeans(mat_P[names(head(sort(rowSums(mat_P), decreasing = T), 5)), ])

## Plotting heatmat to check the found markers
items &amp;lt;- list(Adipocytes = mat_A, Endothelials = mat_E, Immunes = mat_I, Progenitors = mat_P)
plot_list=list()
for (i in 1:length(items)){
  x &amp;lt;- pheatmap(items[[i]], fontsize = 6, main = names(items)[i], legend = FALSE, treeheight_row = 0, treeheight_col = 0)
  plot_list[[i]] = x[[4]]
}
gggpubr(plotlist = plot_list, ncol = 2)


## Running 2nd round with unsupervised markers provided by metacell
marks_colors &amp;lt;- NULL
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_1&amp;quot;, &amp;quot;Acsl1&amp;quot;, &amp;quot;#0000b3&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_2&amp;quot;, &amp;quot;Plin4&amp;quot;, &amp;quot;#0000cc&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_3&amp;quot;, &amp;quot;Mlxipl&amp;quot;, &amp;quot;#0000e6&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_4&amp;quot;, &amp;quot;Pck1&amp;quot;, &amp;quot;#0000ff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_5&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;#1a1aff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_1&amp;quot;, &amp;quot;Btnl9&amp;quot;, &amp;quot;#00cd00&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_2&amp;quot;, &amp;quot;Ushbp1&amp;quot;, &amp;quot;#00b300&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_3&amp;quot;, &amp;quot;Egfl7&amp;quot;, &amp;quot;#009a00&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_4&amp;quot;, &amp;quot;Mcf2l&amp;quot;, &amp;quot;#008000&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_5&amp;quot;, &amp;quot;Ptprb&amp;quot;, &amp;quot;#006700&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_1&amp;quot;, &amp;quot;Zeb2&amp;quot;, &amp;quot;#ff7f7f&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_2&amp;quot;, &amp;quot;Trps1&amp;quot;, &amp;quot;#ff6666&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_3&amp;quot;, &amp;quot;Runx1&amp;quot;, &amp;quot;#ff4c4c&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_4&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;#ff3232&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_5&amp;quot;, &amp;quot;Adap2&amp;quot;, &amp;quot;#ff1919&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_1&amp;quot;, &amp;quot;Dcn&amp;quot;, &amp;quot;#ffff4d&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_2&amp;quot;, &amp;quot;Celf2&amp;quot;, &amp;quot;#ffff33&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_3&amp;quot;, &amp;quot;Meg3&amp;quot;, &amp;quot;#ffff1a&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_4&amp;quot;, &amp;quot;Col1a2&amp;quot;, &amp;quot;#ffff00&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_5&amp;quot;, &amp;quot;Col3a1&amp;quot;, &amp;quot;#e6e600&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- as.data.frame(marks_colors)
colnames(marks_colors) &amp;lt;- c(&amp;quot;group&amp;quot;, &amp;quot;gene&amp;quot;, &amp;quot;color&amp;quot;, &amp;quot;priority&amp;quot;, &amp;quot;T_fold&amp;quot;)
marks_colors$priority &amp;lt;- as.integer(marks_colors$priority)
marks_colors$T_fold &amp;lt;- as.numeric(marks_colors$T_fold)

mc_colorize(&amp;quot;test_mc_f&amp;quot;, marker_colors=marks_colors)
mc = scdb_mc(&amp;quot;test_mc_f&amp;quot;)

## We can use the colors to produce a labeled heat map, showing selected genes and their distributions over metacells, with the colored annotation shown at the bottom
mcell_mc_plot_marks(mc_id=&amp;quot;test_mc_f&amp;quot;, gset_id=&amp;quot;test_markers&amp;quot;, mat_id=&amp;quot;test1&amp;quot;)

lfp = log2(mc@mc_fp)

## Projecting metacells and cells in 2D
mcell_mc2d_force_knn(mc2d_id=&amp;quot;test_2dproj&amp;quot;,mc_id=&amp;quot;test_mc_f&amp;quot;, graph_id=&amp;quot;test_graph&amp;quot;)
tgconfig::set_param(&amp;quot;mcell_mc2d_height&amp;quot;,1000, &amp;quot;metacell&amp;quot;)
tgconfig::set_param(&amp;quot;mcell_mc2d_width&amp;quot;,1000, &amp;quot;metacell&amp;quot;)
mcell_mc2d_plot(mc2d_id=&amp;quot;test_2dproj&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>7 - SCT Preprocessing</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/7_sct_preprocess/</link>
      <pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://cbiagii.github.io/AdipoSNAP/post/7_sct_preprocess/</guid>
      <description>&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)
library(SeuratWrappers)
library(future)

## Setting up the threads for 12 workers
options(future.globals.maxSize = +Inf)
plan(&amp;quot;multiprocess&amp;quot;, workers = 12)

## Loading data Cellranger output format
data &amp;lt;- Read10X(&amp;quot;/Users/biagi/PhD/AdipoSNAP/data/10x/&amp;quot;)

## Reading metadata annotation
anno &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/data/GSE133486_10XAdiposeNuclei.metaData.tsv&amp;quot;)

## Creating Seurat object
data &amp;lt;- CreateSeuratObject(counts = data,
                           project = &amp;quot;10x&amp;quot;, 
                           meta.data = anno, 
                           min.cells = 3,
                           min.features = 200)

## Subset remaining only N condition
data &amp;lt;- subset(data, cells = rownames(data@meta.data)[which(data@meta.data$condition == &amp;quot;N&amp;quot;)])

## Cell cycle genes
m.s.genes &amp;lt;- c(&amp;quot;Gmnn&amp;quot;, &amp;quot;Rad51&amp;quot;, &amp;quot;Prim1&amp;quot;, &amp;quot;Dscc1&amp;quot;, &amp;quot;Cdca7&amp;quot;, &amp;quot;Slbp&amp;quot;, &amp;quot;Mcm7&amp;quot;, &amp;quot;Cenpu&amp;quot;, &amp;quot;Pold3&amp;quot;, 
               &amp;quot;Ccne2&amp;quot;, &amp;quot;Mcm4&amp;quot;, &amp;quot;Polr1b&amp;quot;, &amp;quot;Fen1&amp;quot;, &amp;quot;Rad51ap1&amp;quot;, &amp;quot;Tyms&amp;quot;, &amp;quot;Usp1&amp;quot;, &amp;quot;Rrm2&amp;quot;, &amp;quot;Wdr76&amp;quot;, 
               &amp;quot;Dtl&amp;quot;, &amp;quot;Rrm1&amp;quot;, &amp;quot;Gins2&amp;quot;, &amp;quot;Tipin&amp;quot;, &amp;quot;Hells&amp;quot;, &amp;quot;Ubr7&amp;quot;, &amp;quot;Chaf1b&amp;quot;, &amp;quot;Clspn&amp;quot;, &amp;quot;E2f8&amp;quot;, &amp;quot;Mcm5&amp;quot;, 
               &amp;quot;Nasp&amp;quot;, &amp;quot;Pcna&amp;quot;, &amp;quot;Mrpl36&amp;quot;, &amp;quot;Rfc2&amp;quot;, &amp;quot;Cdc45&amp;quot;, &amp;quot;Casp8ap2&amp;quot;, &amp;quot;Mcm6&amp;quot;, &amp;quot;Exo1&amp;quot;, &amp;quot;Pola1&amp;quot;, &amp;quot;Cdc6&amp;quot;, 
               &amp;quot;Ung&amp;quot;, &amp;quot;Uhrf1&amp;quot;, &amp;quot;Blm&amp;quot;, &amp;quot;Msh2&amp;quot;)
m.g2m.genes &amp;lt;- c(&amp;quot;Cdk1&amp;quot;, &amp;quot;Tmpo&amp;quot;, &amp;quot;Smc4&amp;quot;, &amp;quot;Tacc3&amp;quot;, &amp;quot;Mki67&amp;quot;, &amp;quot;Ckap2l&amp;quot;, &amp;quot;Cks2&amp;quot;, &amp;quot;Cdc25c&amp;quot;, &amp;quot;Nusap1&amp;quot;, &amp;quot;Kif11&amp;quot;, 
                 &amp;quot;Top2a&amp;quot;, &amp;quot;Cdca3&amp;quot;, &amp;quot;Cks1b&amp;quot;, &amp;quot;Ect2&amp;quot;, &amp;quot;Ckap5&amp;quot;, &amp;quot;Ckap2&amp;quot;, &amp;quot;Cenpa&amp;quot;, &amp;quot;Cdca2&amp;quot;, &amp;quot;Ncapd2&amp;quot;, &amp;quot;Aurkb&amp;quot;, 
                 &amp;quot;Cenpf&amp;quot;, &amp;quot;Gtse1&amp;quot;, &amp;quot;Birc5&amp;quot;, &amp;quot;Bub1&amp;quot;, &amp;quot;Cdca8&amp;quot;, &amp;quot;Anp32e&amp;quot;, &amp;quot;Rangap1&amp;quot;, &amp;quot;Tpx2&amp;quot;, &amp;quot;Hjurp&amp;quot;, &amp;quot;Lbr&amp;quot;, 
                 &amp;quot;Dlgap5&amp;quot;, &amp;quot;Psrc1&amp;quot;, &amp;quot;Ndc80&amp;quot;, &amp;quot;Nek2&amp;quot;, &amp;quot;Cbx5&amp;quot;, &amp;quot;Ube2c&amp;quot;, &amp;quot;Gas2l3&amp;quot;, &amp;quot;G2e3&amp;quot;, &amp;quot;Cdc20&amp;quot;, &amp;quot;Hmgb2&amp;quot;, 
                 &amp;quot;Cenpe&amp;quot;, &amp;quot;Nuf2&amp;quot;, &amp;quot;Anln&amp;quot;, &amp;quot;Ttk&amp;quot;, &amp;quot;Kif2c&amp;quot;, &amp;quot;Kif20b&amp;quot;, &amp;quot;Aurka&amp;quot;, &amp;quot;Hmmr&amp;quot;, &amp;quot;Pimreg&amp;quot;, &amp;quot;Cks1brt&amp;quot;, 
                 &amp;quot;Tubb4b&amp;quot;, &amp;quot;Kif23&amp;quot;, &amp;quot;Ccnb2&amp;quot;, &amp;quot;Ctcf&amp;quot;)

## nFeature_RNA based cell thresholding
data &amp;lt;- subset(data, subset = nFeature_RNA &amp;gt; 200 &amp;amp; nFeature_RNA &amp;lt; 3000)

## Scoring cell cycle phases
data &amp;lt;- CellCycleScoring(data, s.features = m.s.genes, g2m.features = m.g2m.genes, set.ident = TRUE)

## Using regularized negative binomial regression to normalize UMI count data regressing out nCount_RNA, S.Score and G2M.Score variables
data &amp;lt;- SCTransform(data, vars.to.regress = c(&amp;quot;nCount_RNA&amp;quot;, &amp;quot;S.Score&amp;quot;, &amp;quot;G2M.Score&amp;quot;), verbose = TRUE)

## Running PCA
data &amp;lt;- RunPCA(data)

## Defining the best number of PC that has a explained variance greater than 80%
dp &amp;lt;- data@reductions$pca@stdev
dp &amp;lt;- dp^2
for (z in 1:length(dp)) {
  soma &amp;lt;- sum(dp[1:z])/sum(dp)
  if (soma &amp;gt;= 0.8) {
    best_pc &amp;lt;- z
    break()
  }
}

## Clustering
data &amp;lt;- FindNeighbors(data, dims = 1:best_pc)
data &amp;lt;- FindClusters(data)

## RunUMAP
data &amp;lt;- RunUMAP(data, dims = 1:best_pc)

## RunTSNE
data &amp;lt;- RunTSNE(data, dims = 1:best_pc, max_iter = 2000, perplexity = 30, verbose = T)

## Saving RDS file
saveRDS(data, &amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed.rds&amp;quot;)

## Running Adaptively-thresholded Low Rank Approximation (ALRA)
data &amp;lt;- SeuratWrappers::RunALRA(data)
saveRDS(data, &amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed_ALRA.rds&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>8 - SCCAF Adipocytes</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/8_sccaf_adipocytes/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://cbiagii.github.io/AdipoSNAP/post/8_sccaf_adipocytes/</guid>
      <description>&lt;pre&gt;&lt;code&gt;library(Seurat)
source(&amp;quot;/projects/cangen/coliveir/SeuratToH5ad.R&amp;quot;)
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
SeuratToH5ad(data, &amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/data.h5ad&amp;quot;, &amp;quot;RNA&amp;quot;, 1)


# python to define the optimal accuracy number
import warnings
warnings.filterwarnings(&amp;quot;ignore&amp;quot;)
from SCCAF import *

ad = sc.read(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/data.h5ad&amp;quot;)

y_prob, y_pred, y_test, clf, cvsm, acc = SCCAF_assessment(ad.X, ad.obs[&#39;L1_Round0&#39;],n=100)
aucs = plot_roc(y_prob, y_test, clf, cvsm=cvsm, acc=acc)
plt.show()




##### Optimisation and general purpose usage
cd /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/
sccaf -i /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/data.h5ad --optimise --skip-assessment -s L1_Round0 -a 0.669 -c 10 --produce-rounds-summary -o /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results.h5ad --optimisation-plots-output /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results.pdf


##### Parallel run of assessments
sccaf-assess -i /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results.h5ad -o /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/sccaf_assess_L1_Round0.txt --slot-for-existing-clustering L1_Round0 --iterations 20 --cores 16
sccaf-assess -i /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results.h5ad -o /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/sccaf_assess_L1_Round1.txt --slot-for-existing-clustering L1_Round1 --iterations 20 --cores 16
sccaf-assess -i /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results.h5ad -o /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/sccaf_assess_L1_Round2.txt --slot-for-existing-clustering L1_Round2 --iterations 20 --cores 16


##### Merging parallel runs to produce plot
sccaf-assess-merger -i /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly -r /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/rounds.txt -o /Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/rounds-acc-comparison-plot.png



# python
import scanpy as sc
adata = sc.read(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results.h5ad&amp;quot;)
adata.write_csvs(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results&amp;quot;, sep=&#39;\t&#39;, skip_data=True)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>9 - Adipocytes Preprocessing</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/9_adipocytes_preprocess/</link>
      <pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://cbiagii.github.io/AdipoSNAP/post/9_adipocytes_preprocess/</guid>
      <description>&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)

## Loading metacell results
marks_colors &amp;lt;- NULL
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_1&amp;quot;, &amp;quot;Acsl1&amp;quot;, &amp;quot;#0000b3&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_2&amp;quot;, &amp;quot;Plin4&amp;quot;, &amp;quot;#0000cc&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_3&amp;quot;, &amp;quot;Mlxipl&amp;quot;, &amp;quot;#0000e6&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_4&amp;quot;, &amp;quot;Pck1&amp;quot;, &amp;quot;#0000ff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_5&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;#1a1aff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_1&amp;quot;, &amp;quot;Btnl9&amp;quot;, &amp;quot;#00cd00&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_2&amp;quot;, &amp;quot;Ushbp1&amp;quot;, &amp;quot;#00b300&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_3&amp;quot;, &amp;quot;Egfl7&amp;quot;, &amp;quot;#009a00&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_4&amp;quot;, &amp;quot;Mcf2l&amp;quot;, &amp;quot;#008000&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_5&amp;quot;, &amp;quot;Ptprb&amp;quot;, &amp;quot;#006700&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_1&amp;quot;, &amp;quot;Zeb2&amp;quot;, &amp;quot;#ff7f7f&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_2&amp;quot;, &amp;quot;Trps1&amp;quot;, &amp;quot;#ff6666&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_3&amp;quot;, &amp;quot;Runx1&amp;quot;, &amp;quot;#ff4c4c&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_4&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;#ff3232&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_5&amp;quot;, &amp;quot;Adap2&amp;quot;, &amp;quot;#ff1919&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_1&amp;quot;, &amp;quot;Dcn&amp;quot;, &amp;quot;#ffff4d&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_2&amp;quot;, &amp;quot;Celf2&amp;quot;, &amp;quot;#ffff33&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_3&amp;quot;, &amp;quot;Meg3&amp;quot;, &amp;quot;#ffff1a&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_4&amp;quot;, &amp;quot;Col1a2&amp;quot;, &amp;quot;#ffff00&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_5&amp;quot;, &amp;quot;Col3a1&amp;quot;, &amp;quot;#e6e600&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- as.data.frame(marks_colors)
colnames(marks_colors) &amp;lt;- c(&amp;quot;group&amp;quot;, &amp;quot;gene&amp;quot;, &amp;quot;color&amp;quot;, &amp;quot;priority&amp;quot;, &amp;quot;T_fold&amp;quot;)
marks_colors$priority &amp;lt;- as.integer(marks_colors$priority)
marks_colors$T_fold &amp;lt;- as.numeric(marks_colors$T_fold)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/db/mc2d.test_2dproj.Rda&amp;quot;)
dims &amp;lt;- data.frame(x = object@sc_x, 
                   y = object@sc_y)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/db/mc.test_mc_f.Rda&amp;quot;)
tmp1 &amp;lt;- data.frame(cells = names(object@mc), cols = object@mc)
tmp2 &amp;lt;- data.frame(cols = object@colors)
teste &amp;lt;- merge(tmp1, tmp2, by.x = &amp;quot;cols&amp;quot;, by.y = &amp;quot;row.names&amp;quot;)
teste$cols &amp;lt;- NULL

teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Adipocyte&amp;quot;, marks_colors$group)], &amp;quot;Adipocytes&amp;quot;, &amp;quot;Unknown&amp;quot;)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Progenitor&amp;quot;, marks_colors$group)], &amp;quot;Progenitors&amp;quot;, teste$cellType)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Immune&amp;quot;, marks_colors$group)], &amp;quot;Immunes&amp;quot;, teste$cellType)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Endothelial&amp;quot;, marks_colors$group)], &amp;quot;Endothelials&amp;quot;, teste$cellType)
tab &amp;lt;- merge(dims, teste, by.x = &amp;quot;row.names&amp;quot;, by.y = &amp;quot;cells&amp;quot;)

## Assign sccaf clusters to metacell results
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- as.factor(new_cluster)
data$clusters_sccaf &amp;lt;- new_cluster

infos &amp;lt;- data@meta.data
infos &amp;lt;- infos[tab$Row.names, ]

final &amp;lt;- merge(infos, tab, by.x = &amp;quot;row.names&amp;quot;, by.y = &amp;quot;Row.names&amp;quot;)

Idents(data) &amp;lt;- data$clusters_sccaf
new.cluster.ids &amp;lt;- c(&amp;quot;E1&amp;quot;, &amp;quot;P1&amp;quot;, &amp;quot;P2&amp;quot;, &amp;quot;A1&amp;quot;, &amp;quot;A2&amp;quot;, &amp;quot;P3&amp;quot;, &amp;quot;P4&amp;quot;, &amp;quot;I1&amp;quot;, &amp;quot;A3&amp;quot;, &amp;quot;A4&amp;quot;, &amp;quot;E2&amp;quot;, &amp;quot;I2&amp;quot;, &amp;quot;I3&amp;quot;, &amp;quot;P5&amp;quot;)
names(new.cluster.ids) &amp;lt;- levels(data)
data &amp;lt;- RenameIdents(data, new.cluster.ids)
Idents(data) &amp;lt;- factor(Idents(data), levels = c(&#39;A1&#39;, &#39;A2&#39;, &#39;A3&#39;, &#39;A4&#39;, &#39;E1&#39;, &#39;E2&#39;, &#39;I1&#39;, &#39;I2&#39;, &#39;I3&#39;, &#39;P1&#39;, &#39;P2&#39;, &#39;P3&#39;, &#39;P4&#39;, &#39;P5&#39;))

## Selecting only the 4 adipocytes clusters
cells &amp;lt;- names(Idents(data))[which(Idents(data) == &amp;quot;A1&amp;quot; | Idents(data) == &amp;quot;A2&amp;quot; | Idents(data) == &amp;quot;A3&amp;quot; | Idents(data) == &amp;quot;A4&amp;quot;)]

## Subsetting adipocyte clusters from all
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_Processed.rds&amp;quot;)
data &amp;lt;- subset(data, cells = cells)

## Cell cycle genes
m.s.genes &amp;lt;- c(&amp;quot;Gmnn&amp;quot;, &amp;quot;Rad51&amp;quot;, &amp;quot;Prim1&amp;quot;, &amp;quot;Dscc1&amp;quot;, &amp;quot;Cdca7&amp;quot;, &amp;quot;Slbp&amp;quot;, &amp;quot;Mcm7&amp;quot;, &amp;quot;Cenpu&amp;quot;, &amp;quot;Pold3&amp;quot;, 
               &amp;quot;Ccne2&amp;quot;, &amp;quot;Mcm4&amp;quot;, &amp;quot;Polr1b&amp;quot;, &amp;quot;Fen1&amp;quot;, &amp;quot;Rad51ap1&amp;quot;, &amp;quot;Tyms&amp;quot;, &amp;quot;Usp1&amp;quot;, &amp;quot;Rrm2&amp;quot;, &amp;quot;Wdr76&amp;quot;, 
               &amp;quot;Dtl&amp;quot;, &amp;quot;Rrm1&amp;quot;, &amp;quot;Gins2&amp;quot;, &amp;quot;Tipin&amp;quot;, &amp;quot;Hells&amp;quot;, &amp;quot;Ubr7&amp;quot;, &amp;quot;Chaf1b&amp;quot;, &amp;quot;Clspn&amp;quot;, &amp;quot;E2f8&amp;quot;, &amp;quot;Mcm5&amp;quot;, 
               &amp;quot;Nasp&amp;quot;, &amp;quot;Pcna&amp;quot;, &amp;quot;Mrpl36&amp;quot;, &amp;quot;Rfc2&amp;quot;, &amp;quot;Cdc45&amp;quot;, &amp;quot;Casp8ap2&amp;quot;, &amp;quot;Mcm6&amp;quot;, &amp;quot;Exo1&amp;quot;, &amp;quot;Pola1&amp;quot;, &amp;quot;Cdc6&amp;quot;, 
               &amp;quot;Ung&amp;quot;, &amp;quot;Uhrf1&amp;quot;, &amp;quot;Blm&amp;quot;, &amp;quot;Msh2&amp;quot;)
m.g2m.genes &amp;lt;- c(&amp;quot;Cdk1&amp;quot;, &amp;quot;Tmpo&amp;quot;, &amp;quot;Smc4&amp;quot;, &amp;quot;Tacc3&amp;quot;, &amp;quot;Mki67&amp;quot;, &amp;quot;Ckap2l&amp;quot;, &amp;quot;Cks2&amp;quot;, &amp;quot;Cdc25c&amp;quot;, &amp;quot;Nusap1&amp;quot;, &amp;quot;Kif11&amp;quot;, 
                 &amp;quot;Top2a&amp;quot;, &amp;quot;Cdca3&amp;quot;, &amp;quot;Cks1b&amp;quot;, &amp;quot;Ect2&amp;quot;, &amp;quot;Ckap5&amp;quot;, &amp;quot;Ckap2&amp;quot;, &amp;quot;Cenpa&amp;quot;, &amp;quot;Cdca2&amp;quot;, &amp;quot;Ncapd2&amp;quot;, &amp;quot;Aurkb&amp;quot;, 
                 &amp;quot;Cenpf&amp;quot;, &amp;quot;Gtse1&amp;quot;, &amp;quot;Birc5&amp;quot;, &amp;quot;Bub1&amp;quot;, &amp;quot;Cdca8&amp;quot;, &amp;quot;Anp32e&amp;quot;, &amp;quot;Rangap1&amp;quot;, &amp;quot;Tpx2&amp;quot;, &amp;quot;Hjurp&amp;quot;, &amp;quot;Lbr&amp;quot;, 
                 &amp;quot;Dlgap5&amp;quot;, &amp;quot;Psrc1&amp;quot;, &amp;quot;Ndc80&amp;quot;, &amp;quot;Nek2&amp;quot;, &amp;quot;Cbx5&amp;quot;, &amp;quot;Ube2c&amp;quot;, &amp;quot;Gas2l3&amp;quot;, &amp;quot;G2e3&amp;quot;, &amp;quot;Cdc20&amp;quot;, &amp;quot;Hmgb2&amp;quot;, 
                 &amp;quot;Cenpe&amp;quot;, &amp;quot;Nuf2&amp;quot;, &amp;quot;Anln&amp;quot;, &amp;quot;Ttk&amp;quot;, &amp;quot;Kif2c&amp;quot;, &amp;quot;Kif20b&amp;quot;, &amp;quot;Aurka&amp;quot;, &amp;quot;Hmmr&amp;quot;, &amp;quot;Pimreg&amp;quot;, &amp;quot;Cks1brt&amp;quot;, 
                 &amp;quot;Tubb4b&amp;quot;, &amp;quot;Kif23&amp;quot;, &amp;quot;Ccnb2&amp;quot;, &amp;quot;Ctcf&amp;quot;)

## nFeature_RNA based cell thresholding
data &amp;lt;- subset(data, subset = nFeature_RNA &amp;lt; 2000)

## Scoring cell cycle phases
data &amp;lt;- CellCycleScoring(data, s.features = m.s.genes, g2m.features = m.g2m.genes, set.ident = TRUE)

## Using regularized negative binomial regression to normalize UMI count data regressing out nCount_RNA, S.Score and G2M.Score variables
data &amp;lt;- SCTransform(data, vars.to.regress = c(&amp;quot;nCount_RNA&amp;quot;, &amp;quot;S.Score&amp;quot;, &amp;quot;G2M.Score&amp;quot;), verbose = TRUE)

## Running PCA
data &amp;lt;- RunPCA(data)

## Defining the best number of PC that has a explained variance greater than 80%
dp &amp;lt;- data@reductions$pca@stdev
dp &amp;lt;- dp^2
for (z in 1:length(dp)) {
  soma &amp;lt;- sum(dp[1:z])/sum(dp)
  if (soma &amp;gt;= 0.8) {
    best_pc &amp;lt;- z
    break()
  }
}

## RunUMAP
data &amp;lt;- RunUMAP(data, dims = 1:best_pc)

## RunTSNE
data &amp;lt;- RunTSNE(data, dims = 1:best_pc, max_iter = 2000, perplexity = 30, verbose = T)

## Saving RDS file
saveRDS(data, &amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>10 - Main Figures</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/10_main_figures/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://cbiagii.github.io/AdipoSNAP/post/10_main_figures/</guid>
      <description>&lt;h2 id=&#34;figure-1&#34;&gt;Figure 1&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Loading R packages
library(metacell)
library(Seurat)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(ggpubr)
library(enrichR)
library(glue)
library(ggtext)


#################################
########### Figure 1B ###########
#################################
marks_colors &amp;lt;- NULL
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_1&amp;quot;, &amp;quot;Acsl1&amp;quot;, &amp;quot;#0000b3&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_2&amp;quot;, &amp;quot;Plin4&amp;quot;, &amp;quot;#0000cc&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_3&amp;quot;, &amp;quot;Mlxipl&amp;quot;, &amp;quot;#0000e6&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_4&amp;quot;, &amp;quot;Pck1&amp;quot;, &amp;quot;#0000ff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_5&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;#1a1aff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_1&amp;quot;, &amp;quot;Btnl9&amp;quot;, &amp;quot;#00cd00&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_2&amp;quot;, &amp;quot;Ushbp1&amp;quot;, &amp;quot;#00b300&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_3&amp;quot;, &amp;quot;Egfl7&amp;quot;, &amp;quot;#009a00&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_4&amp;quot;, &amp;quot;Mcf2l&amp;quot;, &amp;quot;#008000&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_5&amp;quot;, &amp;quot;Ptprb&amp;quot;, &amp;quot;#006700&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_1&amp;quot;, &amp;quot;Zeb2&amp;quot;, &amp;quot;#ff7f7f&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_2&amp;quot;, &amp;quot;Trps1&amp;quot;, &amp;quot;#ff6666&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_3&amp;quot;, &amp;quot;Runx1&amp;quot;, &amp;quot;#ff4c4c&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_4&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;#ff3232&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_5&amp;quot;, &amp;quot;Adap2&amp;quot;, &amp;quot;#ff1919&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_1&amp;quot;, &amp;quot;Dcn&amp;quot;, &amp;quot;#ffff4d&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_2&amp;quot;, &amp;quot;Celf2&amp;quot;, &amp;quot;#ffff33&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_3&amp;quot;, &amp;quot;Meg3&amp;quot;, &amp;quot;#ffff1a&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_4&amp;quot;, &amp;quot;Col1a2&amp;quot;, &amp;quot;#ffff00&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_5&amp;quot;, &amp;quot;Col3a1&amp;quot;, &amp;quot;#e6e600&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- as.data.frame(marks_colors)
colnames(marks_colors) &amp;lt;- c(&amp;quot;group&amp;quot;, &amp;quot;gene&amp;quot;, &amp;quot;color&amp;quot;, &amp;quot;priority&amp;quot;, &amp;quot;T_fold&amp;quot;)
marks_colors$priority &amp;lt;- as.integer(marks_colors$priority)
marks_colors$T_fold &amp;lt;- as.numeric(marks_colors$T_fold)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/db/mc2d.test_2dproj.Rda&amp;quot;)
dims &amp;lt;- data.frame(x = object@sc_x,
                   y = object@sc_y)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/db/mc.test_mc_f.Rda&amp;quot;)
tmp1 &amp;lt;- data.frame(cells = names(object@mc), cols = object@mc)
tmp2 &amp;lt;- data.frame(cols = object@colors)
teste &amp;lt;- merge(tmp1, tmp2, by.x = &amp;quot;cols&amp;quot;, by.y = &amp;quot;row.names&amp;quot;)
teste$cols &amp;lt;- NULL

teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Adipocyte&amp;quot;, marks_colors$group)], &amp;quot;Adipocytes&amp;quot;, &amp;quot;Unknown&amp;quot;)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Progenitor&amp;quot;, marks_colors$group)], &amp;quot;Progenitors&amp;quot;, teste$cellType)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Immune&amp;quot;, marks_colors$group)], &amp;quot;Immunes&amp;quot;, teste$cellType)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Endothelial&amp;quot;, marks_colors$group)], &amp;quot;Endothelials&amp;quot;, teste$cellType)
tab &amp;lt;- merge(dims, teste, by.x = &amp;quot;row.names&amp;quot;, by.y = &amp;quot;cells&amp;quot;)

data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- as.factor(new_cluster)
data$clusters_sccaf &amp;lt;- new_cluster

infos &amp;lt;- data@meta.data
infos &amp;lt;- infos[tab$Row.names, ]

final &amp;lt;- merge(infos, tab, by.x = &amp;quot;row.names&amp;quot;, by.y = &amp;quot;Row.names&amp;quot;)

A &amp;lt;- subset(final, cellType == &amp;quot;Adipocytes&amp;quot;)
E &amp;lt;- subset(final, cellType == &amp;quot;Endothelials&amp;quot;)
I &amp;lt;- subset(final, cellType == &amp;quot;Immunes&amp;quot;)
P &amp;lt;- subset(final, cellType == &amp;quot;Progenitors&amp;quot;)

Idents(data) &amp;lt;- data$clusters_sccaf
new.cluster.ids &amp;lt;- c(&amp;quot;EN1&amp;quot;, &amp;quot;PG1&amp;quot;, &amp;quot;PG2&amp;quot;, &amp;quot;AD1&amp;quot;, &amp;quot;AD2&amp;quot;, &amp;quot;PG3&amp;quot;, &amp;quot;PG4&amp;quot;, &amp;quot;IM1&amp;quot;, &amp;quot;AD3&amp;quot;, &amp;quot;AD4&amp;quot;, &amp;quot;EN2&amp;quot;, &amp;quot;IM2&amp;quot;, &amp;quot;IM3&amp;quot;, &amp;quot;PG5&amp;quot;)
names(new.cluster.ids) &amp;lt;- levels(data)
data &amp;lt;- RenameIdents(data, new.cluster.ids)
Idents(data) &amp;lt;- factor(Idents(data), levels = c(&#39;AD1&#39;, &#39;AD2&#39;, &#39;AD3&#39;, &#39;AD4&#39;, &#39;EN1&#39;, &#39;EN2&#39;, &#39;IM1&#39;, &#39;IM2&#39;, &#39;IM3&#39;, &#39;PG1&#39;, &#39;PG2&#39;, &#39;PG3&#39;, &#39;PG4&#39;, &#39;PG5&#39;))

cls &amp;lt;- c(&amp;quot;#FFA500&amp;quot;, &amp;quot;#ffae19&amp;quot;, &amp;quot;#ffb732&amp;quot;, &amp;quot;#ffc04c&amp;quot;, &amp;quot;#66b266&amp;quot;, &amp;quot;#7fbf7f&amp;quot;, &amp;quot;#ffa3a3&amp;quot;, &amp;quot;#ffadad&amp;quot;, &amp;quot;#ffb7b7&amp;quot;, &amp;quot;#4043ff&amp;quot;, &amp;quot;#6666ff&amp;quot;, &amp;quot;#7f7fff&amp;quot;, &amp;quot;#9999ff&amp;quot;, &amp;quot;#adadff&amp;quot;)

TSNEPlot(data, label = FALSE, pt.size = 0.3, cols = cls) +
  xlab(&amp;quot;t-SNE 1&amp;quot;) + ylab(&amp;quot;t-SNE 2&amp;quot;) +
  theme_classic() + labs(color = &amp;quot;Cell Type&amp;quot;) +
  theme(legend.position=&amp;quot;bottom&amp;quot;)


a &amp;lt;- round((sum(Idents(data) == &amp;quot;AD1&amp;quot; | Idents(data) == &amp;quot;AD2&amp;quot; | Idents(data) == &amp;quot;AD3&amp;quot; | Idents(data) == &amp;quot;AD4&amp;quot;)/ncol(data))*100, 2); a1 &amp;lt;- sum(Idents(data) == &amp;quot;AD1&amp;quot; | Idents(data) == &amp;quot;AD2&amp;quot; | Idents(data) == &amp;quot;AD3&amp;quot; | Idents(data) == &amp;quot;AD4&amp;quot;)
b &amp;lt;- round((sum(Idents(data) == &amp;quot;EN1&amp;quot; | Idents(data) == &amp;quot;EN2&amp;quot;)/ncol(data))*100, 2); b1 &amp;lt;- sum(Idents(data) == &amp;quot;EN1&amp;quot; | Idents(data) == &amp;quot;EN2&amp;quot;)
c &amp;lt;- round((sum(Idents(data) == &amp;quot;IM1&amp;quot; | Idents(data) == &amp;quot;IM2&amp;quot; | Idents(data) == &amp;quot;IM3&amp;quot; | Idents(data) == &amp;quot;IM4&amp;quot;)/ncol(data))*100, 2); c1 &amp;lt;- sum(Idents(data) == &amp;quot;IM1&amp;quot; | Idents(data) == &amp;quot;IM2&amp;quot; | Idents(data) == &amp;quot;IM3&amp;quot; | Idents(data) == &amp;quot;IM4&amp;quot;)
d &amp;lt;- round((sum(Idents(data) == &amp;quot;PG1&amp;quot; | Idents(data) == &amp;quot;PG2&amp;quot; | Idents(data) == &amp;quot;PG3&amp;quot; | Idents(data) == &amp;quot;PG4&amp;quot;)/ncol(data))*100, 2); d1 &amp;lt;- sum(Idents(data) == &amp;quot;PG1&amp;quot; | Idents(data) == &amp;quot;PG2&amp;quot; | Idents(data) == &amp;quot;PG3&amp;quot; | Idents(data) == &amp;quot;PG4&amp;quot;)

df &amp;lt;- data.frame(
  class = c(&amp;quot;Adipocyte&amp;quot;, &amp;quot;Endothelial&amp;quot;, &amp;quot;Immune&amp;quot;, &amp;quot;Progenitor&amp;quot;),
  n = c(a1, b1, c1, d1),
  value = c(a, b, c, d)
)

df$class &amp;lt;- factor(df$class, levels = c(&amp;quot;Adipocyte&amp;quot;, &amp;quot;Endothelial&amp;quot;, &amp;quot;Immune&amp;quot;, &amp;quot;Progenitor&amp;quot;))

df &amp;lt;- df %&amp;gt;%
  arrange(desc(class)) %&amp;gt;%
  mutate(lab.ypos = cumsum(value) - 0.5*value)

ggplot(df, aes(x = &amp;quot;&amp;quot;, y = value, fill = class)) +
  geom_bar(width = 1, stat = &amp;quot;identity&amp;quot;, color = &amp;quot;white&amp;quot;) +
  coord_polar(&amp;quot;y&amp;quot;, start = 0)+
  geom_text(aes(y = lab.ypos, label = paste0(value, &amp;quot;%&amp;quot;)), color = &amp;quot;white&amp;quot;, fontface = &amp;quot;bold&amp;quot;)+
  scale_fill_manual(values = c(&amp;quot;#FFA500&amp;quot;, &amp;quot;#329932&amp;quot;, &amp;quot;#ff9999&amp;quot;, &amp;quot;#6666ff&amp;quot;)) +
  theme_void() + labs(fill = &amp;quot;Cell Type&amp;quot;)



#################################
########### Figure 1C ###########
#################################
marks_colors &amp;lt;- NULL
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_1&amp;quot;, &amp;quot;Acsl1&amp;quot;, &amp;quot;#0000b3&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_2&amp;quot;, &amp;quot;Plin4&amp;quot;, &amp;quot;#0000cc&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_3&amp;quot;, &amp;quot;Mlxipl&amp;quot;, &amp;quot;#0000e6&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_4&amp;quot;, &amp;quot;Pck1&amp;quot;, &amp;quot;#0000ff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_5&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;#1a1aff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_1&amp;quot;, &amp;quot;Btnl9&amp;quot;, &amp;quot;#00cd00&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_2&amp;quot;, &amp;quot;Ushbp1&amp;quot;, &amp;quot;#00b300&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_3&amp;quot;, &amp;quot;Egfl7&amp;quot;, &amp;quot;#009a00&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_4&amp;quot;, &amp;quot;Mcf2l&amp;quot;, &amp;quot;#008000&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_5&amp;quot;, &amp;quot;Ptprb&amp;quot;, &amp;quot;#006700&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_1&amp;quot;, &amp;quot;Zeb2&amp;quot;, &amp;quot;#ff7f7f&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_2&amp;quot;, &amp;quot;Trps1&amp;quot;, &amp;quot;#ff6666&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_3&amp;quot;, &amp;quot;Runx1&amp;quot;, &amp;quot;#ff4c4c&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_4&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;#ff3232&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_5&amp;quot;, &amp;quot;Adap2&amp;quot;, &amp;quot;#ff1919&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_1&amp;quot;, &amp;quot;Dcn&amp;quot;, &amp;quot;#ffff4d&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_2&amp;quot;, &amp;quot;Celf2&amp;quot;, &amp;quot;#ffff33&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_3&amp;quot;, &amp;quot;Meg3&amp;quot;, &amp;quot;#ffff1a&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_4&amp;quot;, &amp;quot;Col1a2&amp;quot;, &amp;quot;#ffff00&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_5&amp;quot;, &amp;quot;Col3a1&amp;quot;, &amp;quot;#e6e600&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- as.data.frame(marks_colors)
colnames(marks_colors) &amp;lt;- c(&amp;quot;group&amp;quot;, &amp;quot;gene&amp;quot;, &amp;quot;color&amp;quot;, &amp;quot;priority&amp;quot;, &amp;quot;T_fold&amp;quot;)
marks_colors$priority &amp;lt;- as.integer(marks_colors$priority)
marks_colors$T_fold &amp;lt;- as.numeric(marks_colors$T_fold)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/db/mc2d.test_2dproj.Rda&amp;quot;)
dims &amp;lt;- data.frame(x = object@sc_x,
                   y = object@sc_y)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT/db/mc.test_mc_f.Rda&amp;quot;)
tmp1 &amp;lt;- data.frame(cells = names(object@mc), cols = object@mc)
tmp2 &amp;lt;- data.frame(cols = object@colors)
teste &amp;lt;- merge(tmp1, tmp2, by.x = &amp;quot;cols&amp;quot;, by.y = &amp;quot;row.names&amp;quot;)
teste$cols &amp;lt;- NULL

teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Adipocyte&amp;quot;, marks_colors$group)], &amp;quot;Adipocytes&amp;quot;, &amp;quot;Unknown&amp;quot;)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Progenitor&amp;quot;, marks_colors$group)], &amp;quot;Progenitors&amp;quot;, teste$cellType)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Immune&amp;quot;, marks_colors$group)], &amp;quot;Immunes&amp;quot;, teste$cellType)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Endothelial&amp;quot;, marks_colors$group)], &amp;quot;Endothelials&amp;quot;, teste$cellType)
tab &amp;lt;- merge(dims, teste, by.x = &amp;quot;row.names&amp;quot;, by.y = &amp;quot;cells&amp;quot;)

data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- as.factor(new_cluster)
data$clusters_sccaf &amp;lt;- new_cluster

infos &amp;lt;- data@meta.data
infos &amp;lt;- infos[tab$Row.names, ]

final &amp;lt;- merge(infos, tab, by.x = &amp;quot;row.names&amp;quot;, by.y = &amp;quot;Row.names&amp;quot;)

Idents(data) &amp;lt;- data$clusters_sccaf
new.cluster.ids &amp;lt;- c(&amp;quot;EN&amp;quot;, &amp;quot;PG&amp;quot;, &amp;quot;PG&amp;quot;, &amp;quot;AD&amp;quot;, &amp;quot;AD&amp;quot;, &amp;quot;PG&amp;quot;, &amp;quot;PG&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;AD&amp;quot;, &amp;quot;AD&amp;quot;, &amp;quot;EN&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;PG&amp;quot;)
names(new.cluster.ids) &amp;lt;- levels(data)
data &amp;lt;- RenameIdents(data, new.cluster.ids)
Idents(data) &amp;lt;- factor(Idents(data), levels = c(&#39;AD&#39;, &#39;EN&#39;, &#39;IM&#39;, &#39;PG&#39;))

markers &amp;lt;- FindAllMarkers(data, only.pos = T)

top20 &amp;lt;- markers %&amp;gt;% group_by(cluster) %&amp;gt;% top_n(n = 20, wt = avg_logFC)

data2 &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed_ALRA.rds&amp;quot;)

Idents(data2) &amp;lt;- Idents(data)
rm(data)
data2 &amp;lt;- ScaleData(data2)

cls &amp;lt;- c(&amp;quot;#FFA500&amp;quot;, &amp;quot;#329932&amp;quot;, &amp;quot;#ff9999&amp;quot;, &amp;quot;#6666ff&amp;quot;)
mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)

DoHeatmap(data2, features = top20$gene, group.colors = cls, angle = 0, size = 5, label = F) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=5))



#################################
########### Figure 1D ###########
#################################
marks_colors &amp;lt;- NULL
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_1&amp;quot;, &amp;quot;Acsl1&amp;quot;, &amp;quot;#0000b3&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_2&amp;quot;, &amp;quot;Plin4&amp;quot;, &amp;quot;#0000cc&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_3&amp;quot;, &amp;quot;Mlxipl&amp;quot;, &amp;quot;#0000e6&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_4&amp;quot;, &amp;quot;Pck1&amp;quot;, &amp;quot;#0000ff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_5&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;#1a1aff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_1&amp;quot;, &amp;quot;Btnl9&amp;quot;, &amp;quot;#00cd00&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_2&amp;quot;, &amp;quot;Ushbp1&amp;quot;, &amp;quot;#00b300&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_3&amp;quot;, &amp;quot;Egfl7&amp;quot;, &amp;quot;#009a00&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_4&amp;quot;, &amp;quot;Mcf2l&amp;quot;, &amp;quot;#008000&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_5&amp;quot;, &amp;quot;Ptprb&amp;quot;, &amp;quot;#006700&amp;quot;, 1, 1.8))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_1&amp;quot;, &amp;quot;Zeb2&amp;quot;, &amp;quot;#ff7f7f&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_2&amp;quot;, &amp;quot;Trps1&amp;quot;, &amp;quot;#ff6666&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_3&amp;quot;, &amp;quot;Runx1&amp;quot;, &amp;quot;#ff4c4c&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_4&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;#ff3232&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_5&amp;quot;, &amp;quot;Adap2&amp;quot;, &amp;quot;#ff1919&amp;quot;, 1, 0.9))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_1&amp;quot;, &amp;quot;Dcn&amp;quot;, &amp;quot;#ffff4d&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_2&amp;quot;, &amp;quot;Celf2&amp;quot;, &amp;quot;#ffff33&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_3&amp;quot;, &amp;quot;Meg3&amp;quot;, &amp;quot;#ffff1a&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_4&amp;quot;, &amp;quot;Col1a2&amp;quot;, &amp;quot;#ffff00&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_5&amp;quot;, &amp;quot;Col3a1&amp;quot;, &amp;quot;#e6e600&amp;quot;, 1, 2.4))
marks_colors &amp;lt;- as.data.frame(marks_colors)
colnames(marks_colors) &amp;lt;- c(&amp;quot;group&amp;quot;, &amp;quot;gene&amp;quot;, &amp;quot;color&amp;quot;, &amp;quot;priority&amp;quot;, &amp;quot;T_fold&amp;quot;)
marks_colors$priority &amp;lt;- as.integer(marks_colors$priority)
marks_colors$T_fold &amp;lt;- as.numeric(marks_colors$T_fold)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/db/mc2d.test_2dproj.Rda&amp;quot;)
dims &amp;lt;- data.frame(x = object@sc_x,
                   y = object@sc_y)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/db/mc.test_mc_f.Rda&amp;quot;)
tmp1 &amp;lt;- data.frame(cells = names(object@mc), cols = object@mc)
tmp2 &amp;lt;- data.frame(cols = object@colors)
teste &amp;lt;- merge(tmp1, tmp2, by.x = &amp;quot;cols&amp;quot;, by.y = &amp;quot;row.names&amp;quot;)
teste$cols &amp;lt;- NULL

teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Adipocyte&amp;quot;, marks_colors$group)], &amp;quot;Adipocytes&amp;quot;, &amp;quot;Unknown&amp;quot;)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Progenitor&amp;quot;, marks_colors$group)], &amp;quot;Progenitors&amp;quot;, teste$cellType)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Immune&amp;quot;, marks_colors$group)], &amp;quot;Immunes&amp;quot;, teste$cellType)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Endothelial&amp;quot;, marks_colors$group)], &amp;quot;Endothelials&amp;quot;, teste$cellType)
tab &amp;lt;- merge(dims, teste, by.x = &amp;quot;row.names&amp;quot;, by.y = &amp;quot;cells&amp;quot;)

data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed_ALRA.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- as.factor(new_cluster)
data$clusters_sccaf &amp;lt;- new_cluster

infos &amp;lt;- data@meta.data
infos &amp;lt;- infos[tab$Row.names, ]

final &amp;lt;- merge(infos, tab, by.x = &amp;quot;row.names&amp;quot;, by.y = &amp;quot;Row.names&amp;quot;)

A &amp;lt;- subset(final, cellType == &amp;quot;Adipocytes&amp;quot;)
E &amp;lt;- subset(final, cellType == &amp;quot;Endothelials&amp;quot;)
I &amp;lt;- subset(final, cellType == &amp;quot;Immunes&amp;quot;)
P &amp;lt;- subset(final, cellType == &amp;quot;Progenitors&amp;quot;)

Idents(data) &amp;lt;- data$clusters_sccaf
new.cluster.ids &amp;lt;- c(&amp;quot;EN1&amp;quot;, &amp;quot;PG1&amp;quot;, &amp;quot;PG2&amp;quot;, &amp;quot;AD1&amp;quot;, &amp;quot;AD2&amp;quot;, &amp;quot;PG3&amp;quot;, &amp;quot;PG4&amp;quot;, &amp;quot;IM1&amp;quot;, &amp;quot;AD3&amp;quot;, &amp;quot;AD4&amp;quot;, &amp;quot;EN2&amp;quot;, &amp;quot;IM2&amp;quot;, &amp;quot;IM3&amp;quot;, &amp;quot;PG5&amp;quot;)
names(new.cluster.ids) &amp;lt;- levels(data)
data &amp;lt;- RenameIdents(data, new.cluster.ids)
Idents(data) &amp;lt;- factor(Idents(data), levels = rev(c(&#39;AD1&#39;, &#39;AD2&#39;, &#39;AD3&#39;, &#39;AD4&#39;, &#39;EN1&#39;, &#39;EN2&#39;, &#39;IM1&#39;, &#39;IM2&#39;, &#39;IM3&#39;, &#39;PG1&#39;, &#39;PG2&#39;, &#39;PG3&#39;, &#39;PG4&#39;, &#39;PG5&#39;)))

DotPlot(data, features = c(&amp;quot;Acsl1&amp;quot;, &amp;quot;Plin4&amp;quot;, &amp;quot;Mlxipl&amp;quot;, &amp;quot;Pck1&amp;quot;, &amp;quot;Adrb3&amp;quot;,
                           &amp;quot;Btnl9&amp;quot;, &amp;quot;Ushbp1&amp;quot;, &amp;quot;Egfl7&amp;quot;, &amp;quot;Mcf2l&amp;quot;, &amp;quot;Ptprb&amp;quot;,
                           &amp;quot;Trps1&amp;quot;, &amp;quot;Runx1&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;Adap2&amp;quot;,
                           &amp;quot;Dcn&amp;quot;, &amp;quot;Celf2&amp;quot;, &amp;quot;Meg3&amp;quot;, &amp;quot;Col1a2&amp;quot;, &amp;quot;Col3a1&amp;quot;), cols = c(&amp;quot;grey&amp;quot;, &#39;red&#39;)) +
  xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) + theme(axis.text.x = element_text(angle = 45, hjust=1))


data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed_ALRA.rds&amp;quot;)

pt &amp;lt;- FeaturePlot(data, c(&amp;quot;Mlxipl&amp;quot;, &amp;quot;Egfl7&amp;quot;, &amp;quot;Runx1&amp;quot;, &amp;quot;Celf2&amp;quot;),
                  cols = c(&amp;quot;grey&amp;quot;, &#39;red&#39;), reduction = &#39;tsne&#39;, pt.size = 0.1, combine = F)
pt &amp;lt;- lapply(pt, function(x) {
  x + theme_void() + xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) +
    theme(plot.title = element_text(hjust = 0.5, face = &amp;quot;italic&amp;quot;),
          legend.position = &amp;quot;none&amp;quot;)
})

ggarrange(plotlist = pt)



#################################
########### Figure 1E ###########
#################################
dbs &amp;lt;- c(&amp;quot;KEGG_2019_Mouse&amp;quot;, &amp;quot;WikiPathways_2019_Mouse&amp;quot;, &amp;quot;Jensen_TISSUES&amp;quot;, &amp;quot;GO_Biological_Process_2018&amp;quot;)

genes_A &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig1D_2_Markers_A.txt&amp;quot;)
genes_E &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig1D_2_Markers_E.txt&amp;quot;)
genes_I &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig1D_2_Markers_I.txt&amp;quot;)
genes_P &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig1D_2_Markers_P.txt&amp;quot;)

genes &amp;lt;- list(Adipocyte = genes_A,
              Endothelial = genes_E,
              Immune = genes_I,
              Progenitor = genes_P)

results &amp;lt;- lapply(genes, enrichr, dbs)

plotlist &amp;lt;- list()
pathlist &amp;lt;- NULL
tmplist &amp;lt;- NULL
paths &amp;lt;- NULL
for (i in 1:length(dbs)) {
  tmp &amp;lt;- lapply(results, `[[`, i)
  tmp &amp;lt;- mapply(cbind, tmp, &amp;quot;type&amp;quot; = names(tmp), SIMPLIFY=F)
  tmp &amp;lt;- do.call(&amp;quot;rbind&amp;quot;, tmp)
  
  tmp &amp;lt;- subset(tmp, Adjusted.P.value &amp;lt; 0.05)
  
  tmp$Adjusted.P.value &amp;lt;- -log10(tmp$Adjusted.P.value)
  tmp$Combined.Score &amp;lt;- log2(tmp$Combined.Score)
  
  tmplist &amp;lt;- rbind(tmplist, data.frame(tmp, class = dbs[i]))
  
  if (dbs[i] == &amp;quot;GO_Biological_Process_2018&amp;quot;) {
    tmp$Term &amp;lt;- gsub(&amp;quot;\\s*\\([^\\)]+\\)&amp;quot;,&amp;quot;&amp;quot;,as.character(tmp$Term))
  }
  tmp &amp;lt;- tmp %&amp;gt;% group_by(type) %&amp;gt;% top_n(n = 5, wt = Combined.Score)
  tmp$Term &amp;lt;- factor(tmp$Term, levels = rev(unique(tmp$Term)))
  pathlist &amp;lt;- rbind(pathlist, data.frame(tmp %&amp;gt;% group_by(type) %&amp;gt;% top_n(n = 2, wt = Combined.Score), class = dbs[i]))
  paths &amp;lt;- rbind(paths, data.frame(tmp, class = dbs[i]))
  
  plotlist[[i]] &amp;lt;- ggplot(tmp, aes(x = type, y = Term)) +
    geom_point(aes(size = Adjusted.P.value, color = Combined.Score)) +
    theme_bw(base_size = 9) +
    scale_colour_gradient(limits=c(0, max(tmp$Combined.Score)+0.5), high = &amp;quot;#2b9348&amp;quot;, low = &amp;quot;#eeef20&amp;quot;) +
    xlab(NULL) + ylab(NULL) +
    ggtitle(dbs[i]) + labs(color = &amp;quot;Combined Score&amp;quot;, size = &amp;quot;-log10(padj)&amp;quot;)
}
tmplist &amp;lt;- tmplist %&amp;gt;% group_by(type) %&amp;gt;% arrange(desc(Combined.Score), .by_group = TRUE)

paths &amp;lt;- paths[which(paths$Term %in% c(&amp;quot;PPAR signaling pathway&amp;quot;, &amp;quot;AMPK signaling pathway&amp;quot;, &amp;quot;Fatty acid biosynthesis&amp;quot;, &amp;quot;Focal adhesion&amp;quot;, &amp;quot;ECM-receptor interaction&amp;quot;, &amp;quot;Cell adhesion molecules (CAMs)&amp;quot;, &amp;quot;Adherens junction&amp;quot;, &amp;quot;3T3-L1 cell&amp;quot;, &amp;quot;Abdominal adipose tissue&amp;quot;, &amp;quot;Subcutaneous adipose tissue&amp;quot;, &amp;quot;Vasculature&amp;quot;, &amp;quot;Umbilical vein&amp;quot;, &amp;quot;Vascular cell&amp;quot;, &amp;quot;Common cardinal vein&amp;quot;, &amp;quot;Mesenchyme&amp;quot;, &amp;quot;triglyceride biosynthetic process&amp;quot;, &amp;quot;fatty acid transmembrane transport&amp;quot;)), ]

paths &amp;lt;- paths %&amp;gt;%
  mutate(
    class_with_color = ifelse(class == &amp;quot;KEGG_2019_Mouse&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#0000FF&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                              ifelse(class == &amp;quot;GO_Biological_Process_2018&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#9900CC&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                                     ifelse(class == &amp;quot;Jensen_TISSUES&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#CC0000&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                                            glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;))))
  )
paths &amp;lt;- paths %&amp;gt;% group_by(type) %&amp;gt;% arrange(desc(Combined.Score), .by_group = TRUE)
paths$class_with_color &amp;lt;- factor(paths$class_with_color, levels = rev(unique(paths$class_with_color)))

ggplot(paths, aes(x = type, y = class_with_color)) +
  geom_point(aes(size = Adjusted.P.value, color = Combined.Score)) +
  theme_bw(base_size = 8) +
  scale_colour_gradient(limits=c(0, max(paths$Combined.Score)+0.5), high = &amp;quot;#2b9348&amp;quot;, low = &amp;quot;#eeef20&amp;quot;) +
  xlab(NULL) + ylab(NULL) +
  ggtitle(NULL) + labs(color = &amp;quot;Combined Score&amp;quot;, size = &amp;quot;-log10(padj)&amp;quot;) +
  theme(axis.text.y = element_markdown(), axis.text=element_text(size=12))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;figure-2&#34;&gt;Figure 2&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)
library(SeuratWrappers)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(enrichR)
library(glue)
library(ggtext)
library(ggpubr)


#################################
########### Figure 2A ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster

TSNEPlot(data, pt.size = 1, cols = c(&amp;quot;#11c78b&amp;quot;, &amp;quot;#800080&amp;quot;, &amp;quot;#e57400&amp;quot;, &amp;quot;#0000FF&amp;quot;, &amp;quot;#dfdf0d&amp;quot;)) +
  xlab(&amp;quot;t-SNE 1&amp;quot;) + ylab(&amp;quot;t-SNE 2&amp;quot;) +
  theme_classic() + labs(color = &amp;quot;Cluster&amp;quot;) +
  theme(legend.position=&amp;quot;bottom&amp;quot;)



#################################
########### Figure 2B ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster

markers &amp;lt;- FindAllMarkers(data, logfc.threshold = 0, only.pos = F)

top10 &amp;lt;- markers %&amp;gt;% group_by(cluster) %&amp;gt;% top_n(n = 10, wt = avg_logFC)

data &amp;lt;- SeuratWrappers::RunALRA(data)
data &amp;lt;- ScaleData(data)

cls &amp;lt;- c(&amp;quot;#11c78b&amp;quot;, &amp;quot;#800080&amp;quot;, &amp;quot;#e57400&amp;quot;, &amp;quot;#0000FF&amp;quot;, &amp;quot;#dfdf0d&amp;quot;)
mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)

DoHeatmap(data, features = top10$gene, group.colors = cls, angle = 0, size = 5, label = F) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6))



#################################
########### Figure 2C ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster

DotPlot(data, features = c(&#39;Adipoq&#39;, &#39;Adrb3&#39;, &#39;Cidec&#39;, &#39;Dgat1&#39;, &#39;Fasn&#39;, &#39;Lipe&#39;, &#39;Pck1&#39;, &#39;Plin1&#39;, &#39;Pnpla2&#39;, &#39;Retn&#39;), cols = c(&amp;quot;grey&amp;quot;, &#39;red&#39;), assay = &amp;quot;RNA&amp;quot;) +
  xlab(NULL) + ylab(NULL) +
  theme_bw(base_size = 12) +
  theme(axis.text.x = element_text(angle = 45, hjust=1))



#################################
########### Figure 2D ###########
#################################
dbs &amp;lt;- c(&amp;quot;KEGG_2019_Mouse&amp;quot;, &amp;quot;WikiPathways_2019_Mouse&amp;quot;, &amp;quot;Jensen_TISSUES&amp;quot;, &amp;quot;GO_Biological_Process_2018&amp;quot;, &amp;quot;Mouse_Gene_Atlas&amp;quot;)

genes_1 &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig2C_Markers_1.txt&amp;quot;)
genes_2 &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig2C_Markers_2.txt&amp;quot;)
genes_3 &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig2C_Markers_3.txt&amp;quot;)
genes_4 &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig2C_Markers_4.txt&amp;quot;)
genes_5 &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig2C_Markers_5.txt&amp;quot;)

genes &amp;lt;- list(Ad1 = genes_1,
              Ad2 = genes_2,
              Ad3 = genes_3,
              Ad4 = genes_4,
              Ad5 = genes_5)

results &amp;lt;- lapply(genes, enrichr, dbs)

plotlist &amp;lt;- list()
pathlist &amp;lt;- NULL
tmplist &amp;lt;- NULL
paths &amp;lt;- NULL
for (i in 1:length(dbs)) {
  tmp &amp;lt;- lapply(results, `[[`, i)
  tmp &amp;lt;- mapply(cbind, tmp, &amp;quot;type&amp;quot; = names(tmp), SIMPLIFY=F)
  tmp &amp;lt;- do.call(&amp;quot;rbind&amp;quot;, tmp)
  
  tmp &amp;lt;- subset(tmp, Adjusted.P.value &amp;lt; 0.05)
  
  tmp$Adjusted.P.value &amp;lt;- -log10(tmp$Adjusted.P.value)
  tmp$Combined.Score &amp;lt;- log2(tmp$Combined.Score)
  
  tmplist &amp;lt;- rbind(tmplist, data.frame(tmp, class = dbs[i]))
  
  if (dbs[i] == &amp;quot;WikiPathways_2019_Mouse&amp;quot; | dbs[i] == &amp;quot;GO_Biological_Process_2018&amp;quot;) {
    tmp$Term &amp;lt;- gsub(&amp;quot;\\s*\\([^\\)]+\\)&amp;quot;,&amp;quot;&amp;quot;,as.character(tmp$Term))
  }
  tmp &amp;lt;- tmp %&amp;gt;% group_by(type) %&amp;gt;% top_n(n = 5, wt = Combined.Score)
  tmp$Term &amp;lt;- factor(tmp$Term, levels = rev(unique(tmp$Term)))
  pathlist &amp;lt;- rbind(pathlist, data.frame(tmp %&amp;gt;% group_by(type) %&amp;gt;% top_n(n = 2, wt = Combined.Score), class = dbs[i]))
  paths &amp;lt;- rbind(paths, data.frame(tmp, class = dbs[i]))
  
  plotlist[[i]] &amp;lt;- ggplot(tmp, aes(x = type, y = Term)) +
    geom_point(aes(size = Adjusted.P.value, color = Combined.Score)) +
    theme_bw(base_size = 9) +
    scale_colour_gradient(limits=c(0, max(tmp$Combined.Score)+0.5), high = &amp;quot;#2b9348&amp;quot;, low = &amp;quot;#eeef20&amp;quot;) +
    xlab(NULL) + ylab(NULL) +
    ggtitle(dbs[i]) + labs(color = &amp;quot;Combined Score&amp;quot;, size = &amp;quot;-log10(padj)&amp;quot;)
}
tmplist &amp;lt;- tmplist %&amp;gt;% group_by(type) %&amp;gt;% arrange(desc(Combined.Score), .by_group = TRUE)

paths &amp;lt;- paths[which(paths$Term %in% c(&amp;quot;PPAR signaling pathway&amp;quot;, &amp;quot;Fatty acid degradation&amp;quot;, &amp;quot;Glyoxylate and dicarboxylate metabolism&amp;quot;, &amp;quot;Insulin resistance&amp;quot;, &amp;quot;Biosynthesis of unsaturated fatty acids&amp;quot;, &amp;quot;Fatty acid biosynthesis&amp;quot;, &amp;quot;Adipocytokine signaling pathway&amp;quot;, &amp;quot;Propanoate metabolism&amp;quot;, &amp;quot;IL-17 signaling pathway&amp;quot;, &amp;quot;Fat digestion and absorption&amp;quot;, &amp;quot;Mitochondrial Gene Expression WP1263&amp;quot;, &amp;quot;Fatty acid oxidation WP2318&amp;quot;, &amp;quot;Fatty Acid Biosynthesis WP336&amp;quot;, &amp;quot;TCA Cycle WP434&amp;quot;, &amp;quot;Cholesterol metabolism WP4346&amp;quot;, &amp;quot;Subcutaneous adipose tissue&amp;quot;, &amp;quot;3T3-L1 cell&amp;quot;, &amp;quot;triglyceride biosynthetic process&amp;quot;, &amp;quot;triglyceride metabolic process&amp;quot;, &amp;quot;long-chain fatty acid transport&amp;quot;, &amp;quot;neutral amino acid transport&amp;quot;, &amp;quot;regulation of sequestering of triglyceride&amp;quot;, &amp;quot;cardiolipin acyl-chain remodeling&amp;quot;, &amp;quot;acylglycerol acyl-chain remodeling&amp;quot;, &amp;quot;adipose brown&amp;quot;)), ]

paths &amp;lt;- paths %&amp;gt;%
  mutate(
    class_with_color = ifelse(class == &amp;quot;KEGG_2019_Mouse&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#0000FF&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                              ifelse(class == &amp;quot;WikiPathways_2019_Mouse&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#f28804&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                                     ifelse(class == &amp;quot;Jensen_TISSUES&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#CC0000&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                                            ifelse(class == &amp;quot;GO_Biological_Process_2018&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#9900CC&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                                                   glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#18a997&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;)))))
  )

paths &amp;lt;- paths %&amp;gt;% group_by(type) %&amp;gt;% arrange(desc(Combined.Score), .by_group = TRUE)
paths$class_with_color &amp;lt;- factor(paths$class_with_color, levels = rev(unique(paths$class_with_color)))

ggplot(paths, aes(x = type, y = class_with_color)) +
  geom_point(aes(size = Adjusted.P.value, color = Combined.Score)) +
  theme_bw(base_size = 8) +
  scale_colour_gradient(limits=c(0, max(paths$Combined.Score)+0.5), high = &amp;quot;#2b9348&amp;quot;, low = &amp;quot;#eeef20&amp;quot;) +
  xlab(NULL) + ylab(NULL) +
  ggtitle(NULL) + labs(color = &amp;quot;Combined Score&amp;quot;, size = &amp;quot;-log10(padj)&amp;quot;) +
  theme(axis.text.y = element_markdown(), axis.text=element_text(size=12))



#################################
########### Figure 2E ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$clusters &amp;lt;- Idents(data)

data &amp;lt;- SeuratWrappers::RunALRA(data)
data &amp;lt;- ScaleData(data)

genes &amp;lt;- c(&#39;Adipoq&#39;, &#39;Pnpla2&#39;, &#39;Fasn&#39;, &#39;Lep&#39;, &#39;Cebpa&#39;, &#39;Pparg&#39;, &#39;Cidec&#39;, &#39;Car3&#39;, &#39;Gpx3&#39;, &#39;Col1a2&#39;, &#39;Serpine1&#39;, &#39;Vegfa&#39;)
genes &amp;lt;- genes[genes %in% rownames(data)]

df &amp;lt;- NULL
for (i in 1:length(genes)) {
  c3 &amp;lt;- data.frame(value = data@assays$alra@data[genes[i], names(Idents(data))[which(Idents(data) == &#39;Ad3&#39;)]], cluster = &#39;Ad3&#39;, gene = genes[i])
  c4 &amp;lt;- data.frame(value = data@assays$alra@data[genes[i], names(Idents(data))[which(Idents(data) == &#39;Ad4&#39;)]], cluster = &#39;Ad4&#39;, gene = genes[i])
  df &amp;lt;- rbind(df, rbind(c3, c4))
}
df$cluster &amp;lt;- as.factor(df$cluster)
df$gene &amp;lt;- factor(df$gene, levels = genes)

intr &amp;lt;- aggregate(df[, 1], list(df$gene), mean)
colnames(intr) &amp;lt;- c(&#39;gene&#39;, &#39;Z&#39;)

ggboxplot(df, x = &amp;quot;cluster&amp;quot;, y = &amp;quot;value&amp;quot;,
                 color = &amp;quot;cluster&amp;quot;, add = &amp;quot;jitter&amp;quot;) +
  facet_wrap(~ gene) + geom_hline(data = intr, aes(yintercept = Z), linetype = &#39;dashed&#39;) +
  stat_compare_means(label = &#39;p.signif&#39;, method = &#39;t.test&#39;, label.x = 1.5, label.y = 3.4) +
  xlab(NULL) + ylab(&#39;Normalized Expression&#39;) + theme_bw() +
  scale_color_manual(values = c(&#39;Ad3&#39; = &amp;quot;#e57400&amp;quot;, &#39;Ad4&#39; = &amp;quot;#0000FF&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;figure-3&#34;&gt;Figure 3&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)
library(SeuratWrappers)
library(ggplot2)
library(ggpubr)
library(fgsea)
library(dplyr)
library(ggrepel)
library(RColorBrewer)
library(monocle)
library(scales)
library(viridis)

source(&#39;/Users/biagi/PhD/AdipoSNAP/2_Functions.R&#39;)


#################################
########### Figure 3A ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
Idents(data) &amp;lt;- as.factor(data$timpoint)
data &amp;lt;- subset(data, cells = names(which(data$timpoint == &#39;4day&#39; | data$timpoint == &#39;RT&#39; | data$timpoint == &#39;CL&#39;)))
data$timpoint &amp;lt;- gsub(&#39;4day&#39;, &#39;Cold&#39;, data$timpoint)

TSNEPlot(data, pt.size = 1, group.by = &#39;timpoint&#39;) +
  xlab(&amp;quot;t-SNE 1&amp;quot;) + ylab(&amp;quot;t-SNE 2&amp;quot;) +
  theme_classic() + labs(color = &amp;quot;Cluster&amp;quot;) +
  theme(legend.position=&amp;quot;bottom&amp;quot;)



#################################
########### Figure 3B ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
Idents(data) &amp;lt;- as.factor(data$timpoint)
data &amp;lt;- subset(data, cells = names(which(data$timpoint == &#39;4day&#39; | data$timpoint == &#39;RT&#39; | data$timpoint == &#39;CL&#39;)))

data &amp;lt;- SeuratWrappers::RunALRA(data)
data &amp;lt;- ScaleData(data)

genes &amp;lt;- c(&#39;Lipe&#39;, &#39;Adrb3&#39;, &#39;Pnpla2&#39;, &#39;Plin1&#39;, &#39;Fasn&#39;, &#39;Acadm&#39;, &#39;Gk&#39;, &#39;Adipoq&#39;, &#39;Retn&#39;, &#39;Cidec&#39;, &#39;Ppara&#39;, &#39;Ucp1&#39;, &#39;Dio2&#39;, &#39;Prdm16&#39;, &#39;Elovl3&#39;)
genes &amp;lt;- genes[genes %in% rownames(data)]

pt &amp;lt;- FeaturePlot(data, genes,
                  cols = c(&amp;quot;grey&amp;quot;, &#39;red&#39;), reduction = &#39;tsne&#39;, pt.size = 0.1, combine = F)
pt &amp;lt;- lapply(pt, function(x) {
  x + theme_classic() + xlab(&amp;quot;t-SNE 1&amp;quot;) + ylab(&amp;quot;t-SNE 2&amp;quot;) +
    theme(plot.title = element_text(hjust = 0.5, face = &amp;quot;italic&amp;quot;, size = 10), legend.position = &amp;quot;none&amp;quot;)
})

ggarrange(plotlist = pt, ncol = 5, nrow = 3, common.legend = T)



#################################
########### Figure 3C ###########
#################################
ort &amp;lt;- read.table(&amp;quot;/projects/cangen/coliveir/cellphonedb/Orthologs_human_mouse.txt&amp;quot;, sep = &amp;quot;,&amp;quot;, header = T)
pathways &amp;lt;- gmtPathways(&#39;/Users/biagi/PhD/AdipoSNAP/msigdb.v7.1.symbols.gmt&#39;)

#ColdxRT
comp1 &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Diff_Adipocytes_ColdxRT_ALL.txt&amp;quot;)
comp1 &amp;lt;- subset(comp1, p_val_adj &amp;lt; 0.05)
comp1 &amp;lt;- comp1[order(comp1$avg_logFC, decreasing = T), ]
comp1 &amp;lt;- rbind(head(comp1, 50), tail(comp1, 50))
comp1 &amp;lt;- merge(ort, comp1, by.x = &amp;quot;Mouse.gene.name&amp;quot;, by.y = &amp;quot;row.names&amp;quot;)
comp1$Mouse.gene.name &amp;lt;- comp1$Gene.stable.ID &amp;lt;- comp1$Mouse.gene.stable.ID &amp;lt;- NULL
colnames(comp1)[1] &amp;lt;- &amp;quot;Gene&amp;quot;
ranks &amp;lt;- structure(comp1$avg_logFC, names = comp1$Gene)
ranks &amp;lt;- sort(ranks)
fgseaRes1 &amp;lt;- fgsea(pathways, ranks, minSize=5)
fgseaRes1 &amp;lt;- subset(fgseaRes1, padj &amp;lt; 0.05)
fgseaRes1 &amp;lt;- fgseaRes1[order(fgseaRes1$NES, decreasing = T), ]
genes1 &amp;lt;- fgseaRes1$leadingEdge
for (i in 1:length(genes1)) {
  fgseaRes1$genes[i] &amp;lt;- paste(genes1[[i]], collapse = &#39;;&#39;)
}
fgseaRes1$leadingEdge &amp;lt;- NULL
enrich_ColdxRT &amp;lt;- read.table(&#39;/Users/biagi/PhD/AdipoSNAP/Figures/update/fgsea_ColdxRT.txt&#39;, header = T)
pathways_ColdxRT &amp;lt;- c(&#39;GO_ORGANOPHOSPHATE_BIOSYNTHETIC_PROCESS&#39;, &#39;GO_FATTY_ACID_TRANSPORT&#39;, &#39;GO_LONG_CHAIN_FATTY_ACID_TRANSPORT&#39;, &#39;GO_MONOCARBOXYLIC_ACID_TRANSPORT&#39;, &#39;GO_RESPONSE_TO_FATTY_ACID&#39;, &#39;REACTOME_NGF_STIMULATED_TRANSCRIPTION&#39;, &#39;REACTOME_NUCLEAR_EVENTS_KINASE_AND_TRANSCRIPTION_FACTOR_ACTIVATION&#39;, &#39;OSWALD_HEMATOPOIETIC_STEM_CELL_IN_COLLAGEN_GEL_UP&#39;, &#39;NAGASHIMA_EGF_SIGNALING_UP&#39;, &#39;NAGASHIMA_NRG1_SIGNALING_UP&#39;)
enrich_ColdxRT &amp;lt;- enrich_ColdxRT[which(enrich_ColdxRT$pathway %in% pathways_ColdxRT), ]
enrich_ColdxRT$class &amp;lt;- ifelse(enrich_ColdxRT$NES &amp;gt; 0, &#39;Up-regulated&#39;, &#39;Down-regulated&#39;)
enrich_ColdxRT &amp;lt;- enrich_ColdxRT[order(enrich_ColdxRT$class, enrich_ColdxRT$NES), ]
enrich_ColdxRT$order &amp;lt;- seq_len(nrow(enrich_ColdxRT))

ggplot(enrich_ColdxRT, aes(order, NES, fill = class)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, show.legend = TRUE) +
  xlab(NULL) + ylab(&amp;quot;Normalized Enrichment Score (NES)&amp;quot;) +
  theme_bw() +
  coord_flip() +
  theme(legend.position = &amp;quot;right&amp;quot;, legend.title = element_text(size = 10), plot.title = element_text(hjust = 0.5)) +
  scale_fill_discrete(name = &amp;quot;Enrichment&amp;quot;) +
  scale_x_continuous(breaks = enrich_ColdxRT$order, labels = enrich_ColdxRT$pathway, expand = c(0, 0)) +
  ggtitle(&#39;GSEA for Cold x RT&#39;)

#CLxRT
comp2 &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Diff_Adipocytes_CLxRT_ALL.txt&amp;quot;)
comp2 &amp;lt;- subset(comp2, p_val_adj &amp;lt; 0.05)
comp2 &amp;lt;- comp2[order(comp2$avg_logFC, decreasing = T), ]
comp2 &amp;lt;- rbind(head(comp2, 50), tail(comp2, 50))
comp2 &amp;lt;- merge(ort, comp2, by.x = &amp;quot;Mouse.gene.name&amp;quot;, by.y = &amp;quot;row.names&amp;quot;)
comp2$Mouse.gene.name &amp;lt;- comp2$Gene.stable.ID &amp;lt;- comp2$Mouse.gene.stable.ID &amp;lt;- NULL
colnames(comp2)[1] &amp;lt;- &amp;quot;Gene&amp;quot;
ranks &amp;lt;- structure(comp2$avg_logFC, names = comp2$Gene)
ranks &amp;lt;- sort(ranks)
fgseaRes2 &amp;lt;- fgsea(pathways, ranks, minSize=5)
fgseaRes2 &amp;lt;- subset(fgseaRes2, padj &amp;lt; 0.05)
fgseaRes2 &amp;lt;- fgseaRes2[order(fgseaRes2$NES, decreasing = T), ]
genes2 &amp;lt;- fgseaRes2$leadingEdge
for (i in 1:length(genes2)) {
  fgseaRes2$genes[i] &amp;lt;- paste(genes2[[i]], collapse = &#39;;&#39;)
}
fgseaRes2$leadingEdge &amp;lt;- NULL
enrich_CLxRT &amp;lt;- read.table(&#39;/Users/biagi/PhD/AdipoSNAP/Figures/update/fgsea_CLxRT.txt&#39;, header = T)
pathways_CLxRT &amp;lt;- c(&#39;GO_ORGANOPHOSPHATE_METABOLIC_PROCESS&#39;, &#39;GO_MITOCHONDRIAL_ENVELOPE&#39;, &#39;GO_ATP_METABOLIC_PROCESS&#39;, &#39;GO_OXIDOREDUCTASE_ACTIVITY&#39;, &#39;GO_OXIDATIVE_PHOSPHORYLATION&#39;, &#39;GO_NEGATIVE_REGULATION_OF_PROTEIN_METABOLIC_PROCESS&#39;, &#39;GO_RESPONSE_TO_MECHANICAL_STIMULUS&#39;, &#39;GO_NEGATIVE_REGULATION_OF_BIOSYNTHETIC_PROCESS&#39;, &#39;NAGASHIMA_EGF_SIGNALING_UP&#39;, &#39;NAGASHIMA_NRG1_SIGNALING_UP&#39;)
enrich_CLxRT &amp;lt;- enrich_CLxRT[which(enrich_CLxRT$pathway %in% pathways_CLxRT), ]
enrich_CLxRT$class &amp;lt;- ifelse(enrich_CLxRT$NES &amp;gt; 0, &#39;Up-regulated&#39;, &#39;Down-regulated&#39;)
enrich_CLxRT &amp;lt;- enrich_CLxRT[order(enrich_CLxRT$class, enrich_CLxRT$NES), ]
enrich_CLxRT$order &amp;lt;- seq_len(nrow(enrich_CLxRT))

ggplot(enrich_CLxRT, aes(order, NES, fill = class)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, show.legend = TRUE) +
  xlab(NULL) + ylab(&amp;quot;Normalized Enrichment Score (NES)&amp;quot;) +
  theme_bw() +
  coord_flip() +
  theme(legend.position = &amp;quot;right&amp;quot;, legend.title = element_text(size = 10), plot.title = element_text(hjust = 0.5)) +
  scale_fill_discrete(name = &amp;quot;Enrichment&amp;quot;) +
  scale_x_continuous(breaks = enrich_CLxRT$order, labels = enrich_CLxRT$pathway, expand = c(0, 0)) +
  ggtitle(&#39;GSEA for CL x RT&#39;)



#################################
########### Figure 3D ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
data$timpoint &amp;lt;- gsub(&#39;4day&#39;, &#39;Cold&#39;, data$timpoint)

infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$clusters &amp;lt;- Idents(data)

data &amp;lt;- SeuratWrappers::RunALRA(data)
data &amp;lt;- ScaleData(data)

anno_CL &amp;lt;- subset(data@meta.data, timpoint == &#39;CL&#39;)
anno_RT &amp;lt;- subset(data@meta.data, timpoint == &#39;RT&#39;)
anno_24hr &amp;lt;- subset(data@meta.data, timpoint == &#39;24hr&#39;)
anno_48hr &amp;lt;- subset(data@meta.data, timpoint == &#39;48hr&#39;)
anno_Cold &amp;lt;- subset(data@meta.data, timpoint == &#39;Cold&#39;)

tsne &amp;lt;- as.data.frame(Embeddings(data, &#39;tsne&#39;))
meta &amp;lt;- data@meta.data
df &amp;lt;- merge(tsne, meta, by = &#39;row.names&#39;)
rownames(df) &amp;lt;- df$Row.names
df$Row.names &amp;lt;- NULL

### CL
ggplot() +
  geom_point(data = df, aes(x = tSNE_1, y = tSNE_2, color = timpoint), size = 0.5) +
  scale_color_manual(values = rep(&amp;quot;gray75&amp;quot;, 5)) +
  guides(color = guide_legend(override.aes = list(size=7))) +
  xlab(&amp;quot;t-SNE 1&amp;quot;) + ylab(&amp;quot;t-SNE 2&amp;quot;) +
  labs(color = &#39;&#39;) + ggtitle(paste0(&#39;CL (&#39;, nrow(anno_CL), &#39; cells)&#39;)) +
  theme_classic() +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        legend.position=&amp;quot;none&amp;quot;, plot.title = element_text(hjust = 0.5, size=8)) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_CL)[anno_CL$clusters == &#39;Ad1&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_CL)[anno_CL$clusters == &#39;Ad1&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#11c78b&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_CL)[anno_CL$clusters == &#39;Ad2&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_CL)[anno_CL$clusters == &#39;Ad2&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#800080&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_CL)[anno_CL$clusters == &#39;Ad3&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_CL)[anno_CL$clusters == &#39;Ad3&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#e57400&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_CL)[anno_CL$clusters == &#39;Ad4&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_CL)[anno_CL$clusters == &#39;Ad4&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#0000FF&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_CL)[anno_CL$clusters == &#39;Ad5&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_CL)[anno_CL$clusters == &#39;Ad5&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#dfdf0d&amp;quot;, size = 1)

df2 &amp;lt;- data.frame(
  class = c(&amp;quot;Ad1&amp;quot;, &amp;quot;Ad2&amp;quot;, &amp;quot;Ad3&amp;quot;, &amp;quot;Ad4&amp;quot;, &#39;Ad5&#39;),
  n = c(sum(anno_CL == &amp;quot;Ad1&amp;quot;), sum(anno_CL == &amp;quot;Ad2&amp;quot;), sum(anno_CL == &amp;quot;Ad3&amp;quot;), sum(anno_CL == &amp;quot;Ad4&amp;quot;), sum(anno_CL == &amp;quot;Ad5&amp;quot;)),
  value = c(round((sum(anno_CL == &amp;quot;Ad1&amp;quot;)/nrow(anno_CL))*100, 2), round((sum(anno_CL == &amp;quot;Ad2&amp;quot;)/nrow(anno_CL))*100, 2), round((sum(anno_CL == &amp;quot;Ad3&amp;quot;)/nrow(anno_CL))*100, 2), round((sum(anno_CL == &amp;quot;Ad4&amp;quot;)/nrow(anno_CL))*100, 2), round((sum(anno_CL == &amp;quot;Ad5&amp;quot;)/nrow(anno_CL))*100, 2))
)
df2$class &amp;lt;- factor(df2$class, levels = c(&amp;quot;Ad1&amp;quot;, &amp;quot;Ad2&amp;quot;, &amp;quot;Ad3&amp;quot;, &amp;quot;Ad4&amp;quot;, &amp;quot;Ad5&amp;quot;))

df2 &amp;lt;- df2 %&amp;gt;%
  arrange(desc(class)) %&amp;gt;%
  mutate(text_y = cumsum(value) - value/2)
df2$pos = (cumsum(c(0, df2$value)) + c(df2$value / 2, .01))[1:nrow(df2)]

ggplot(df2, aes(x = &amp;quot;&amp;quot;, y = value, fill = class)) +
  geom_bar(width = 1, stat = &amp;quot;identity&amp;quot;, color = &amp;quot;white&amp;quot;) +
  coord_polar(&amp;quot;y&amp;quot;, start = 0)+
  scale_fill_manual(values = c(&amp;quot;#11c78b&amp;quot;, &amp;quot;#800080&amp;quot;, &amp;quot;#e57400&amp;quot;, &amp;quot;#0000FF&amp;quot;, &amp;quot;#dfdf0d&amp;quot;)) +
  theme_void() + labs(fill = &amp;quot;Clusters&amp;quot;) +
  geom_text_repel(aes(x = 1.5, y = pos, label = paste0(value, &amp;quot;%&amp;quot;)), nudge_x = .1,
                  segment.size = .7, show.legend = FALSE)

### RT
ggplot() +
  geom_point(data = df, aes(x = tSNE_1, y = tSNE_2, color = timpoint), size = 0.5) +
  scale_color_manual(values = rep(&amp;quot;gray75&amp;quot;, 5)) +
  guides(color = guide_legend(override.aes = list(size=7))) +
  xlab(&amp;quot;t-SNE 1&amp;quot;) + ylab(&amp;quot;t-SNE 2&amp;quot;) +
  labs(color = &#39;&#39;) + ggtitle(paste0(&#39;RT (&#39;, nrow(anno_RT), &#39; cells)&#39;)) +
  theme_classic() +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        legend.position=&amp;quot;none&amp;quot;, plot.title = element_text(hjust = 0.5, size=8)) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_RT)[anno_RT$clusters == &#39;Ad1&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_RT)[anno_RT$clusters == &#39;Ad1&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#11c78b&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_RT)[anno_RT$clusters == &#39;Ad2&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_RT)[anno_RT$clusters == &#39;Ad2&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#800080&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_RT)[anno_RT$clusters == &#39;Ad3&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_RT)[anno_RT$clusters == &#39;Ad3&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#e57400&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_RT)[anno_RT$clusters == &#39;Ad4&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_RT)[anno_RT$clusters == &#39;Ad4&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#0000FF&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_RT)[anno_RT$clusters == &#39;Ad5&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_RT)[anno_RT$clusters == &#39;Ad5&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#dfdf0d&amp;quot;, size = 1)

df2 &amp;lt;- data.frame(
  class = c(&amp;quot;Ad1&amp;quot;, &amp;quot;Ad2&amp;quot;, &amp;quot;Ad3&amp;quot;, &amp;quot;Ad4&amp;quot;, &#39;Ad5&#39;),
  n = c(sum(anno_RT == &amp;quot;Ad1&amp;quot;), sum(anno_RT == &amp;quot;Ad2&amp;quot;), sum(anno_RT == &amp;quot;Ad3&amp;quot;), sum(anno_RT == &amp;quot;Ad4&amp;quot;), sum(anno_RT == &amp;quot;Ad5&amp;quot;)),
  value = c(round((sum(anno_RT == &amp;quot;Ad1&amp;quot;)/nrow(anno_RT))*100, 2), round((sum(anno_RT == &amp;quot;Ad2&amp;quot;)/nrow(anno_RT))*100, 2), round((sum(anno_RT == &amp;quot;Ad3&amp;quot;)/nrow(anno_RT))*100, 2), round((sum(anno_RT == &amp;quot;Ad4&amp;quot;)/nrow(anno_RT))*100, 2), round((sum(anno_RT == &amp;quot;Ad5&amp;quot;)/nrow(anno_RT))*100, 2))
)
df2$class &amp;lt;- factor(df2$class, levels = c(&amp;quot;Ad1&amp;quot;, &amp;quot;Ad2&amp;quot;, &amp;quot;Ad3&amp;quot;, &amp;quot;Ad4&amp;quot;, &amp;quot;Ad5&amp;quot;))

df2 &amp;lt;- df2 %&amp;gt;%
  arrange(desc(class)) %&amp;gt;%
  mutate(text_y = cumsum(value) - value/2)
df2$pos = (cumsum(c(0, df2$value)) + c(df2$value / 2, .01))[1:nrow(df2)]

ggplot(df2, aes(x = &amp;quot;&amp;quot;, y = value, fill = class)) +
  geom_bar(width = 1, stat = &amp;quot;identity&amp;quot;, color = &amp;quot;white&amp;quot;) +
  coord_polar(&amp;quot;y&amp;quot;, start = 0)+
  scale_fill_manual(values = c(&amp;quot;#11c78b&amp;quot;, &amp;quot;#800080&amp;quot;, &amp;quot;#e57400&amp;quot;, &amp;quot;#0000FF&amp;quot;, &amp;quot;#dfdf0d&amp;quot;)) +
  theme_void() + labs(fill = &amp;quot;Clusters&amp;quot;) +
  geom_text_repel(aes(x = 1.5, y = pos, label = paste0(value, &amp;quot;%&amp;quot;)), nudge_x = .1,
                  segment.size = .7, show.legend = FALSE)

### Cold
ggplot() +
  geom_point(data = df, aes(x = tSNE_1, y = tSNE_2, color = timpoint), size = 0.5) +
  scale_color_manual(values = rep(&amp;quot;gray75&amp;quot;, 5)) +
  xlab(&amp;quot;t-SNE 1&amp;quot;) + ylab(&amp;quot;t-SNE 2&amp;quot;) +
  guides(color = guide_legend(override.aes = list(size=7))) +
  labs(color = &#39;&#39;) + ggtitle(paste0(&#39;Cold (&#39;, nrow(anno_Cold), &#39; cells)&#39;)) +
  theme_classic() +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        legend.position = &amp;quot;none&amp;quot;, plot.title = element_text(hjust = 0.5, size=8)) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_Cold)[anno_Cold$clusters == &#39;Ad1&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_Cold)[anno_Cold$clusters == &#39;Ad1&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#11c78b&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_Cold)[anno_Cold$clusters == &#39;Ad2&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_Cold)[anno_Cold$clusters == &#39;Ad2&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#800080&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_Cold)[anno_Cold$clusters == &#39;Ad3&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_Cold)[anno_Cold$clusters == &#39;Ad3&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#e57400&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_Cold)[anno_Cold$clusters == &#39;Ad4&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_Cold)[anno_Cold$clusters == &#39;Ad4&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#0000FF&amp;quot;, size = 1) +
  annotate(&amp;quot;point&amp;quot;, df[rownames(anno_Cold)[anno_Cold$clusters == &#39;Ad5&#39;], &#39;tSNE_1&#39;],
           df[rownames(anno_Cold)[anno_Cold$clusters == &#39;Ad5&#39;], &#39;tSNE_2&#39;], colour = &amp;quot;#dfdf0d&amp;quot;, size = 1)

df2 &amp;lt;- data.frame(
  class = c(&amp;quot;Ad1&amp;quot;, &amp;quot;Ad2&amp;quot;, &amp;quot;Ad3&amp;quot;, &amp;quot;Ad4&amp;quot;, &#39;Ad5&#39;),
  n = c(sum(anno_Cold == &amp;quot;Ad1&amp;quot;), sum(anno_Cold == &amp;quot;Ad2&amp;quot;), sum(anno_Cold == &amp;quot;Ad3&amp;quot;), sum(anno_Cold == &amp;quot;Ad4&amp;quot;), sum(anno_Cold == &amp;quot;Ad5&amp;quot;)),
  value = c(round((sum(anno_Cold == &amp;quot;Ad1&amp;quot;)/nrow(anno_Cold))*100, 2), round((sum(anno_Cold == &amp;quot;Ad2&amp;quot;)/nrow(anno_Cold))*100, 2), round((sum(anno_Cold == &amp;quot;Ad3&amp;quot;)/nrow(anno_Cold))*100, 2), round((sum(anno_Cold == &amp;quot;Ad4&amp;quot;)/nrow(anno_Cold))*100, 2), round((sum(anno_Cold == &amp;quot;Ad5&amp;quot;)/nrow(anno_Cold))*100, 2))
)
df2$class &amp;lt;- factor(df2$class, levels = c(&amp;quot;Ad1&amp;quot;, &amp;quot;Ad2&amp;quot;, &amp;quot;Ad3&amp;quot;, &amp;quot;Ad4&amp;quot;, &amp;quot;Ad5&amp;quot;))

df2 &amp;lt;- df2 %&amp;gt;%
  arrange(desc(class)) %&amp;gt;%
  mutate(text_y = cumsum(value) - value/2)
df2$pos = (cumsum(c(0, df2$value)) + c(df2$value / 2, .01))[1:nrow(df2)]

ggplot(df2, aes(x = &amp;quot;&amp;quot;, y = value, fill = class)) +
  geom_bar(width = 1, stat = &amp;quot;identity&amp;quot;, color = &amp;quot;white&amp;quot;) +
  coord_polar(&amp;quot;y&amp;quot;, start = 0)+
  scale_fill_manual(values = c(&amp;quot;#11c78b&amp;quot;, &amp;quot;#800080&amp;quot;, &amp;quot;#e57400&amp;quot;, &amp;quot;#0000FF&amp;quot;, &amp;quot;#dfdf0d&amp;quot;)) +
  theme_void() + labs(fill = &amp;quot;Clusters&amp;quot;) +
  geom_text_repel(aes(x = 1.5, y = pos, label = paste0(value, &amp;quot;%&amp;quot;)), nudge_x = .1,
                  segment.size = .7, show.legend = FALSE)



#################################
########### Figure 3E ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- factor(data$timpoint)
data$cluster &amp;lt;- factor(new_cluster)

data &amp;lt;-SeuratWrappers:: RunALRA(data)
data &amp;lt;- ScaleData(data, features = rownames(data))

genes &amp;lt;- c(&#39;Acaa2&#39;, &#39;Ehhadh&#39;, &#39;Slc27a2&#39;, &#39;Acadm&#39;, &#39;Scp2&#39;, &#39;Acadvl&#39;, &#39;Hadha&#39;, &#39;Hadhb&#39;, &#39;Acaa1b&#39;, &#39;Abcd3&#39;, 
           &#39;Sdhaf2&#39;, &#39;Pdha1&#39;, &#39;Pdhb&#39;, &#39;Idh3g&#39;, &#39;Mdh1&#39;, &#39;Sdha&#39;, &#39;Ndufs4&#39;, &#39;Sdhc&#39;, &#39;Suclg1&#39;, &#39;Mdh2&#39;, 
           &#39;Akt1&#39;, &#39;Kiss1r&#39;, &#39;Mif&#39;, &#39;Cpt1b&#39;, &#39;Fabp3&#39;, &#39;Acsl5&#39;, &#39;Mfsd2a&#39;, &#39;Abcc4&#39;, &#39;Acsl3&#39;, &#39;Pla2g12a&#39;, 
           &#39;Aldoa&#39;, &#39;Gpi1&#39;, &#39;Pgk1&#39;, &#39;Gapdh&#39;, &#39;Pfkp&#39;, &#39;Pkm&#39;, &#39;Ogdh&#39;, &#39;Ppara&#39;, &#39;Prkaa1&#39;, &#39;Gale&#39;, &#39;Entpd5&#39;, &#39;Stat3&#39;, &#39;Foxk2&#39;, &#39;Igf1&#39;, 
           &amp;quot;Daglb&amp;quot;, &amp;quot;Slc2a4&amp;quot;, &amp;quot;Gpd1&amp;quot;, &amp;quot;Pcx&amp;quot;, &amp;quot;Abhd5&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;Lipe&amp;quot;, &amp;quot;Pck1&amp;quot;, &amp;quot;Pnpla2&amp;quot;)
genes &amp;lt;- genes[genes %in% rownames(data)]

mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)
DoHeatmap(data, features = genes, angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;UCP1 Expression&#39;)



#################################
########### Figure 3G ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$clusters &amp;lt;- Idents(data)

data &amp;lt;- SeuratWrappers::RunALRA(data)
data &amp;lt;- ScaleData(data)

genes &amp;lt;- c(&#39;Acadm&#39;, &#39;Adipoq&#39;, &#39;Adrb3&#39;, &#39;Lep&#39;, &#39;Fasn&#39;, 
           &#39;Ucp1&#39;, &#39;Cidea&#39;, &#39;Dio2&#39;, &#39;Elovl3&#39;, &#39;Cox8b&#39;, 
           &#39;Cpt1b&#39;, &#39;Gk&#39;, &#39;Plin5&#39;, &#39;Pnpla2&#39;, &#39;Lpl&#39;, 
           &#39;Acaa2&#39;, &#39;Sdhc&#39;, &#39;Fabp3&#39;, &#39;Ppara&#39;, &#39;Slc2a4&#39;)
genes &amp;lt;- genes[genes %in% rownames(data)]

df &amp;lt;- NULL
for (i in 1:length(genes)) {
  c1 &amp;lt;- data.frame(value = data@assays$alra@data[genes[i], names(Idents(data))[which(Idents(data) == &#39;Ad1&#39;)]], cluster = &#39;Ad1&#39;, gene = genes[i])
  c2 &amp;lt;- data.frame(value = data@assays$alra@data[genes[i], names(Idents(data))[which(Idents(data) == &#39;Ad2&#39;)]], cluster = &#39;Ad2&#39;, gene = genes[i])
  c3 &amp;lt;- data.frame(value = data@assays$alra@data[genes[i], names(Idents(data))[which(Idents(data) == &#39;Ad3&#39;)]], cluster = &#39;Ad3&#39;, gene = genes[i])
  c4 &amp;lt;- data.frame(value = data@assays$alra@data[genes[i], names(Idents(data))[which(Idents(data) == &#39;Ad4&#39;)]], cluster = &#39;Ad4&#39;, gene = genes[i])
  c5 &amp;lt;- data.frame(value = data@assays$alra@data[genes[i], names(Idents(data))[which(Idents(data) == &#39;Ad5&#39;)]], cluster = &#39;Ad5&#39;, gene = genes[i])
  
  df &amp;lt;- rbind(df, rbind(c1, c2, c3, c4, c5))
}
df$cluster &amp;lt;- as.factor(df$cluster)
df$gene &amp;lt;- factor(df$gene, levels = genes)

intr &amp;lt;- aggregate(df[, 1], list(df$gene), mean)
colnames(intr) &amp;lt;- c(&#39;gene&#39;, &#39;Z&#39;)

ggboxplot(df, x = &amp;quot;cluster&amp;quot;, y = &amp;quot;value&amp;quot;,
                 color = &amp;quot;cluster&amp;quot;, add = &amp;quot;jitter&amp;quot;) +
  facet_wrap(~ gene) + geom_hline(data = intr, aes(yintercept = Z), linetype = &#39;dashed&#39;) +
  stat_compare_means(label = &amp;quot;p.signif&amp;quot;, method = &amp;quot;t.test&amp;quot;, ref.group = &amp;quot;.all.&amp;quot;, label.x = 1.5, label.y = 3.5) +
  xlab(NULL) + ylab(&#39;Normalized Expression&#39;) + theme_bw() +
  scale_color_manual(values = c(&#39;Ad1&#39; = &amp;quot;#11c78b&amp;quot;, &#39;Ad2&#39; = &amp;quot;#800080&amp;quot;, &#39;Ad3&#39; = &amp;quot;#e57400&amp;quot;, &#39;Ad4&#39; = &amp;quot;#0000FF&amp;quot;, &#39;Ad5&#39; = &amp;quot;#dfdf0d&amp;quot;))



#################################
########### Figure 3H ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
data$timpoint &amp;lt;- gsub(&#39;4day&#39;, &#39;Cold&#39;, data$timpoint)

infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)
new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

Idents(data) &amp;lt;- as.factor(data$timpoint)
data &amp;lt;- subset(data, cells = names(which(data$timpoint == &#39;CL&#39; | data$timpoint == &#39;RT&#39;)))

DefaultAssay(data) &amp;lt;- &amp;quot;RNA&amp;quot;
mat &amp;lt;- data@assays$RNA@data

fdata &amp;lt;- data.frame(gene_short_name = rownames(data), row.names = rownames(data))
pdata &amp;lt;- data@meta.data

pd &amp;lt;- new(&amp;quot;AnnotatedDataFrame&amp;quot;, data = pdata)
fd &amp;lt;- new(&amp;quot;AnnotatedDataFrame&amp;quot;, data = fdata)
cds &amp;lt;- newCellDataSet(as(mat, &amp;quot;dgCMatrix&amp;quot;),
                      phenoData = pd,
                      featureData = fd, 
                      expressionFamily=negbinomial.size())

rm(data, mat, fdata, pdata, fd, pd)

cds &amp;lt;- estimateSizeFactors(cds)
cds &amp;lt;- estimateDispersions(cds)

cds &amp;lt;- detectGenes(cds, min_expr = 0.1)
expressed_genes &amp;lt;- row.names(subset(fData(cds), num_cells_expressed &amp;gt;= 10))

diff_test_res &amp;lt;- differentialGeneTest(cds[expressed_genes, ], fullModelFormulaStr = &amp;quot;~cluster&amp;quot;, cores = 6, verbose = T)
ordering_genes &amp;lt;- row.names(subset(diff_test_res, qval &amp;lt; 0.01))
cds &amp;lt;- setOrderingFilter(cds, ordering_genes)

cds &amp;lt;- reduceDimension(cds, max_components = 2, method = &#39;DDRTree&#39;, verbose = TRUE)
cds &amp;lt;- orderCells(cds)
cds &amp;lt;- orderCells(cds, root_state = 3)

plot_cell_trajectory(cds, color_by = &amp;quot;Pseudotime&amp;quot;)

plot_cell_trajectory(cds, color_by = &amp;quot;cluster&amp;quot;) + 
  scale_color_manual(values = c(&amp;quot;Ad1&amp;quot; = &amp;quot;#11c78b&amp;quot;, &amp;quot;Ad2&amp;quot; = &amp;quot;#800080&amp;quot;, &amp;quot;Ad3&amp;quot; = &amp;quot;#e57400&amp;quot;, &amp;quot;Ad4&amp;quot; = &amp;quot;#0000FF&amp;quot;, &amp;quot;Ad5&amp;quot; = &amp;quot;#dfdf0d&amp;quot;))

plotMonocle(cds, c(&#39;Pparg&#39;, &#39;Creb1&#39;, &#39;Atf2&#39;, &#39;Egr2&#39;, &#39;Dbp&#39;, &#39;Xbp1&#39;, &#39;Clock&#39;, &#39;Zbtb43&#39;, &#39;Zbtb7a&#39;))



#################################
########### Figure 3I ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
data$timpoint &amp;lt;- gsub(&#39;4day&#39;, &#39;Cold&#39;, data$timpoint)

infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)
new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

Idents(data) &amp;lt;- as.factor(data$timpoint)
data &amp;lt;- subset(data, cells = names(which(data$timpoint == &#39;Cold&#39; | data$timpoint == &#39;RT&#39;)))

DefaultAssay(data) &amp;lt;- &amp;quot;RNA&amp;quot;
mat &amp;lt;- data@assays$RNA@data

fdata &amp;lt;- data.frame(gene_short_name = rownames(data), row.names = rownames(data))
pdata &amp;lt;- data@meta.data

pd &amp;lt;- new(&amp;quot;AnnotatedDataFrame&amp;quot;, data = pdata)
fd &amp;lt;- new(&amp;quot;AnnotatedDataFrame&amp;quot;, data = fdata)
cds &amp;lt;- newCellDataSet(as(mat, &amp;quot;dgCMatrix&amp;quot;),
                      phenoData = pd,
                      featureData = fd, 
                      expressionFamily=negbinomial.size())

rm(data, mat, fdata, pdata, fd, pd)

cds &amp;lt;- estimateSizeFactors(cds)
cds &amp;lt;- estimateDispersions(cds)

cds &amp;lt;- detectGenes(cds, min_expr = 0.1)
expressed_genes &amp;lt;- row.names(subset(fData(cds), num_cells_expressed &amp;gt;= 10))

diff_test_res &amp;lt;- differentialGeneTest(cds[expressed_genes, ], fullModelFormulaStr = &amp;quot;~cluster&amp;quot;, cores = 6, verbose = T)
ordering_genes &amp;lt;- row.names(subset(diff_test_res, qval &amp;lt; 0.01))
cds &amp;lt;- setOrderingFilter(cds, ordering_genes)

cds &amp;lt;- reduceDimension(cds, max_components = 2, method = &#39;DDRTree&#39;, verbose = TRUE)
cds &amp;lt;- orderCells(cds)
cds &amp;lt;- orderCells(cds, root_state = 4)

plot_cell_trajectory(cds, color_by = &amp;quot;Pseudotime&amp;quot;)

plot_cell_trajectory(cds, color_by = &amp;quot;cluster&amp;quot;) + 
  scale_color_manual(values = c(&amp;quot;Ad1&amp;quot; = &amp;quot;#11c78b&amp;quot;, &amp;quot;Ad2&amp;quot; = &amp;quot;#800080&amp;quot;, &amp;quot;Ad3&amp;quot; = &amp;quot;#e57400&amp;quot;, &amp;quot;Ad4&amp;quot; = &amp;quot;#0000FF&amp;quot;, &amp;quot;Ad5&amp;quot; = &amp;quot;#dfdf0d&amp;quot;))

plotMonocle(cds, c(&#39;Pparg&#39;, &#39;Creb1&#39;, &#39;Atf2&#39;, &#39;Srebf1&#39;, &#39;Cebpa&#39;, &#39;Egr1&#39;, &#39;Foxn3&#39;, &#39;Esrra&#39;, &#39;Gtf2ird1&#39;))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;figure-4&#34;&gt;Figure 4&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)
library(SeuratWrappers)
library(ggplot2)
library(dplyr)
library(ggrepel)
library(RColorBrewer)
library(fgsea)
library(UpSetR)
library(ComplexHeatmap)
library(circlize)


#################################
########### Figure 4A ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
data$clusters &amp;lt;- new_cluster

Idents(data) &amp;lt;- as.factor(data$timpoint)
data &amp;lt;- subset(data, cells = names(which(data$timpoint == &#39;4day&#39; | data$timpoint == &#39;RT&#39; | data$timpoint == &#39;CL&#39;)))

Idents(data) &amp;lt;- data$clusters

data$UCP1 &amp;lt;- factor(ifelse(data@assays$SCT@data[&amp;quot;Ucp1&amp;quot;, ] &amp;gt; 0, &amp;quot;High&amp;quot;, &amp;quot;Low&amp;quot;))

cols = c(&amp;quot;#11c78b&amp;quot;, &amp;quot;#800080&amp;quot;, &amp;quot;#e57400&amp;quot;, &amp;quot;#0000FF&amp;quot;, &amp;quot;#dfdf0d&amp;quot;)

cid &amp;lt;- as.numeric(1:length(unique(data$clusters)))[data$clusters]
dic_cid &amp;lt;- data.frame(grp = levels(data$clusters))

dims &amp;lt;- data.frame(sample_id = rownames(Embeddings(data, &#39;tsne&#39;)), 
                   cluster_id = data$clusters, 
                   x = Embeddings(data, &#39;tsne&#39;)[,1], 
                   y = Embeddings(data, &#39;tsne&#39;)[,2])

ggplot() +
  geom_point(data = dims,
             aes(x = x,
                 y = y,
                 color = factor(cluster_id)), 
             size = 1) + 
  scale_color_manual(values = rep(&amp;quot;#F5F5F5&amp;quot;, length(cols))) + 
  guides(color = guide_legend(override.aes = list(size=7))) + 
  labs(color = &#39;&#39;, x = &#39;t-SNE1&#39;, y = &#39;t-SNE2&#39;) +
  theme_classic() + 
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(), 
        legend.position = &amp;quot;none&amp;quot;, 
        plot.title = element_text(hjust = 0.5, size=8)) + 
  annotate(&amp;quot;point&amp;quot;,
           dims[[&amp;quot;x&amp;quot;]][which(dims[[&amp;quot;cluster_id&amp;quot;]] == &#39;Ad1&#39;)],
           dims[[&amp;quot;y&amp;quot;]][which(dims[[&amp;quot;cluster_id&amp;quot;]] == &#39;Ad1&#39;)], 
           colour = cols[1], size = 1) + 
  annotate(&amp;quot;point&amp;quot;,
           dims[[&amp;quot;x&amp;quot;]][which(dims[[&amp;quot;cluster_id&amp;quot;]] == &#39;Ad2&#39;)],
           dims[[&amp;quot;y&amp;quot;]][which(dims[[&amp;quot;cluster_id&amp;quot;]] == &#39;Ad2&#39;)], 
           colour = cols[2], size = 1) +
  annotate(&amp;quot;point&amp;quot;,
           dims[[&amp;quot;x&amp;quot;]][which(dims[[&amp;quot;cluster_id&amp;quot;]] == &#39;Ad5&#39;)],
           dims[[&amp;quot;y&amp;quot;]][which(dims[[&amp;quot;cluster_id&amp;quot;]] == &#39;Ad5&#39;)], 
           colour = cols[5], size = 1) + 
  annotate(&amp;quot;point&amp;quot;,
           dims[names(data$UCP1[which(data$UCP1 == &#39;High&#39;)]), 3],
           dims[names(data$UCP1[which(data$UCP1 == &#39;High&#39;)]), 4], 
           colour = &#39;red&#39;, size = 1.5)

#pieplot UCP1 High
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

Idents(data) &amp;lt;- as.factor(data$timpoint)
data &amp;lt;- subset(data, cells = names(which(data$timpoint == &#39;4day&#39; | data$timpoint == &#39;RT&#39; | data$timpoint == &#39;CL&#39;)))

Idents(data) &amp;lt;- data$cluster
data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;, &#39;Ad2&#39;, &#39;Ad5&#39;))

data$gene &amp;lt;- factor(ifelse(data@assays$SCT@data[&#39;Ucp1&#39;, ] &amp;gt; 0, &amp;quot;High&amp;quot;, &amp;quot;Low&amp;quot;))

df &amp;lt;- data.frame(
  class = c(&amp;quot;Ad1&amp;quot;, &amp;quot;Ad2&amp;quot;, &#39;Ad5&#39;),
  n = c(sum(Idents(data) == &#39;Ad1&#39;), sum(Idents(data) == &#39;Ad2&#39;), sum(Idents(data) == &#39;Ad5&#39;)),
  value = c(round((length(names(data$cluster[data$cluster == &#39;Ad1&#39;])[names(data$cluster[data$cluster == &#39;Ad1&#39;]) %in% names(data$gene[which(data$gene == &#39;High&#39;)])])/sum(Idents(data) == &#39;Ad1&#39;))*100, 2), round((length(names(data$cluster[data$cluster == &#39;Ad2&#39;])[names(data$cluster[data$cluster == &#39;Ad2&#39;]) %in% names(data$gene[which(data$gene == &#39;High&#39;)])])/sum(Idents(data) == &#39;Ad2&#39;))*100, 2), round((length(names(data$cluster[data$cluster == &#39;Ad5&#39;])[names(data$cluster[data$cluster == &#39;Ad5&#39;]) %in% names(data$gene[which(data$gene == &#39;High&#39;)])])/sum(Idents(data) == &#39;Ad5&#39;))*100, 2)))
df$class &amp;lt;- factor(df$class, levels = c(&amp;quot;Ad1&amp;quot;, &amp;quot;Ad2&amp;quot;, &amp;quot;Ad5&amp;quot;))

df &amp;lt;- df %&amp;gt;%
  arrange(desc(class)) %&amp;gt;%
  mutate(text_y = cumsum(value) - value/2)
df$pos = (cumsum(c(0, df$value)) + c(df$value / 2, .01))[1:nrow(df)]

ggplot(df, aes(x = &amp;quot;&amp;quot;, y = value, fill = class)) +
  geom_bar(width = 1, stat = &amp;quot;identity&amp;quot;, color = &amp;quot;white&amp;quot;) +
  coord_polar(&amp;quot;y&amp;quot;, start = 0)+
  scale_fill_manual(values = c(&amp;quot;#11c78b&amp;quot;, &amp;quot;#800080&amp;quot;, &amp;quot;#dfdf0d&amp;quot;)) +
  theme_void() + labs(fill = &amp;quot;Clusters&amp;quot;) +
  geom_text_repel(aes(x = 1.5, y = pos, label = paste0(value, &amp;quot;%&amp;quot;)), nudge_x = .1, segment.size = .7, show.legend = FALSE) +
  ggtitle(&#39;Ucp1&#39;)



#################################
########### Figure 4B ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;))
data &amp;lt;- ScaleData(data, features = rownames(data))

data$UCP1 &amp;lt;- factor(ifelse(data@assays$SCT@data[&amp;quot;Ucp1&amp;quot;, ] &amp;gt; 0, &amp;quot;High&amp;quot;, &amp;quot;Low&amp;quot;))
Idents(data) &amp;lt;- data$UCP1

markers &amp;lt;- FindAllMarkers(data, logfc.threshold = 0, only.pos = F)

markers &amp;lt;- subset(markers, p_val_adj &amp;lt; 0.05 &amp;amp; cluster == &#39;High&#39;)
markers &amp;lt;- markers[order(markers$avg_logFC, decreasing = T), ]

genes1 &amp;lt;- c(head(markers$gene, 10), tail(markers$gene, 10))

mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)

DoHeatmap(data, features = genes1, angle = 0, size = 5, label = F) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;UCP1 Expression&#39;)



#################################
########### Figure 4C ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;))
data &amp;lt;- ScaleData(data, features = rownames(data))

data$UCP1 &amp;lt;- factor(ifelse(data@assays$SCT@data[&amp;quot;Ucp1&amp;quot;, ] &amp;gt; 0, &amp;quot;High&amp;quot;, &amp;quot;Low&amp;quot;))
Idents(data) &amp;lt;- data$UCP1

markers &amp;lt;- FindAllMarkers(data, logfc.threshold = 0, only.pos = F)

markers &amp;lt;- subset(markers, p_val_adj &amp;lt; 0.05 &amp;amp; cluster == &#39;High&#39;)
markers &amp;lt;- markers[order(markers$avg_logFC, decreasing = T), ]

ort &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Orthologs_human_mouse.txt&amp;quot;, sep = &amp;quot;,&amp;quot;, header = T)
pathways &amp;lt;- gmtPathways(&#39;/Users/biagi/PhD/AdipoSNAP/msigdb.v7.1.symbols.gmt&#39;)

comp1 &amp;lt;- rbind(head(markers, 50), tail(markers, 35))

comp1 &amp;lt;- merge(ort, comp1, by.x = &amp;quot;Mouse.gene.name&amp;quot;, by.y = &amp;quot;gene&amp;quot;)
comp1$Mouse.gene.name &amp;lt;- comp1$Gene.stable.ID &amp;lt;- comp1$Mouse.gene.stable.ID &amp;lt;- NULL
colnames(comp1)[1] &amp;lt;- &amp;quot;Gene&amp;quot;
ranks &amp;lt;- structure(comp1$avg_logFC, names = comp1$Gene)
ranks &amp;lt;- sort(ranks)
fgseaRes1 &amp;lt;- fgsea(pathways, ranks, minSize=5)
fgseaRes1 &amp;lt;- subset(fgseaRes1, pval &amp;lt; 0.05)
fgseaRes1 &amp;lt;- fgseaRes1[order(fgseaRes1$NES, decreasing = T), ]
genes1 &amp;lt;- fgseaRes1$leadingEdge
for (i in 1:length(genes1)) {
  fgseaRes1$genes[i] &amp;lt;- paste(genes1[[i]], collapse = &#39;;&#39;)
}
fgseaRes1$leadingEdge &amp;lt;- NULL

pathways &amp;lt;- c(&#39;GO_POSITIVE_REGULATION_OF_COLD_INDUCED_THERMOGENESIS&#39;, &#39;GO_CELLULAR_CARBOHYDRATE_METABOLIC_PROCESS&#39;, &#39;GO_RESPONSE_TO_EXTRACELLULAR_STIMULUS&#39;, &#39;GO_MITOCHONDRION&#39;, &#39;GO_LIPID_OXIDATION&#39;, &#39;GO_CELLULAR_KETONE_METABOLIC_PROCESS&#39;, &#39;GO_INTRINSIC_COMPONENT_OF_PLASMA_MEMBRANE&#39;, &#39;GO_PROTEIN_HOMODIMERIZATION_ACTIVITY&#39;, &#39;GO_RESPONSE_TO_CYTOKINE&#39;, &#39;GO_REGULATION_OF_KINASE_ACTIVITY&#39;, &#39;RUAN_RESPONSE_TO_TROGLITAZONE_UP&#39;, &#39;GERHOLD_ADIPOGENESIS_UP&#39;)
fgseaRes1 &amp;lt;- fgseaRes1[which(fgseaRes1$pathway %in% pathways), ]
fgseaRes1$class &amp;lt;- ifelse(fgseaRes1$NES &amp;gt; 0, &#39;Up-regulated&#39;, &#39;Down-regulated&#39;)
fgseaRes1 &amp;lt;- fgseaRes1[order(fgseaRes1$class, fgseaRes1$NES), ]
fgseaRes1$order &amp;lt;- seq_len(nrow(fgseaRes1))

ggplot(fgseaRes1, aes(order, NES, fill = class)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, show.legend = TRUE) +
  xlab(NULL) + ylab(&amp;quot;Normalized Enrichment Score (NES)&amp;quot;) +
  theme_bw() +
  coord_flip() +
  theme(legend.position = &amp;quot;right&amp;quot;, legend.title = element_text(size = 10), plot.title = element_text(hjust = 0.5)) +
  scale_fill_discrete(name = &amp;quot;Enrichment&amp;quot;) +
  scale_x_continuous(breaks = fgseaRes1$order, labels = fgseaRes1$pathway, expand = c(0, 0)) +
  ggtitle(&#39;GSEA for UCP1 High/Low for AD1 cluster&#39;)



#################################
########### Figure 4D ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)
new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)
data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;))
tmp1 &amp;lt;- factor(ifelse(data@assays$SCT@data[&amp;quot;Ucp1&amp;quot;, ] &amp;gt; 0, &amp;quot;Ad1_High&amp;quot;, &amp;quot;Ad1_Low&amp;quot;))


data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)
new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)
data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;))

tmp2 &amp;lt;- as.character(Idents(data))
tmp3 &amp;lt;- names(Idents(data))
tmp2[which(tmp3 %in% names(tmp1[tmp1 == &#39;Ad1_High&#39;]))] &amp;lt;- &#39;Ad1_High&#39;
tmp2[which(tmp3 %in% names(tmp1[tmp1 == &#39;Ad1_Low&#39;]))] &amp;lt;- &#39;Ad1_Low&#39;

tmp &amp;lt;- as.factor(structure(tmp2, names = tmp3))
Idents(data) &amp;lt;- tmp
data$cluster &amp;lt;- Idents(data)

data &amp;lt;- SeuratWrappers::RunALRA(data)
data &amp;lt;- ScaleData(data, features = rownames(data))

genes &amp;lt;- c(&#39;Acaa2&#39;, &#39;Ehhadh&#39;, &#39;Slc27a2&#39;, &#39;Acadm&#39;, &#39;Scp2&#39;, &#39;Acadvl&#39;, &#39;Hadha&#39;, &#39;Hadhb&#39;, &#39;Acaa1b&#39;, &#39;Abcd3&#39;, 
           &#39;Sdhaf2&#39;, &#39;Pdha1&#39;, &#39;Pdhb&#39;, &#39;Idh3g&#39;, &#39;Mdh1&#39;, &#39;Sdha&#39;, &#39;Ndufs4&#39;, &#39;Sdhc&#39;, &#39;Suclg1&#39;, &#39;Mdh2&#39;, 
           &#39;Akt1&#39;, &#39;Kiss1r&#39;, &#39;Mif&#39;, &#39;Cpt1b&#39;, &#39;Fabp3&#39;, &#39;Acsl5&#39;, &#39;Mfsd2a&#39;, &#39;Abcc4&#39;, &#39;Acsl3&#39;, &#39;Pla2g12a&#39;, 
           &#39;Aldoa&#39;, &#39;Gpi1&#39;, &#39;Pgk1&#39;, &#39;Gapdh&#39;, &#39;Pfkp&#39;, &#39;Pkm&#39;, &#39;Ogdh&#39;, &#39;Ppara&#39;, &#39;Prkaa1&#39;, &#39;Gale&#39;, &#39;Entpd5&#39;, &#39;Stat3&#39;, &#39;Foxk2&#39;, &#39;Igf1&#39;, 
           &amp;quot;Daglb&amp;quot;, &amp;quot;Slc2a4&amp;quot;, &amp;quot;Gpd1&amp;quot;, &amp;quot;Pcx&amp;quot;, &amp;quot;Abhd5&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;Lipe&amp;quot;, &amp;quot;Pck1&amp;quot;, &amp;quot;Pnpla2&amp;quot;)
genes &amp;lt;- genes[genes %in% rownames(data)]

mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)

DoHeatmap(data, features = genes, angle = 0, size = 5, label = F) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;UCP1 Expression&#39;)



#################################
########### Figure 4F ###########
#################################
expressionInput &amp;lt;- c(Set1 = 962, Set2 = 244, Set3 = 73, Set4 = 35, `Set1&amp;amp;Set2` = 315, `Set1&amp;amp;Set3` = 16, `Set2&amp;amp;Set3` = 1, `Set1&amp;amp;Set2&amp;amp;Set3` = 46)

upset(fromExpression(expressionInput), set_size.show = T, shade.alpha	= 1)



#################################
########### Figure 4G ###########
#################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

ort &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Orthologs_human_mouse.txt&amp;quot;, sep = &amp;quot;,&amp;quot;, header = T)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;))
data &amp;lt;- ScaleData(data, features = rownames(data))

data$UCP1 &amp;lt;- factor(ifelse(data@assays$SCT@data[&amp;quot;Ucp1&amp;quot;, ] &amp;gt; 0, &amp;quot;High&amp;quot;, &amp;quot;Low&amp;quot;))
Idents(data) &amp;lt;- data$UCP1

genes_High &amp;lt;- c(&#39;PPARD&#39;, &#39;HNF4A&#39;, &#39;ESR1&#39;, &#39;PPARG&#39;, &#39;SALL4&#39;, &#39;CEBPD&#39;, &#39;EGR1&#39;, &#39;NANOG&#39;, &#39;STAT3&#39;, &#39;BHLHE40&#39;)
genes_High &amp;lt;- ort$Mouse.gene.name[which(ort$Gene.name %in% genes_High)]
genes_High &amp;lt;- genes_High[genes_High %in% rownames(data)]
tabHigh &amp;lt;- as.matrix(data@assays$SCT@data[genes_High, names(data$UCP1)[which(data$UCP1 == &#39;High&#39;)]])
tabLow &amp;lt;- as.matrix(data@assays$SCT@data[genes_High, names(data$UCP1)[which(data$UCP1 == &#39;Low&#39;)]])

df &amp;lt;- data.frame(High = rowSums(tabHigh), Low = rowSums(tabLow))
df &amp;lt;- t(df)

x &amp;lt;- as.matrix(df)
m = apply(x, 1, mean, na.rm = T)
s = apply(x, 1, sd, na.rm = T)
res &amp;lt;- (x - m)/s
cn = colnames(res)

ba &amp;lt;- HeatmapAnnotation(
  text = anno_text(cn, rot = 0, location = unit(0.9, &amp;quot;npc&amp;quot;), just = &amp;quot;centre&amp;quot;, gp = gpar(fontsize = 8)),
  annotation_height = max_text_width(cn)
)

breaks &amp;lt;- seq(-2,2, by= 0.1)
Heatmap(as.matrix(res), 
        bottom_annotation = ba, 
        name = &amp;quot;zscore&amp;quot;, column_title = &amp;quot;Ad1 UCP1 High&amp;quot;, width = 1, 
        show_row_names = T, show_column_names = F,
        cluster_rows = F, cluster_columns = T,
        col = colorRamp2(breaks, colorRampPalette(rev(brewer.pal(n = 10, name = &amp;quot;RdBu&amp;quot;)))(41)), 
        heatmap_height = unit(6, &amp;quot;cm&amp;quot;), row_names_gp = gpar(fontsize = 8))


genes_Low &amp;lt;- c(&#39;PPARG&#39;, &#39;SALL4&#39;, &#39;ESR1&#39;, &#39;TP63&#39;, &#39;AR&#39;, &#39;GATA2&#39;)
genes_Low &amp;lt;- ort$Mouse.gene.name[which(ort$Gene.name %in% genes_Low)]
genes_Low &amp;lt;- genes_Low[genes_Low %in% rownames(data)]
tabHigh &amp;lt;- as.matrix(data@assays$SCT@data[genes_Low, names(data$UCP1)[which(data$UCP1 == &#39;High&#39;)]])
tabLow &amp;lt;- as.matrix(data@assays$SCT@data[genes_Low, names(data$UCP1)[which(data$UCP1 == &#39;Low&#39;)]])

df &amp;lt;- data.frame(High = rowSums(tabHigh), Low = rowSums(tabLow))
df &amp;lt;- t(df)

x &amp;lt;- as.matrix(df)
m = apply(x, 1, mean, na.rm = T)
s = apply(x, 1, sd, na.rm = T)
res &amp;lt;- (x - m)/s
cn = colnames(res)

ba &amp;lt;- HeatmapAnnotation(
  text = anno_text(cn, rot = 0, location = unit(0.9, &amp;quot;npc&amp;quot;), just = &amp;quot;centre&amp;quot;, gp = gpar(fontsize = 8)),
  annotation_height = max_text_width(cn)
)

breaks &amp;lt;- seq(-2,2, by= 0.1)
Heatmap(as.matrix(res), 
        bottom_annotation = ba, 
        name = &amp;quot;zscore&amp;quot;, column_title = &amp;quot;Ad1 UCP1 Low&amp;quot;, width = 1, 
        show_row_names = T, show_column_names = F,
        cluster_rows = F, cluster_columns = T,
        col = colorRamp2(breaks, colorRampPalette(rev(brewer.pal(n = 10, name = &amp;quot;RdBu&amp;quot;)))(41)), 
        heatmap_height = unit(6, &amp;quot;cm&amp;quot;), row_names_gp = gpar(fontsize = 8))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>11 - Supplementary Figures</title>
      <link>https://cbiagii.github.io/AdipoSNAP/post/11_supplementary_figures/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://cbiagii.github.io/AdipoSNAP/post/11_supplementary_figures/</guid>
      <description>&lt;h2 id=&#34;figure-s1&#34;&gt;Figure S1&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)
library(ggplot2)
library(metacell)
library(dplyr)
library(ggpubr)
library(pheatmap)
library(enrichR)


##################################
########### Figure S1A ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_Processed.rds&amp;quot;)
Idents(data) &amp;lt;- factor(data$CellTypeRefined)

TSNEPlot(data, label = FALSE, pt.size = 0.3) +
  xlab(&amp;quot;t-SNE 1&amp;quot;) + ylab(&amp;quot;t-SNE 2&amp;quot;) +
  theme_classic() + labs(color = &amp;quot;Cluster&amp;quot;) +
  theme(legend.position=&amp;quot;bottom&amp;quot;)



##################################
########### Figure S1B ###########
##################################
load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/db/mc.test_mc_f.Rda&amp;quot;)
lfp = log2(object@mc_fp)

marks_colors &amp;lt;- NULL
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_1&amp;quot;, &amp;quot;Acsl1&amp;quot;, &amp;quot;#0000b3&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_2&amp;quot;, &amp;quot;Plin4&amp;quot;, &amp;quot;#0000cc&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_3&amp;quot;, &amp;quot;Mlxipl&amp;quot;, &amp;quot;#0000e6&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_4&amp;quot;, &amp;quot;Pck1&amp;quot;, &amp;quot;#0000ff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Adipocyte_5&amp;quot;, &amp;quot;Adrb3&amp;quot;, &amp;quot;#1a1aff&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_1&amp;quot;, &amp;quot;Btnl9&amp;quot;, &amp;quot;#00cd00&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_2&amp;quot;, &amp;quot;Flt1&amp;quot;, &amp;quot;#00b300&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_3&amp;quot;, &amp;quot;Kdr&amp;quot;, &amp;quot;#009a00&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_4&amp;quot;, &amp;quot;Cdh13&amp;quot;, &amp;quot;#008000&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Endothelial_5&amp;quot;, &amp;quot;Cyyr1&amp;quot;, &amp;quot;#006700&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_1&amp;quot;, &amp;quot;Zeb2&amp;quot;, &amp;quot;#ff7f7f&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_2&amp;quot;, &amp;quot;Trps1&amp;quot;, &amp;quot;#ff6666&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_3&amp;quot;, &amp;quot;Runx1&amp;quot;, &amp;quot;#ff4c4c&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_4&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;#ff3232&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Immune_5&amp;quot;, &amp;quot;Adap2&amp;quot;, &amp;quot;#ff1919&amp;quot;, 1, 1))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_1&amp;quot;, &amp;quot;Dcn&amp;quot;, &amp;quot;#ffff4d&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_2&amp;quot;, &amp;quot;Celf2&amp;quot;, &amp;quot;#ffff33&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_3&amp;quot;, &amp;quot;Meg3&amp;quot;, &amp;quot;#ffff1a&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_4&amp;quot;, &amp;quot;Col1a2&amp;quot;, &amp;quot;#ffff00&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- rbind(marks_colors, c(&amp;quot;Progenitor_5&amp;quot;, &amp;quot;Col3a1&amp;quot;, &amp;quot;#e6e600&amp;quot;, 1, 2.5))
marks_colors &amp;lt;- as.data.frame(marks_colors)
colnames(marks_colors) &amp;lt;- c(&amp;quot;group&amp;quot;, &amp;quot;gene&amp;quot;, &amp;quot;color&amp;quot;, &amp;quot;priority&amp;quot;, &amp;quot;T_fold&amp;quot;)
marks_colors$priority &amp;lt;- as.integer(marks_colors$priority)
marks_colors$T_fold &amp;lt;- as.numeric(marks_colors$T_fold)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/db/mc2d.test_2dproj.Rda&amp;quot;)
dims &amp;lt;- data.frame(x = object@sc_x,
                   y = object@sc_y)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell/db/mc.test_mc_f.Rda&amp;quot;)
tmp1 &amp;lt;- data.frame(cells = names(object@mc), cols = object@mc)
tmp2 &amp;lt;- data.frame(cols = object@colors)
teste &amp;lt;- merge(tmp1, tmp2, by.x = &amp;quot;cols&amp;quot;, by.y = &amp;quot;row.names&amp;quot;)
teste$cols &amp;lt;- NULL

teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Adipocyte&amp;quot;, marks_colors$group)], &amp;quot;Adipocytes&amp;quot;, &amp;quot;Unknown&amp;quot;)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Progenitor&amp;quot;, marks_colors$group)], &amp;quot;Progenitors&amp;quot;, teste$cellType)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Immune&amp;quot;, marks_colors$group)], &amp;quot;Immunes&amp;quot;, teste$cellType)
teste$cellType &amp;lt;- ifelse(teste$cols.y %in% marks_colors$color[grep(&amp;quot;Endothelial&amp;quot;, marks_colors$group)], &amp;quot;Endothelials&amp;quot;, teste$cellType)
tab &amp;lt;- merge(dims, teste, by.x = &amp;quot;row.names&amp;quot;, by.y = &amp;quot;cells&amp;quot;)

data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_Processed.rds&amp;quot;)
Idents(data) &amp;lt;- factor(data$CellTypeRefined)
infos &amp;lt;- data@meta.data
infos &amp;lt;- infos[tab$Row.names, ]

final &amp;lt;- merge(infos, tab, by.x = &amp;quot;row.names&amp;quot;, by.y = &amp;quot;Row.names&amp;quot;)

A &amp;lt;- subset(final, cellType == &amp;quot;Adipocytes&amp;quot;)
E &amp;lt;- subset(final, cellType == &amp;quot;Endothelials&amp;quot;)
I &amp;lt;- subset(final, cellType == &amp;quot;Immunes&amp;quot;)
P &amp;lt;- subset(final, cellType == &amp;quot;Progenitors&amp;quot;)

new.cluster.ids &amp;lt;- c(&amp;quot;PG&amp;quot;, &amp;quot;PG&amp;quot;, &amp;quot;PG&amp;quot;, &amp;quot;EN&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;PG&amp;quot;, &amp;quot;PG&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;AD&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;EN&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;EN&amp;quot;, &amp;quot;EN&amp;quot;, &amp;quot;PG&amp;quot;)
names(new.cluster.ids) &amp;lt;- levels(data)
data &amp;lt;- RenameIdents(data, new.cluster.ids)
Idents(data) &amp;lt;- factor(Idents(data), levels = c(&amp;quot;AD&amp;quot;, &amp;quot;EN&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;PG&amp;quot;))

cls &amp;lt;- c(&amp;quot;#FFA500&amp;quot;, &amp;quot;#329932&amp;quot;, &amp;quot;#ff9999&amp;quot;, &amp;quot;#6666ff&amp;quot;)

TSNEPlot(data, label = FALSE, pt.size = 0.3, cols = cls) +
  xlab(&amp;quot;t-SNE 1&amp;quot;) + ylab(&amp;quot;t-SNE 2&amp;quot;) +
  theme_classic() + labs(color = &amp;quot;Cluster&amp;quot;) +
  theme(legend.position=&amp;quot;bottom&amp;quot;)


a &amp;lt;- round((sum(Idents(data) == &amp;quot;AD&amp;quot;)/ncol(data))*100, 2); a1 &amp;lt;- sum(Idents(data) == &amp;quot;AD&amp;quot;)
b &amp;lt;- round((sum(Idents(data) == &amp;quot;EN&amp;quot;)/ncol(data))*100, 2); b1 &amp;lt;- sum(Idents(data) == &amp;quot;EN&amp;quot;)
c &amp;lt;- round((sum(Idents(data) == &amp;quot;IM&amp;quot;)/ncol(data))*100, 2); c1 &amp;lt;- sum(Idents(data) == &amp;quot;IM&amp;quot;)
d &amp;lt;- round((sum(Idents(data) == &amp;quot;PG&amp;quot;)/ncol(data))*100, 2); d1 &amp;lt;- sum(Idents(data) == &amp;quot;PG&amp;quot;)

df &amp;lt;- data.frame(
  class = c(&amp;quot;AD&amp;quot;, &amp;quot;EN&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;PG&amp;quot;),
  n = c(a1, b1, c1, d1),
  value = c(a, b, c, d)
)

df$class &amp;lt;- factor(df$class, levels = c(&amp;quot;AD&amp;quot;, &amp;quot;EN&amp;quot;, &amp;quot;IM&amp;quot;, &amp;quot;PG&amp;quot;))

df &amp;lt;- df %&amp;gt;%
  arrange(desc(class)) %&amp;gt;%
  mutate(lab.ypos = cumsum(value) - 0.5*value)

ggplot(df, aes(x = &amp;quot;&amp;quot;, y = value, fill = class)) +
  geom_bar(width = 1, stat = &amp;quot;identity&amp;quot;, color = &amp;quot;white&amp;quot;) +
  coord_polar(&amp;quot;y&amp;quot;, start = 0)+
  geom_text(aes(y = lab.ypos, label = paste0(value, &amp;quot;%&amp;quot;)), color = &amp;quot;white&amp;quot;, fontface = &amp;quot;bold&amp;quot;)+
  scale_fill_manual(values = c(&amp;quot;#FFA500&amp;quot;, &amp;quot;#329932&amp;quot;, &amp;quot;#ff9999&amp;quot;, &amp;quot;#6666ff&amp;quot;)) +
  theme_void()



##################################
########### Figure S1C ###########
##################################
filelist = list.files(path = &amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes&amp;quot;,
                      pattern = &amp;quot;sccaf_assess&amp;quot;, recursive = T, full.names = T)
fnames &amp;lt;- gsub(&amp;quot;sccaf_assess_&amp;quot;, &amp;quot;&amp;quot;, basename(filelist))
fnames &amp;lt;- gsub(&amp;quot;.txt&amp;quot;, &amp;quot;&amp;quot;, fnames)

datalist &amp;lt;- lapply(filelist, function(x)read.csv(x))
names(datalist) &amp;lt;- fnames
datafr &amp;lt;- do.call(&amp;quot;rbind&amp;quot;, datalist)

ggplot(datafr, aes(x = Round, y = Accuracy, fill = Type)) +
  geom_violin(
    trim = FALSE,
    position = position_dodge(0.9)
  ) +
  scale_fill_manual(values = c(&amp;quot;#d20c0c&amp;quot;, &amp;quot;#1111C9&amp;quot;)) +
  geom_boxplot(
    width = 0.05,
    position = position_dodge(0.9), colour = &amp;quot;white&amp;quot;, outlier.colour = NA, show.legend = FALSE
  ) +
  xlab(&amp;quot;&amp;quot;) + ggtitle(&amp;quot;Test and cross validation accurancies per SCCAF round.&amp;quot;) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.border = element_rect(colour = &amp;quot;black&amp;quot;, fill=NA, size=0.5),
        plot.title = element_text(hjust = 0.5),
        legend.position = c(0.9, 0.15), legend.title = element_blank())



##################################
########### Figure S1D ###########
##################################
import warnings
warnings.filterwarnings(&amp;quot;ignore&amp;quot;)
from SCCAF import *
  
ad = sc.read(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/Adipocytes/results.h5ad&amp;quot;)

y_prob, y_pred, y_test, clf, cvsm, acc = SCCAF_assessment(ad.X, ad.obs[&#39;L1_result&#39;],n_jobs=8)
aucs = plot_roc(y_prob, y_test, clf, cvsm=cvsm, acc=acc)
plt.savefig(&#39;/Users/biagi/PhD/AdipoSNAP/paper/Figure_SD.eps&#39;)



##################################
########### Figure S1E ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/10x_SCT_Processed_ALRA.rds&amp;quot;)

pt &amp;lt;- FeaturePlot(data, c(&amp;quot;Adrb3&amp;quot;, &amp;quot;Pecam1&amp;quot;, &amp;quot;Ptprc&amp;quot;, &amp;quot;Cd34&amp;quot;, &amp;quot;Pdgfra&amp;quot;, &amp;quot;Itgb1&amp;quot;),
                  cols = c(&amp;quot;grey&amp;quot;, &#39;red&#39;), reduction = &#39;tsne&#39;, pt.size = 0.1, combine = F)
pt &amp;lt;- lapply(pt, function(x) {
  x + theme_classic() + xlab(&amp;quot;t-SNE 1&amp;quot;) + ylab(&amp;quot;t-SNE 2&amp;quot;) +
    theme(plot.title = element_text(hjust = 0.5, face = &amp;quot;italic&amp;quot;))
})

ggarrange(plotlist = pt, common.legend = T)



##################################
########### Figure S1F ###########
##################################
scdb_init(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT2/db&amp;quot;, force_reinit=T)
scfigs_init(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT2/figs&amp;quot;)

load(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/metacell_SCT2/db/mc.test_mc_f.Rda&amp;quot;)
lfp = log2(object@mc_fp)

mc = scdb_mc(&amp;quot;test_mc_f&amp;quot;)
gset = scdb_gset(&amp;quot;test_markers&amp;quot;)

gene_folds = mc@mc_fp

good_marks = intersect(names(gset@gene_set), rownames(mc@mc_fp))
mc_ord = 1:ncol(mc@mc_fp)

mat = log2(gene_folds[good_marks, mc_ord])
mat = pmax(pmin(mat, 3), -3)

mat_A &amp;lt;- mat[, which(mc@colors == &amp;quot;blue&amp;quot;)]
mat_A &amp;lt;- mat_A[rowSums(mat_A) &amp;gt; quantile(rowSums(mat_A), 0.9), ]

mat_E &amp;lt;- mat[, which(mc@colors == &amp;quot;green&amp;quot;)]
mat_E &amp;lt;- mat_E[rowSums(mat_E) &amp;gt; quantile(rowSums(mat_E), 0.9), ]

mat_I &amp;lt;- mat[, which(mc@colors %in% c(&amp;quot;#ff748c&amp;quot;, &amp;quot;#ff8fa3&amp;quot;))]
mat_I &amp;lt;- mat_I[rowSums(mat_I) &amp;gt; quantile(rowSums(mat_I), 0.9), ]

mat_P &amp;lt;- mat[, which(mc@colors %in% c(&amp;quot;#ffa500&amp;quot;, &amp;quot;#ffb732&amp;quot;))]
mat_P &amp;lt;- mat_P[rowSums(mat_P) &amp;gt; quantile(rowSums(mat_P), 0.9), ]

pheatmap(mat_A, fontsize = 8, main = &#39;Adipocytes&#39;, legend = TRUE, treeheight_row = 0, treeheight_col = 0)

pheatmap(mat_E, fontsize = 8, main = &#39;Endothelials&#39;, legend = TRUE, treeheight_row = 0, treeheight_col = 0)

pheatmap(mat_I, fontsize = 8, main = &#39;Immunes&#39;, legend = TRUE, treeheight_row = 0, treeheight_col = 0)

pheatmap(mat_P, fontsize = 8, main = &#39;Progenitors&#39;, legend = TRUE, treeheight_row = 0, treeheight_col = 0)



##################################
########### Figure S1G ###########
##################################
dbs &amp;lt;- c(&amp;quot;KEGG_2019_Mouse&amp;quot;, &amp;quot;WikiPathways_2019_Mouse&amp;quot;, &amp;quot;Jensen_TISSUES&amp;quot;, &amp;quot;GO_Biological_Process_2018&amp;quot;)

genes_A &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig1D_2_Markers_A.txt&amp;quot;)
genes_E &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig1D_2_Markers_E.txt&amp;quot;)
genes_I &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig1D_2_Markers_I.txt&amp;quot;)
genes_P &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig1D_2_Markers_P.txt&amp;quot;)

genes &amp;lt;- list(Adipocyte = genes_A,
              Endothelial = genes_E,
              Immune = genes_I,
              Progenitor = genes_P)

results &amp;lt;- lapply(genes, enrichr, dbs)

plotlist &amp;lt;- list()
pathlist &amp;lt;- NULL
tmplist &amp;lt;- NULL
paths &amp;lt;- NULL
for (i in 1:length(dbs)) {
  tmp &amp;lt;- lapply(results, `[[`, i)
  tmp &amp;lt;- mapply(cbind, tmp, &amp;quot;type&amp;quot; = names(tmp), SIMPLIFY=F)
  tmp &amp;lt;- do.call(&amp;quot;rbind&amp;quot;, tmp)
  
  tmp &amp;lt;- subset(tmp, Adjusted.P.value &amp;lt; 0.05)
  
  tmp$Adjusted.P.value &amp;lt;- -log10(tmp$Adjusted.P.value)
  tmp$Combined.Score &amp;lt;- log2(tmp$Combined.Score)
  
  tmplist &amp;lt;- rbind(tmplist, data.frame(tmp, class = dbs[i]))
  
  tmp &amp;lt;- tmp %&amp;gt;% group_by(type) %&amp;gt;% top_n(n = 5, wt = Combined.Score)
  tmp$Term &amp;lt;- factor(tmp$Term, levels = rev(unique(tmp$Term)))
  pathlist &amp;lt;- rbind(pathlist, data.frame(tmp %&amp;gt;% group_by(type) %&amp;gt;% top_n(n = 2, wt = Combined.Score), class = dbs[i]))
  paths &amp;lt;- rbind(paths, data.frame(tmp, class = dbs[i]))
  
  plotlist[[i]] &amp;lt;- ggplot(tmp, aes(x = type, y = Term)) +
    geom_point(aes(size = Adjusted.P.value, color = Combined.Score)) +
    theme_bw(base_size = 9) +
    theme(plot.title = element_text(hjust = 0.5), axis.text=element_text(size=12)) +
    scale_colour_gradient(limits=c(0, max(tmp$Combined.Score)+0.5), high = &amp;quot;#2b9348&amp;quot;, low = &amp;quot;#eeef20&amp;quot;) +
    xlab(NULL) + ylab(NULL) +
    ggtitle(dbs[i]) + labs(color = &amp;quot;Combined Score&amp;quot;, size = &amp;quot;-log10(padj)&amp;quot;)
}
tmplist &amp;lt;- tmplist %&amp;gt;% group_by(type) %&amp;gt;% arrange(desc(Combined.Score), .by_group = TRUE)

ggarrange(plotlist = plotlist)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;figure-s2&#34;&gt;Figure S2&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)
library(ggplot2)
library(ggpubr)
library(ggrepel)
library(enrichR)
library(dplyr)

source(&#39;/Users/biagi/PhD/AdipoSNAP/2_Functions.R&#39;)


##################################
########### Figure S2A ###########
##################################
filelist = list.files(path = &amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly&amp;quot;,
                      pattern = &amp;quot;sccaf_assess&amp;quot;, recursive = T, full.names = T)
fnames &amp;lt;- gsub(&amp;quot;sccaf_assess_&amp;quot;, &amp;quot;&amp;quot;, basename(filelist))
fnames &amp;lt;- gsub(&amp;quot;.txt&amp;quot;, &amp;quot;&amp;quot;, fnames)

datalist &amp;lt;- lapply(filelist, function(x)read.csv(x))
names(datalist) &amp;lt;- fnames
datafr &amp;lt;- do.call(&amp;quot;rbind&amp;quot;, datalist)

ggplot(datafr, aes(x = Round, y = Accuracy, fill = Type)) +
  geom_violin(
    trim = FALSE,
    position = position_dodge(0.9)
  ) +
  scale_fill_manual(values = c(&amp;quot;#d20c0c&amp;quot;, &amp;quot;#1111C9&amp;quot;)) +
  geom_boxplot(
    width = 0.05,
    position = position_dodge(0.9), colour = &amp;quot;white&amp;quot;, outlier.colour = NA, show.legend = FALSE
  ) +
  xlab(&amp;quot;&amp;quot;) + ggtitle(&amp;quot;Test and cross validation accurancies per SCCAF round.&amp;quot;) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.border = element_rect(colour = &amp;quot;black&amp;quot;, fill=NA, size=0.5),
        plot.title = element_text(hjust = 0.5),
        legend.position = c(0.9, 0.15), legend.title = element_blank())



##################################
########### Figure S2B ###########
##################################
import warnings
warnings.filterwarnings(&amp;quot;ignore&amp;quot;)
from SCCAF import *
  
ad = sc.read(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results.h5ad&amp;quot;)

y_prob, y_pred, y_test, clf, cvsm, acc = SCCAF_assessment(ad.X, ad.obs[&#39;L1_result&#39;],n_jobs=8)
aucs = plot_roc(y_prob, y_test, clf, cvsm=cvsm, acc=acc)
plt.savefig(&#39;/Users/biagi/PhD/AdipoSNAP/paper/Figure_2A_3.eps&#39;)



##################################
########### Figure S2C ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster

pt &amp;lt;- VlnPlot(data, c(&#39;Adipoq&#39;, &#39;Adrb3&#39;, &#39;Cidec&#39;, &#39;Dgat1&#39;, &#39;Fasn&#39;, &#39;Lipe&#39;, &#39;Pck1&#39;, &#39;Plin1&#39;, &#39;Pnpla2&#39;, &#39;Retn&#39;),
              cols = c(&amp;quot;#11c78b&amp;quot;, &amp;quot;#800080&amp;quot;, &amp;quot;#e57400&amp;quot;, &amp;quot;#0000FF&amp;quot;, &amp;quot;#dfdf0d&amp;quot;), assay = &amp;quot;RNA&amp;quot;, combine = F)
pt &amp;lt;- lapply(pt, function(x) {
  x + theme_bw(base_size = 9) + xlab(NULL) + ylab(NULL) +
    theme(plot.title = element_text(hjust = 0.5))
})

figure &amp;lt;- ggarrange(plotlist = pt, nrow = 2, ncol = 5, common.legend = T, legend = &amp;quot;bottom&amp;quot;)
annotate_figure(figure, left = text_grob(&amp;quot;Expression Level&amp;quot;, rot = 90))



##################################
########### Figure S2D ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster

markers &amp;lt;- FindAllMarkers(data, logfc.threshold = 0, only.pos = F)

markers_1 &amp;lt;- subset(markers, cluster == &amp;quot;Ad1&amp;quot;)
mks_1 &amp;lt;- subset(markers_1, p_val_adj &amp;lt; 0.01)
mks_1 &amp;lt;- mks_1[order(mks_1$p_val_adj), ]
upGenes &amp;lt;- head(subset(mks_1, avg_logFC &amp;gt; 0)$gene, 50)
downGenes &amp;lt;- head(subset(mks_1, avg_logFC &amp;lt; 0)$gene, 50)
pt_1 &amp;lt;- volcano.plot(res = markers_1, upGenes = upGenes, downGenes = downGenes) + ggtitle(&amp;quot;Ad1&amp;quot;) + theme(plot.title = element_text(hjust = 0.5))

markers_2 &amp;lt;- subset(markers, cluster == &amp;quot;Ad2&amp;quot;)
mks_2 &amp;lt;- subset(markers_2, p_val_adj &amp;lt; 0.01)
mks_2 &amp;lt;- mks_2[order(mks_2$p_val_adj), ]
upGenes &amp;lt;- head(subset(mks_2, avg_logFC &amp;gt; 0)$gene, 50)
downGenes &amp;lt;- head(subset(mks_2, avg_logFC &amp;lt; 0)$gene, 50)
pt_2 &amp;lt;- volcano.plot(res = markers_2, upGenes = upGenes, downGenes = downGenes) + ggtitle(&amp;quot;Ad2&amp;quot;) + theme(plot.title = element_text(hjust = 0.5))

markers_3 &amp;lt;- subset(markers, cluster == &amp;quot;Ad3&amp;quot;)
mks_3 &amp;lt;- subset(markers_3, p_val_adj &amp;lt; 0.01)
mks_3 &amp;lt;- mks_3[order(mks_3$p_val_adj), ]
upGenes &amp;lt;- head(subset(mks_3, avg_logFC &amp;gt; 0)$gene, 50)
downGenes &amp;lt;- head(subset(mks_3, avg_logFC &amp;lt; 0)$gene, 50)
pt_3 &amp;lt;- volcano.plot(res = markers_3, upGenes = upGenes, downGenes = downGenes) + ggtitle(&amp;quot;Ad3&amp;quot;) + theme(plot.title = element_text(hjust = 0.5))

markers_4 &amp;lt;- subset(markers, cluster == &amp;quot;Ad4&amp;quot;)
mks_4 &amp;lt;- subset(markers_4, p_val_adj &amp;lt; 0.01)
mks_4 &amp;lt;- mks_4[order(mks_4$p_val_adj), ]
upGenes &amp;lt;- head(subset(mks_4, avg_logFC &amp;gt; 0)$gene, 50)
downGenes &amp;lt;- head(subset(mks_4, avg_logFC &amp;lt; 0)$gene, 50)
pt_4 &amp;lt;- volcano.plot(res = markers_4, upGenes = upGenes, downGenes = downGenes) + ggtitle(&amp;quot;Ad4&amp;quot;) + theme(plot.title = element_text(hjust = 0.5))

markers_5 &amp;lt;- subset(markers, cluster == &amp;quot;Ad5&amp;quot;)
mks_5 &amp;lt;- subset(markers_5, p_val_adj &amp;lt; 0.01)
mks_5 &amp;lt;- mks_5[order(mks_5$p_val_adj), ]
upGenes &amp;lt;- head(subset(mks_5, avg_logFC &amp;gt; 0)$gene, 50)
downGenes &amp;lt;- head(subset(mks_5, avg_logFC &amp;lt; 0)$gene, 50)
pt_5 &amp;lt;- volcano.plot(res = markers_5, upGenes = upGenes, downGenes = downGenes) + ggtitle(&amp;quot;Ad5&amp;quot;) + theme(plot.title = element_text(hjust = 0.5))

ggarrange(pt_1, pt_2, pt_3, pt_4, pt_5, nrow = 2, ncol = 3, common.legend = T)



##################################
########### Figure S2E ###########
##################################
dbs &amp;lt;- c(&amp;quot;Jensen_TISSUES&amp;quot;, &amp;quot;Mouse_Gene_Atlas&amp;quot;)

genes_1 &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig2C_Markers_1.txt&amp;quot;)
genes_2 &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig2C_Markers_2.txt&amp;quot;)
genes_3 &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig2C_Markers_3.txt&amp;quot;)
genes_4 &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig2C_Markers_4.txt&amp;quot;)
genes_5 &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Fig2C_Markers_5.txt&amp;quot;)

genes &amp;lt;- list(Ad1 = genes_1,
              Ad2 = genes_2,
              Ad3 = genes_3,
              Ad4 = genes_4,
              Ad5 = genes_5)

results &amp;lt;- lapply(genes, enrichr, dbs)

plotlist &amp;lt;- list()
pathlist &amp;lt;- NULL
tmplist &amp;lt;- NULL
paths &amp;lt;- NULL
for (i in 1:length(dbs)) {
  tmp &amp;lt;- lapply(results, `[[`, i)
  tmp &amp;lt;- mapply(cbind, tmp, &amp;quot;type&amp;quot; = names(tmp), SIMPLIFY=F)
  tmp &amp;lt;- do.call(&amp;quot;rbind&amp;quot;, tmp)
  
  tmp &amp;lt;- subset(tmp, Adjusted.P.value &amp;lt; 0.05)
  
  tmp$Adjusted.P.value &amp;lt;- -log10(tmp$Adjusted.P.value)
  tmp$Combined.Score &amp;lt;- log2(tmp$Combined.Score)
  
  tmplist &amp;lt;- rbind(tmplist, data.frame(tmp, class = dbs[i]))
  
  if (dbs[i] == &amp;quot;WikiPathways_2019_Mouse&amp;quot; | dbs[i] == &amp;quot;GO_Biological_Process_2018&amp;quot;) {
    tmp$Term &amp;lt;- gsub(&amp;quot;\\s*\\([^\\)]+\\)&amp;quot;,&amp;quot;&amp;quot;,as.character(tmp$Term))
  }
  tmp &amp;lt;- tmp %&amp;gt;% group_by(type) %&amp;gt;% top_n(n = 5, wt = Combined.Score)
  tmp$Term &amp;lt;- factor(tmp$Term, levels = rev(unique(tmp$Term)))
  pathlist &amp;lt;- rbind(pathlist, data.frame(tmp %&amp;gt;% group_by(type) %&amp;gt;% top_n(n = 2, wt = Combined.Score), class = dbs[i]))
  paths &amp;lt;- rbind(paths, data.frame(tmp, class = dbs[i]))
  
  plotlist[[i]] &amp;lt;- ggplot(tmp, aes(x = type, y = Term)) +
    geom_point(aes(size = Adjusted.P.value, color = Combined.Score)) +
    theme_bw(base_size = 12) +
    scale_colour_gradient(limits=c(0, max(tmp$Combined.Score)+0.5), high = &amp;quot;#2b9348&amp;quot;, low = &amp;quot;#eeef20&amp;quot;) +
    xlab(NULL) + ylab(NULL) +
    ggtitle(dbs[i]) + labs(color = &amp;quot;Combined Score&amp;quot;, size = &amp;quot;-log10(padj)&amp;quot;)
}
tmplist &amp;lt;- tmplist %&amp;gt;% group_by(type) %&amp;gt;% arrange(desc(Combined.Score), .by_group = TRUE)

ggarrange(plotlist = plotlist)



##################################
########### Figure S2H ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster

count_raw &amp;lt;- data@assays$SCT@counts[, rownames(data@meta.data)]
count_norm &amp;lt;- apply(count_raw, 2, function(x) (x/sum(x))*10000)

ort &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Orthologs_human_mouse.txt&amp;quot;, sep = &amp;quot;,&amp;quot;, header = T)
mat &amp;lt;- merge(ort, count_norm, by.x = &amp;quot;Mouse.gene.name&amp;quot;, by.y = &amp;quot;row.names&amp;quot;)
mat$Mouse.gene.name &amp;lt;- mat$Gene.stable.ID &amp;lt;- mat$Mouse.gene.stable.ID &amp;lt;- NULL
colnames(mat)[1] &amp;lt;- &amp;quot;Gene&amp;quot;

anno &amp;lt;- data.frame(Cell = names(Idents(data)), 
                   cluster = Idents(data), row.names = NULL)

write.table(mat, &amp;quot;/Users/biagi/PhD/AdipoSNAP/cellphonedb/counts.txt&amp;quot;, row.names = F, col.names = T, sep = &amp;quot;\t&amp;quot;, quote = F)
write.table(anno, &amp;quot;/Users/biagi/PhD/AdipoSNAP/cellphonedb/meta.txt&amp;quot;, row.names = F, col.names = T, sep = &amp;quot;\t&amp;quot;, quote = F)


#Python
cd /Users/biagi/PhD/AdipoSNAP/cellphonedb
cellphonedb method statistical_analysis meta.txt counts.txt --threads=16 --counts-data=gene_name --pvalue=0.05 --iterations=1000
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;figure-s3&#34;&gt;Figure S3&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)
library(SeuratWrappers)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(enrichR)
library(glue)
library(ggtext)
library(tidyr)
library(tibble)
library(ComplexHeatmap)
library(monocle)
library(scales)
library(ggpubr)
library(viridis)

source(&#39;/Users/biagi/PhD/AdipoSNAP/2_Functions.R&#39;)


##################################
########### Figure S3A ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
data$timpoint &amp;lt;- gsub(&#39;4day&#39;, &#39;Cold&#39;, data$timpoint)

Idents(data) &amp;lt;- as.factor(data$timpoint)

markers_ColdxRT &amp;lt;- FindMarkers(data, ident.1 = &amp;quot;Cold&amp;quot;, ident.2 = &amp;quot;RT&amp;quot;, logfc.threshold = 0)
markers_ColdxRT$gene &amp;lt;- rownames(markers_ColdxRT)

markers_CLxRT &amp;lt;- FindMarkers(data, ident.1 = &amp;quot;CL&amp;quot;, ident.2 = &amp;quot;RT&amp;quot;, logfc.threshold = 0)
markers_CLxRT$gene &amp;lt;- rownames(markers_CLxRT)

data &amp;lt;- SeuratWrappers::RunALRA(data)
data &amp;lt;- ScaleData(data)

data2 &amp;lt;- subset(data, idents = c(&amp;quot;Cold&amp;quot;, &amp;quot;RT&amp;quot;, &amp;quot;CL&amp;quot;))

top1 &amp;lt;- markers_ColdxRT %&amp;gt;% top_n(n = 50, wt = avg_logFC)
top2 &amp;lt;- markers_CLxRT %&amp;gt;% top_n(n = 50, wt = avg_logFC)
topGenes &amp;lt;- rbind(top1, top2)

cls &amp;lt;- c(&amp;quot;blue&amp;quot;, &amp;quot;red&amp;quot;, &amp;quot;green&amp;quot;)
mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)

DoHeatmap(data2, features = topGenes$gene, group.colors = cls, angle = 0, size = 5, label = F) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;Timepoint&#39;)



##################################
########### Figure S3B ###########
##################################
dbs &amp;lt;- c(&amp;quot;KEGG_2019_Mouse&amp;quot;, &amp;quot;WikiPathways_2019_Mouse&amp;quot;, &amp;quot;Jensen_TISSUES&amp;quot;, &amp;quot;GO_Biological_Process_2018&amp;quot;)

genes_ColdxRT &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Diff_Adipocytes_ColdxRT.txt&amp;quot;)
genes_CLxRT &amp;lt;- readLines(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Figures/update/Diff_Adipocytes_CLxRT.txt&amp;quot;)

genes &amp;lt;- list(ColdxRT = genes_ColdxRT,
              CLxRT = genes_CLxRT)

results &amp;lt;- lapply(genes, enrichr, dbs)

plotlist &amp;lt;- list()
pathlist &amp;lt;- NULL
tmplist &amp;lt;- NULL
paths &amp;lt;- NULL
for (i in 1:length(dbs)) {
  tmp &amp;lt;- lapply(results, `[[`, i)
  tmp &amp;lt;- mapply(cbind, tmp, &amp;quot;type&amp;quot; = names(tmp), SIMPLIFY=F)
  tmp &amp;lt;- do.call(&amp;quot;rbind&amp;quot;, tmp)
  
  tmp &amp;lt;- subset(tmp, Adjusted.P.value &amp;lt; 0.05)
  
  tmp$Adjusted.P.value &amp;lt;- -log10(tmp$Adjusted.P.value)
  tmp$Combined.Score &amp;lt;- log2(tmp$Combined.Score)
  
  tmplist &amp;lt;- rbind(tmplist, data.frame(tmp, class = dbs[i]))
  
  if (dbs[i] == &amp;quot;GO_Biological_Process_2018&amp;quot;) {
    tmp$Term &amp;lt;- gsub(&amp;quot;\\s*\\([^\\)]+\\)&amp;quot;,&amp;quot;&amp;quot;,as.character(tmp$Term))
  }
  tmp &amp;lt;- tmp %&amp;gt;% group_by(type) %&amp;gt;% top_n(n = 5, wt = Combined.Score)
  tmp$Term &amp;lt;- factor(tmp$Term, levels = rev(unique(tmp$Term)))
  pathlist &amp;lt;- rbind(pathlist, data.frame(tmp %&amp;gt;% group_by(type) %&amp;gt;% top_n(n = 2, wt = Combined.Score), class = dbs[i]))
  paths &amp;lt;- rbind(paths, data.frame(tmp, class = dbs[i]))
  
  plotlist[[i]] &amp;lt;- ggplot(tmp, aes(x = type, y = Term)) +
    geom_point(aes(size = Adjusted.P.value, color = Combined.Score)) +
    theme_bw(base_size = 9) +
    scale_colour_gradient(limits=c(0, max(tmp$Combined.Score)+0.5), high = &amp;quot;#2b9348&amp;quot;, low = &amp;quot;#eeef20&amp;quot;) +
    xlab(NULL) + ylab(NULL) +
    ggtitle(dbs[i]) + labs(color = &amp;quot;Combined Score&amp;quot;, size = &amp;quot;-log10(padj)&amp;quot;)
}
tmplist &amp;lt;- tmplist %&amp;gt;% group_by(type) %&amp;gt;% arrange(desc(Combined.Score), .by_group = TRUE)

paths &amp;lt;- paths[which(paths$Term %in% c(&amp;quot;PPAR signaling pathway&amp;quot;, &amp;quot;Propanoate metabolism&amp;quot;, &amp;quot;Regulation of lipolysis in adipocytes&amp;quot;, &amp;quot;Fatty acid biosynthesis&amp;quot;, &amp;quot;Fatty acid degradation&amp;quot;, &amp;quot;Valine, leucine and isoleucine degradation&amp;quot;, &amp;quot;PPAR signaling pathway WP2316&amp;quot;, &amp;quot;Triacylglyceride Synthesis WP386&amp;quot;, &amp;quot;Subcutaneous adipose tissue&amp;quot;, &amp;quot;3T3-L1 cell&amp;quot;, &amp;quot;Adipocyte&amp;quot;, &amp;quot;long-chain fatty acid transport&amp;quot;, &amp;quot;fatty acid transmembrane transport&amp;quot;, &amp;quot;regulation of sequestering of triglyceride&amp;quot;, &amp;quot;intracellular lipid transport&amp;quot;)), ]

paths &amp;lt;- paths %&amp;gt;%
  mutate(
    class_with_color = ifelse(class == &amp;quot;KEGG_2019_Mouse&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#0000FF&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                              ifelse(class == &amp;quot;WikiPathways_2019_Mouse&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#f28804&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                                     ifelse(class == &amp;quot;Jensen_TISSUES&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#CC0000&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                                            ifelse(class == &amp;quot;GO_Biological_Process_2018&amp;quot;, glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#9900CC&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;),
                                                   glue(&amp;quot;&amp;lt;strong&amp;gt;&amp;lt;span style=&#39;color:#18a997&#39;&amp;gt;{Term}&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;quot;)))))
  )

paths &amp;lt;- paths %&amp;gt;% group_by(type) %&amp;gt;% arrange(desc(Combined.Score), .by_group = TRUE)
paths$class_with_color &amp;lt;- factor(paths$class_with_color, levels = rev(unique(paths$class_with_color)))

ggplot(paths, aes(x = type, y = class_with_color)) +
  geom_point(aes(size = Adjusted.P.value, color = Combined.Score)) +
  theme_bw(base_size = 8) +
  scale_colour_gradient(limits=c(0, max(paths$Combined.Score)+0.5), high = &amp;quot;#2b9348&amp;quot;, low = &amp;quot;#eeef20&amp;quot;) +
  xlab(NULL) + ylab(NULL) +
  ggtitle(NULL) + labs(color = &amp;quot;Combined Score&amp;quot;, size = &amp;quot;-log10(padj)&amp;quot;) +
  theme(axis.text.y = element_markdown(), axis.text=element_text(size=12))



##################################
########### Figure S3C ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- factor(data$timpoint)
data$cluster &amp;lt;- factor(new_cluster)

data &amp;lt;- SeuratWrappers::RunALRA(data)
data &amp;lt;- ScaleData(data, features = rownames(data))

##Fatty Acid Oxidation
genes1 &amp;lt;- c(&#39;Abcb11&#39;, &#39;Abcd1&#39;, &#39;Abcd2&#39;, &#39;Abcd3&#39;, &#39;Abcd4&#39;, &#39;Acaa1a&#39;, &#39;Acaa1b&#39;, &#39;Acaa2&#39;, &#39;Acacb&#39;, &#39;Acad11&#39;, &#39;Acadl&#39;, &#39;Acadm&#39;, &#39;Acads&#39;, &#39;Acadvl&#39;, &#39;Acat1&#39;, &#39;Acat2&#39;, &#39;Acat3&#39;, &#39;Acox1&#39;, &#39;Acox2&#39;, &#39;Acox3&#39;, &#39;Acoxl&#39;, &#39;Acsbg2&#39;, &#39;Acsl5&#39;, &#39;Adh4&#39;, &#39;Adh5&#39;, &#39;Adh7&#39;, &#39;Adipoq&#39;, &#39;Adipor1&#39;, &#39;Adipor2&#39;, &#39;Akt1&#39;, &#39;Akt2&#39;, &#39;Alox12&#39;, &#39;Appl2&#39;, &#39;Auh&#39;, &#39;Bdh2&#39;, &#39;C1qtnf2&#39;, &#39;C1qtnf9&#39;, &#39;Cd36&#39;, &#39;Cnr1&#39;, &#39;Cpt1a&#39;, &#39;Cpt2&#39;, &#39;Crat&#39;, &#39;Crot&#39;, &#39;Cygb&#39;, &#39;Cyp4v3&#39;, &#39;Cyp24a1&#39;, &#39;Dbi&#39;, &#39;Decr1&#39;, &#39;Dgat1&#39;, &#39;Dgat2&#39;, &#39;Echdc1&#39;, &#39;Echdc2&#39;, &#39;Echs1&#39;, &#39;Eci1&#39;, &#39;Eci2&#39;, &#39;Eci3&#39;, &#39;Ehhadh&#39;, &#39;Etfa&#39;, &#39;Etfb&#39;, &#39;Etfbkmt&#39;, &#39;Etfdh&#39;, &#39;Fabp1&#39;, &#39;Fabp3&#39;, &#39;Gcdh&#39;, &#39;Gm45753&#39;, &#39;Gm49387&#39;, &#39;Hacl1&#39;, &#39;Hadh&#39;, &#39;Hadha&#39;, &#39;Hadhb&#39;, &#39;Hao1&#39;, &#39;Hao2&#39;, &#39;Hsd17b4&#39;, &#39;Hsd17b10&#39;, &#39;Ilvbl&#39;, &#39;Irs1&#39;, &#39;Irs2&#39;, &#39;Ivd&#39;, &#39;Lep&#39;, &#39;Lonp2&#39;, &#39;Mapk14&#39;, &#39;Mfsd2a&#39;, &#39;Mir199a-2&#39;, &#39;Mir214&#39;, &#39;Mir696&#39;, &#39;Mlycd&#39;, &#39;Mtor&#39;, &#39;Nr4a3&#39;, &#39;Nucb2&#39;, &#39;Pdk4&#39;, &#39;Pex2&#39;, &#39;Pex5&#39;, &#39;Pex7&#39;, &#39;Pex13&#39;, &#39;Phyh&#39;, &#39;Plin5&#39;, &#39;Por&#39;, &#39;Ppara&#39;, &#39;Ppard&#39;, &#39;Pparg&#39;, &#39;Ppargc1a&#39;, &#39;Prkaa1&#39;, &#39;Scp2&#39;, &#39;Sesn2&#39;, &#39;Sirt4&#39;, &#39;Slc25a17&#39;, &#39;Slc27a2&#39;, &#39;Sox9&#39;, &#39;Twist1&#39;, &#39;Tysnd1&#39;)
genes1 &amp;lt;- genes1[genes1 %in% rownames(data)]
mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)
ht1 &amp;lt;- DoHeatmap(data, features = genes1, angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;Expression&#39;)
y &amp;lt;- ht1$data %&amp;gt;% drop_na()
x &amp;lt;- y %&amp;gt;% group_by(Identity) %&amp;gt;% select(Feature, Cell, Identity, Expression) %&amp;gt;%
  spread(key = Feature, value = Expression)
w &amp;lt;- y %&amp;gt;% select(Feature, Cell, Expression) %&amp;gt;%
  spread(key = Cell, value = Expression) %&amp;gt;% column_to_rownames(&amp;quot;Feature&amp;quot;) %&amp;gt;% as.matrix()
pt &amp;lt;- Heatmap(w, cluster_columns = F)
DoHeatmap(data, features = rownames(w)[row_order(pt)], angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;Expression&#39;) + ggtitle(&#39;Fatty Acid Oxidation&#39;) + 
  theme(plot.title = element_text(hjust = 0.5))

##Tricarboxylic Acid Cycle
genes2 &amp;lt;- c(&#39;4933405O20Rik&#39;, &#39;Aco1&#39;, &#39;Aco2&#39;, &#39;Cs&#39;, &#39;Csl&#39;, &#39;Dhtkd1&#39;, &#39;Dlat&#39;, &#39;Dlst&#39;, &#39;Fh1&#39;, &#39;Idh1&#39;, &#39;Idh2&#39;, &#39;Idh3a&#39;, &#39;Idh3b&#39;, &#39;Idh3g&#39;, &#39;Ireb2&#39;, &#39;Mdh1&#39;, &#39;Mdh1b&#39;, &#39;Mdh2&#39;, &#39;Ndufs4&#39;, &#39;Ogdh&#39;, &#39;Ogdhl&#39;, &#39;Pdha1&#39;, &#39;Pdha2&#39;, &#39;Pdhb&#39;, &#39;Sdha&#39;, &#39;Sdhaf2&#39;, &#39;Sdhb&#39;, &#39;Sdhc&#39;, &#39;Sdhd&#39;, &#39;Sucla2&#39;, &#39;Suclg1&#39;, &#39;Suclg2&#39;)
genes2 &amp;lt;- genes2[genes2 %in% rownames(data)]
mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)
ht1 &amp;lt;- DoHeatmap(data, features = genes2, angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;Expression&#39;)
y &amp;lt;- ht1$data %&amp;gt;% drop_na()
x &amp;lt;- y %&amp;gt;% group_by(Identity) %&amp;gt;% select(Feature, Cell, Identity, Expression) %&amp;gt;%
  spread(key = Feature, value = Expression)
w &amp;lt;- y %&amp;gt;% select(Feature, Cell, Expression) %&amp;gt;%
  spread(key = Cell, value = Expression) %&amp;gt;% column_to_rownames(&amp;quot;Feature&amp;quot;) %&amp;gt;% as.matrix()
pt &amp;lt;- Heatmap(w, cluster_columns = F)
DoHeatmap(data, features = rownames(w)[row_order(pt)], angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;Expression&#39;) + ggtitle(&#39;Tricarboxylic Acid Cycle&#39;) + 
  theme(plot.title = element_text(hjust = 0.5))

##Fat Acid Transport
genes3 &amp;lt;- c(&#39;Abcc1&#39;, &#39;Abcc2&#39;, &#39;Abcc4&#39;, &#39;Abcd1&#39;, &#39;Abcd2&#39;, &#39;Abcd3&#39;, &#39;Abcd4&#39;, &#39;Ace&#39;, &#39;Acsl1&#39;, &#39;Acsl3&#39;, &#39;Acsl4&#39;, &#39;Acsl5&#39;, &#39;Acsl6&#39;, &#39;Agtr2&#39;, &#39;Akt1&#39;, &#39;Akt2&#39;, &#39;Anxa1&#39;, &#39;Apoe&#39;, &#39;Atp5j&#39;, &#39;Avpr1b&#39;, &#39;Bdkrb2&#39;, &#39;Cd36&#39;, &#39;Cpt1b&#39;, &#39;Crot&#39;, &#39;Cyp4f18&#39;, &#39;Drd2&#39;, &#39;Drd3&#39;, &#39;Drd4&#39;, &#39;Edn1&#39;, &#39;Eprs&#39;, &#39;Erfe&#39;, &#39;Fabp1&#39;, &#39;Fabp2&#39;, &#39;Fabp3&#39;, &#39;Fabp4&#39;, &#39;Fabp5&#39;, &#39;Hnf1a&#39;, &#39;Hrh2&#39;, &#39;Il1a&#39;, &#39;Il1b&#39;, &#39;Irs2&#39;, &#39;Kiss1r&#39;, &#39;Lep&#39;, &#39;Lhcgr&#39;, &#39;Map2k6&#39;, &#39;Mapk9&#39;, &#39;Mfsd2a&#39;, &#39;Mif&#39;, &#39;Nmb&#39;, &#39;Nmur2&#39;, &#39;Nos2&#39;, &#39;Ntsr1&#39;, &#39;Oc90&#39;, &#39;Oxt&#39;, &#39;P2rx7&#39;, &#39;P2ry2&#39;, &#39;Pla2g1b&#39;, &#39;Pla2g2c&#39;, &#39;Pla2g2d&#39;, &#39;Pla2g2e&#39;, &#39;Pla2g2f&#39;, &#39;Pla2g3&#39;, &#39;Pla2g4a&#39;, &#39;Pla2g4f&#39;, &#39;Pla2g5&#39;, &#39;Pla2g6&#39;, &#39;Pla2g10&#39;, &#39;Pla2g12a&#39;, &#39;Pla2g12b&#39;, &#39;Pla2r1&#39;, &#39;Plin2&#39;, &#39;Pnpla8&#39;, &#39;Pparg&#39;, &#39;Ptges&#39;, &#39;Repin1&#39;, &#39;Rps6kb1&#39;, &#39;Slc2a1&#39;, &#39;Slc5a8&#39;, &#39;Slc22a22&#39;, &#39;Slc25a17&#39;, &#39;Slc27a1&#39;, &#39;Slc27a2&#39;, &#39;Slc27a3&#39;, &#39;Slc27a4&#39;, &#39;Slc27a5&#39;, &#39;Slc27a6&#39;, &#39;Slco2a1&#39;, &#39;Slco3a1&#39;, &#39;Spx&#39;, &#39;Sstr4&#39;, &#39;Syk&#39;, &#39;Thbs1&#39;, &#39;Tnfrsf11a&#39;, &#39;Tnfsf11&#39;)
genes3 &amp;lt;- genes3[genes3 %in% rownames(data)]
mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)
ht1 &amp;lt;- DoHeatmap(data, features = genes3, angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;Expression&#39;)
y &amp;lt;- ht1$data %&amp;gt;% drop_na()
x &amp;lt;- y %&amp;gt;% group_by(Identity) %&amp;gt;% select(Feature, Cell, Identity, Expression) %&amp;gt;%
  spread(key = Feature, value = Expression)
w &amp;lt;- y %&amp;gt;% select(Feature, Cell, Expression) %&amp;gt;%
  spread(key = Cell, value = Expression) %&amp;gt;% column_to_rownames(&amp;quot;Feature&amp;quot;) %&amp;gt;% as.matrix()
pt &amp;lt;- Heatmap(w, cluster_columns = F)
DoHeatmap(data, features = rownames(w)[row_order(pt)], angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;Expression&#39;) + ggtitle(&#39;Fat Acid Transport&#39;) + 
  theme(plot.title = element_text(hjust = 0.5))

##Triglyceride/Fatty Acid Cycle
genes4 &amp;lt;- c(&#39;Aadac&#39;, &#39;Abhd5&#39;, &#39;Daglb&#39;, &#39;Pnpla2&#39;, &#39;Pck1&#39;, &#39;Pcx&#39; , &#39;Gpd1&#39;, &#39;Slc2a4&#39;, &#39;Lipe&#39;, &#39;Adrb3&#39;)
genes4 &amp;lt;- genes4[genes4 %in% rownames(data)]
mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)
ht1 &amp;lt;- DoHeatmap(data, features = genes4, angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;Expression&#39;)
y &amp;lt;- ht1$data %&amp;gt;% drop_na()
x &amp;lt;- y %&amp;gt;% group_by(Identity) %&amp;gt;% select(Feature, Cell, Identity, Expression) %&amp;gt;%
  spread(key = Feature, value = Expression)
w &amp;lt;- y %&amp;gt;% select(Feature, Cell, Expression) %&amp;gt;%
  spread(key = Cell, value = Expression) %&amp;gt;% column_to_rownames(&amp;quot;Feature&amp;quot;) %&amp;gt;% as.matrix()
pt &amp;lt;- Heatmap(w, cluster_columns = F)
DoHeatmap(data, features = rownames(w)[row_order(pt)], angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;Expression&#39;) + ggtitle(&#39;Triglyceride/Fatty Acid Cycle&#39;) + 
  theme(plot.title = element_text(hjust = 0.5))



##################################
########### Figure S3H ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster

count_raw &amp;lt;- data@assays$SCT@counts[, rownames(data@meta.data)]
count_norm &amp;lt;- apply(count_raw, 2, function(x) (x/sum(x))*10000)

ort &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Orthologs_human_mouse.txt&amp;quot;, sep = &amp;quot;,&amp;quot;, header = T)
mat &amp;lt;- merge(ort, count_norm, by.x = &amp;quot;Mouse.gene.name&amp;quot;, by.y = &amp;quot;row.names&amp;quot;)
mat$Mouse.gene.name &amp;lt;- mat$Gene.stable.ID &amp;lt;- mat$Mouse.gene.stable.ID &amp;lt;- NULL
colnames(mat)[1] &amp;lt;- &amp;quot;Gene&amp;quot;

anno &amp;lt;- data.frame(Cell = names(Idents(data)), 
                   cluster = Idents(data), row.names = NULL)

write.table(mat, &amp;quot;/Users/biagi/PhD/AdipoSNAP/cellphonedb/counts.txt&amp;quot;, row.names = F, col.names = T, sep = &amp;quot;\t&amp;quot;, quote = F)
write.table(anno, &amp;quot;/Users/biagi/PhD/AdipoSNAP/cellphonedb/meta.txt&amp;quot;, row.names = F, col.names = T, sep = &amp;quot;\t&amp;quot;, quote = F)


#Python
cd /Users/biagi/PhD/AdipoSNAP/cellphonedb
cellphonedb method statistical_analysis meta.txt counts.txt --threads=16 --counts-data=gene_name --pvalue=0.05 --iterations=1000



##################################
########### Figure S3I ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
data$timpoint &amp;lt;- gsub(&#39;4day&#39;, &#39;Cold&#39;, data$timpoint)

infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)
new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

Idents(data) &amp;lt;- as.factor(data$timpoint)
data &amp;lt;- subset(data, cells = names(which(data$timpoint == &#39;CL&#39; | data$timpoint == &#39;RT&#39;)))

DefaultAssay(data) &amp;lt;- &amp;quot;RNA&amp;quot;
mat &amp;lt;- data@assays$RNA@data

fdata &amp;lt;- data.frame(gene_short_name = rownames(data), row.names = rownames(data))
pdata &amp;lt;- data@meta.data

pd &amp;lt;- new(&amp;quot;AnnotatedDataFrame&amp;quot;, data = pdata)
fd &amp;lt;- new(&amp;quot;AnnotatedDataFrame&amp;quot;, data = fdata)
cds &amp;lt;- newCellDataSet(as(mat, &amp;quot;dgCMatrix&amp;quot;),
                      phenoData = pd,
                      featureData = fd, 
                      expressionFamily=negbinomial.size())

rm(data, mat, fdata, pdata, fd, pd)

cds &amp;lt;- estimateSizeFactors(cds)
cds &amp;lt;- estimateDispersions(cds)

cds &amp;lt;- detectGenes(cds, min_expr = 0.1)
expressed_genes &amp;lt;- row.names(subset(fData(cds), num_cells_expressed &amp;gt;= 10))

diff_test_res &amp;lt;- differentialGeneTest(cds[expressed_genes, ], fullModelFormulaStr = &amp;quot;~cluster&amp;quot;, cores = 6, verbose = T)
ordering_genes &amp;lt;- row.names(subset(diff_test_res, qval &amp;lt; 0.01))
cds &amp;lt;- setOrderingFilter(cds, ordering_genes)

cds &amp;lt;- reduceDimension(cds, max_components = 2, method = &#39;DDRTree&#39;, verbose = TRUE)
cds &amp;lt;- orderCells(cds)
cds &amp;lt;- orderCells(cds, root_state = 3)

plot_cell_trajectory(cds, color_by = &amp;quot;timpoint&amp;quot;)

plot_cell_trajectory(cds, color_by=&amp;quot;State&amp;quot;, state_number_size = 1) + facet_wrap(~State)

plotMonocle(cds, c(&#39;Ucp1&#39;, &#39;Ppara&#39;, &#39;Dio2&#39;, &#39;Chst1&#39;, &#39;Plppr3&#39;, &#39;Nnat&#39;, &#39;Pim1&#39;, &#39;Adcy3&#39;, &#39;Cs&#39;))



##################################
########### Figure S3J ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
data$timpoint &amp;lt;- gsub(&#39;4day&#39;, &#39;Cold&#39;, data$timpoint)

infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)
new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

Idents(data) &amp;lt;- as.factor(data$timpoint)
data &amp;lt;- subset(data, cells = names(which(data$timpoint == &#39;Cold&#39; | data$timpoint == &#39;RT&#39;)))

DefaultAssay(data) &amp;lt;- &amp;quot;RNA&amp;quot;
mat &amp;lt;- data@assays$RNA@data

fdata &amp;lt;- data.frame(gene_short_name = rownames(data), row.names = rownames(data))
pdata &amp;lt;- data@meta.data

pd &amp;lt;- new(&amp;quot;AnnotatedDataFrame&amp;quot;, data = pdata)
fd &amp;lt;- new(&amp;quot;AnnotatedDataFrame&amp;quot;, data = fdata)
cds &amp;lt;- newCellDataSet(as(mat, &amp;quot;dgCMatrix&amp;quot;),
                      phenoData = pd,
                      featureData = fd, 
                      expressionFamily=negbinomial.size())

rm(data, mat, fdata, pdata, fd, pd)

cds &amp;lt;- estimateSizeFactors(cds)
cds &amp;lt;- estimateDispersions(cds)

cds &amp;lt;- detectGenes(cds, min_expr = 0.1)
expressed_genes &amp;lt;- row.names(subset(fData(cds), num_cells_expressed &amp;gt;= 10))

diff_test_res &amp;lt;- differentialGeneTest(cds[expressed_genes, ], fullModelFormulaStr = &amp;quot;~cluster&amp;quot;, cores = 6, verbose = T)
ordering_genes &amp;lt;- row.names(subset(diff_test_res, qval &amp;lt; 0.01))
cds &amp;lt;- setOrderingFilter(cds, ordering_genes)

cds &amp;lt;- reduceDimension(cds, max_components = 2, method = &#39;DDRTree&#39;, verbose = TRUE)
cds &amp;lt;- orderCells(cds)
cds &amp;lt;- orderCells(cds, root_state = 4)

plot_cell_trajectory(cds, color_by = &amp;quot;timpoint&amp;quot;)

plot_cell_trajectory(cds, color_by=&amp;quot;State&amp;quot;, state_number_size = 1) + facet_wrap(~State)

plotMonocle(cds, c(&#39;Ucp1&#39;, &#39;Ppara&#39;, &#39;Dio2&#39;, &#39;Ccdc80&#39;, &#39;Slc7a10&#39;, &#39;Tmem43&#39;, &#39;Adcy3&#39;, &#39;Perm1&#39;, &#39;Fabp3&#39;))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;figure-s4&#34;&gt;Figure S4&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Loading R packages
library(Seurat)
library(SeuratWrappers)
library(ggplot2)
library(dplyr)
library(ggrepel)
library(ggpubr)
library(RColorBrewer)
library(tidyr)
library(tibble)
library(ComplexHeatmap)
library(circlize)


##################################
########### Figure S4A ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

Idents(data) &amp;lt;- as.factor(data$timpoint)
data &amp;lt;- subset(data, cells = names(which(data$timpoint == &#39;4day&#39; | data$timpoint == &#39;RT&#39; | data$timpoint == &#39;CL&#39;)))

Idents(data) &amp;lt;- data$cluster
data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;, &#39;Ad2&#39;, &#39;Ad5&#39;))

plotList &amp;lt;- list()
genes &amp;lt;- c(&#39;Ppara&#39;, &#39;Dio2&#39;, &#39;Prdm16&#39;, &#39;Elovl3&#39;, &#39;Cox8b&#39;)
for (i in 1:length(genes)) {
  data$gene &amp;lt;- factor(ifelse(data@assays$SCT@data[genes[i], ] &amp;gt; 0, &amp;quot;High&amp;quot;, &amp;quot;Low&amp;quot;))
  
  df &amp;lt;- data.frame(
    class = c(&amp;quot;Ad1&amp;quot;, &amp;quot;Ad2&amp;quot;, &#39;Ad5&#39;),
    n = c(sum(Idents(data) == &#39;Ad1&#39;), sum(Idents(data) == &#39;Ad2&#39;), sum(Idents(data) == &#39;Ad5&#39;)),
    value = c(round((length(names(data$cluster[data$cluster == &#39;Ad1&#39;])[names(data$cluster[data$cluster == &#39;Ad1&#39;]) %in% names(data$gene[which(data$gene == &#39;High&#39;)])])/sum(Idents(data) == &#39;Ad1&#39;))*100, 2), round((length(names(data$cluster[data$cluster == &#39;Ad2&#39;])[names(data$cluster[data$cluster == &#39;Ad2&#39;]) %in% names(data$gene[which(data$gene == &#39;High&#39;)])])/sum(Idents(data) == &#39;Ad2&#39;))*100, 2), round((length(names(data$cluster[data$cluster == &#39;Ad5&#39;])[names(data$cluster[data$cluster == &#39;Ad5&#39;]) %in% names(data$gene[which(data$gene == &#39;High&#39;)])])/sum(Idents(data) == &#39;Ad5&#39;))*100, 2)))
  df$class &amp;lt;- factor(df$class, levels = c(&amp;quot;Ad1&amp;quot;, &amp;quot;Ad2&amp;quot;, &amp;quot;Ad5&amp;quot;))
  
  df &amp;lt;- df %&amp;gt;%
    arrange(desc(class)) %&amp;gt;%
    mutate(text_y = cumsum(value) - value/2)
  df$pos = (cumsum(c(0, df$value)) + c(df$value / 2, .01))[1:nrow(df)]
  
  plotList[[i]] &amp;lt;- ggplot(df, aes(x = &amp;quot;&amp;quot;, y = value, fill = class)) +
    geom_bar(width = 1, stat = &amp;quot;identity&amp;quot;, color = &amp;quot;white&amp;quot;) +
    coord_polar(&amp;quot;y&amp;quot;, start = 0)+
    scale_fill_manual(values = c(&amp;quot;#11c78b&amp;quot;, &amp;quot;#800080&amp;quot;, &amp;quot;#dfdf0d&amp;quot;)) +
    theme_void() + labs(fill = &amp;quot;Clusters&amp;quot;) +
    geom_text_repel(aes(x = 1.5, y = pos, label = paste0(value, &amp;quot;%&amp;quot;)), nudge_x = .1, segment.size = .7, show.legend = FALSE) +
    ggtitle(genes[i])
}

ggarrange(plotlist = plotList)



##################################
########### Figure S4B ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;))
data &amp;lt;- ScaleData(data, features = rownames(data))

data$UCP1 &amp;lt;- factor(ifelse(data@assays$SCT@data[&amp;quot;Ucp1&amp;quot;, ] &amp;gt; 0, &amp;quot;High&amp;quot;, &amp;quot;Low&amp;quot;))
Idents(data) &amp;lt;- data$UCP1

markers &amp;lt;- FindAllMarkers(data, logfc.threshold = 0, only.pos = F)

markers &amp;lt;- subset(markers, p_val_adj &amp;lt; 0.05 &amp;amp; cluster == &#39;High&#39;)
markers &amp;lt;- markers[order(markers$avg_logFC, decreasing = T), ]

mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)

DoHeatmap(data, features = markers$gene, angle = 0, size = 5, label = F) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=3)) +
  labs(color=&#39;UCP1 Expression&#39;)



##################################
########### Figure S4C ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)
new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)
data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;))
tmp1 &amp;lt;- factor(ifelse(data@assays$SCT@data[&amp;quot;Ucp1&amp;quot;, ] &amp;gt; 0, &amp;quot;Ad1_High&amp;quot;, &amp;quot;Ad1_Low&amp;quot;))

data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)
new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)
data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;))

tmp2 &amp;lt;- as.character(Idents(data))
tmp3 &amp;lt;- names(Idents(data))
tmp2[which(tmp3 %in% names(tmp1[tmp1 == &#39;Ad1_High&#39;]))] &amp;lt;- &#39;Ad1_High&#39;
tmp2[which(tmp3 %in% names(tmp1[tmp1 == &#39;Ad1_Low&#39;]))] &amp;lt;- &#39;Ad1_Low&#39;

tmp &amp;lt;- as.factor(structure(tmp2, names = tmp3))
Idents(data) &amp;lt;- tmp
data$cluster &amp;lt;- Idents(data)

data &amp;lt;- SeuratWrappers::RunALRA(data)
data &amp;lt;- ScaleData(data, features = rownames(data))

# SERCA2
genes &amp;lt;- c(&#39;Atp2a1&#39;, &#39;Atp2a2&#39;, &#39;Tmtc4&#39;, &#39;Adra1a&#39;, &#39;Arpc2&#39;)
genes &amp;lt;- genes[genes %in% rownames(data)]
mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)
ht1 &amp;lt;- DoHeatmap(data, features = genes, angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;UCP1 Expression&#39;)
y &amp;lt;- ht1$data %&amp;gt;% drop_na()
x &amp;lt;- y %&amp;gt;% group_by(Identity) %&amp;gt;% select(Feature, Cell, Identity, Expression) %&amp;gt;%
  spread(key = Feature, value = Expression)
w &amp;lt;- y %&amp;gt;% select(Feature, Cell, Expression) %&amp;gt;%
  spread(key = Cell, value = Expression) %&amp;gt;% column_to_rownames(&amp;quot;Feature&amp;quot;) %&amp;gt;% as.matrix()
pt &amp;lt;- Heatmap(w, cluster_columns = F)
DoHeatmap(data, features = rownames(w)[row_order(pt)], angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;UCP1 Expression&#39;) + ggtitle(&#39;SERCA2&#39;) + 
  theme(plot.title = element_text(hjust = 0.5))

# Arginine/creatine and proline metabolism v
genes &amp;lt;- c(&#39;Slc6a8&#39;, &#39;Gatm&#39;, &#39;Gamt&#39;, &#39;Ckmt1&#39;, &#39;Ckmt2&#39;)
genes &amp;lt;- genes[genes %in% rownames(data)]
mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)
ht1 &amp;lt;- DoHeatmap(data, features = genes, angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;UCP1 Expression&#39;)
y &amp;lt;- ht1$data %&amp;gt;% drop_na()
x &amp;lt;- y %&amp;gt;% group_by(Identity) %&amp;gt;% select(Feature, Cell, Identity, Expression) %&amp;gt;%
  spread(key = Feature, value = Expression)
w &amp;lt;- y %&amp;gt;% select(Feature, Cell, Expression) %&amp;gt;%
  spread(key = Cell, value = Expression) %&amp;gt;% column_to_rownames(&amp;quot;Feature&amp;quot;) %&amp;gt;% as.matrix()
pt &amp;lt;- Heatmap(w, cluster_columns = F)
DoHeatmap(data, features = rownames(w)[row_order(pt)], angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;UCP1 Expression&#39;) + ggtitle(&#39;Arginine/creatine and proline metabolism v&#39;) + 
  theme(plot.title = element_text(hjust = 0.5))

# Glycolytic process
genes &amp;lt;- c(&#39;Actn3&#39;, &#39;Adpgk&#39;, &#39;Aldoa&#39;, &#39;Aldoart1&#39;, &#39;Aldoart2&#39;, &#39;Aldob&#39;, &#39;Aldoc&#39;, &#39;App&#39;, &#39;Bpgm&#39;, &#39;Cbfa2t3&#39;, &#39;Ddit4&#39;, &#39;Dhtkd1&#39;, &#39;Eif6&#39;, &#39;Eno1&#39;, &#39;Eno1b&#39;, &#39;Eno2&#39;, &#39;Eno3&#39;, &#39;Eno4&#39;, &#39;Entpd5&#39;, &#39;Ep300&#39;, &#39;Esrrb&#39;, &#39;Fbp1&#39;, &#39;Foxk1&#39;, &#39;Foxk2&#39;, &#39;Gale&#39;, &#39;Galk1&#39;, &#39;Galt&#39;, &#39;Gapdh&#39;, &#39;Gapdhs&#39;, &#39;Gck&#39;, &#39;Gm3839&#39;, &#39;Gm10358&#39;, &#39;Gm11214&#39;, &#39;Gm12117&#39;, &#39;Gm15294&#39;, &#39;Gpd1&#39;, &#39;Gpi1&#39;, &#39;Hdac4&#39;, &#39;Hif1a&#39;, &#39;Hk1&#39;, &#39;Hk2&#39;, &#39;Hk3&#39;, &#39;Hkdc1&#39;, &#39;Htr2a&#39;, &#39;Ier3&#39;, &#39;Ifng&#39;, &#39;Igf1&#39;, &#39;Il3&#39;, &#39;Ins2&#39;, &#39;Insr&#39;, &#39;Jmjd8&#39;, &#39;Khk&#39;, &#39;Mif&#39;, &#39;Mlxipl&#39;, &#39;Mpi&#39;, &#39;Mtch2&#39;, &#39;Myc&#39;, &#39;Myog&#39;, &#39;Ncor1&#39;, &#39;Nupr1&#39;, &#39;Ogdh&#39;, &#39;Ogt&#39;, &#39;P2rx7&#39;, &#39;Pfkfb2&#39;, &#39;Pfkl&#39;, &#39;Pfkm&#39;, &#39;Pfkp&#39;, &#39;Pgam1&#39;, &#39;Pgam2&#39;, &#39;Pgk1&#39;, &#39;Pgk2&#39;, &#39;Pklr&#39;, &#39;Pkm&#39;, &#39;Ppara&#39;, &#39;Ppargc1a&#39;, &#39;Prkaa1&#39;, &#39;Prkaa2&#39;, &#39;Prkag2&#39;, &#39;Prkag3&#39;, &#39;Prxl2c&#39;, &#39;Psen1&#39;, &#39;Sirt6&#39;, &#39;Slc2a6&#39;, &#39;Slc4a1&#39;, &#39;Slc4a4&#39;, &#39;Stat3&#39;, &#39;Tigar&#39;, &#39;Tkfc&#39;, &#39;Tpi1&#39;, &#39;Trex1&#39;, &#39;Zbtb7a&#39;, &#39;Zbtb20&#39;)
genes &amp;lt;- genes[genes %in% rownames(data)]
mapal &amp;lt;- colorRampPalette(brewer.pal(11,&amp;quot;RdBu&amp;quot;))(256)
ht1 &amp;lt;- DoHeatmap(data, features = genes, angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;UCP1 Expression&#39;)
y &amp;lt;- ht1$data %&amp;gt;% drop_na()
x &amp;lt;- y %&amp;gt;% group_by(Identity) %&amp;gt;% select(Feature, Cell, Identity, Expression) %&amp;gt;%
  spread(key = Feature, value = Expression)
w &amp;lt;- y %&amp;gt;% select(Feature, Cell, Expression) %&amp;gt;%
  spread(key = Cell, value = Expression) %&amp;gt;% column_to_rownames(&amp;quot;Feature&amp;quot;) %&amp;gt;% as.matrix()
pt &amp;lt;- Heatmap(w, cluster_columns = F)
DoHeatmap(data, features = rownames(w)[row_order(pt)], angle = 0, size = 5, label = F, group.by = &#39;cluster&#39;) +
  scale_fill_gradientn(colours = rev(mapal)) +
  theme(axis.text=element_text(size=6)) +
  labs(color=&#39;UCP1 Expression&#39;) + ggtitle(&#39;Glycolytic Process&#39;) + 
  theme(plot.title = element_text(hjust = 0.5))



##################################
########### Figure S4H ###########
##################################
data &amp;lt;- readRDS(&amp;quot;/Users/biagi/PhD/AdipoSNAP/output/10x/Adipocytes.rds&amp;quot;)
infos &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/SCCAF/AdipocytesOnly/results/obs.csv&amp;quot;)

ort &amp;lt;- read.table(&amp;quot;/Users/biagi/PhD/AdipoSNAP/Orthologs_human_mouse.txt&amp;quot;, sep = &amp;quot;,&amp;quot;, header = T)

new_cluster &amp;lt;- infos$L1_result
names(new_cluster) &amp;lt;- rownames(infos)
new_cluster &amp;lt;- new_cluster + 1
new_cluster &amp;lt;- paste0(&amp;quot;Ad&amp;quot;, new_cluster)
new_cluster &amp;lt;- as.factor(new_cluster)
Idents(data) &amp;lt;- new_cluster
data$cluster &amp;lt;- Idents(data)

data &amp;lt;- subset(data, idents = list(&#39;Ad1&#39;))
data &amp;lt;- ScaleData(data, features = rownames(data))

data$UCP1 &amp;lt;- factor(ifelse(data@assays$SCT@data[&amp;quot;Ucp1&amp;quot;, ] &amp;gt; 0, &amp;quot;High&amp;quot;, &amp;quot;Low&amp;quot;))
Idents(data) &amp;lt;- data$UCP1

genes &amp;lt;- unique(c(&#39;SLC4A4&#39;, &#39;TXNIP&#39;, &#39;HADHB&#39;, &#39;HADHA&#39;, &#39;ITPR1&#39;, &#39;ATP6V1H&#39;, &#39;ESRRA&#39;, &#39;ETFDH&#39;, &#39;EGLN1&#39;, &#39;SLC25A42&#39;, &#39;NEAT1&#39;, &#39;ATXN2&#39;, &#39;SLC25A20&#39;, &#39;SUCLA2&#39;, &#39;HADHB&#39;, &#39;HADHA&#39;, &#39;SF3B2&#39;, &#39;UHRF1BP1L&#39;, &#39;COL27A1&#39;, &#39;PANK1&#39;, &#39;TECPR1&#39;, &#39;TOMM40&#39;, &#39;SLC20A2&#39;, &#39;AKAP1&#39;, &#39;ABCD3&#39;, &#39;EHHADH&#39;, &#39;TOB2&#39;, &#39;DEPTOR&#39;, &#39;PDK4&#39;, &#39;ITPR1&#39;, &#39;CNTNAP1&#39;, &#39;SIRT3&#39;, &#39;WDR91&#39;, &#39;CS&#39;, &#39;LRRC39&#39;, &#39;UHRF1BP1L&#39;, &#39;ESRRA&#39;, &#39;RBPMS&#39;, &#39;ACO2&#39;, &#39;KCNK3&#39;, &#39;GPD2&#39;, &#39;ATP1A2&#39;, &#39;ANK2&#39;, &#39;SDC4&#39;, &#39;FGD4&#39;, &#39;PKN1&#39;, &#39;RBPMS&#39;, &#39;HK2&#39;, &#39;PKM&#39;))
genes &amp;lt;- ort$Mouse.gene.name[which(ort$Gene.name %in% genes)]
genes &amp;lt;- genes[genes %in% rownames(data)]

tabHigh &amp;lt;- as.matrix(data@assays$SCT@data[genes, names(data$UCP1)[which(data$UCP1 == &#39;High&#39;)]])
tabLow &amp;lt;- as.matrix(data@assays$SCT@data[genes, names(data$UCP1)[which(data$UCP1 == &#39;Low&#39;)]])

df &amp;lt;- data.frame(High = rowSums(tabHigh), Low = rowSums(tabLow))
df &amp;lt;- t(df)
x &amp;lt;- as.matrix(df)
m = apply(x, 1, mean, na.rm = T)
s = apply(x, 1, sd, na.rm = T)
res &amp;lt;- (x - m)/s
cn = colnames(res)

ba &amp;lt;- HeatmapAnnotation(
  text = anno_text(cn, rot = 0, location = unit(0.9, &amp;quot;npc&amp;quot;), just = &amp;quot;centre&amp;quot;, gp = gpar(fontsize = 3)),
  annotation_height = max_text_width(cn)
)

breaks &amp;lt;- seq(-2,2, by= 0.1)
Heatmap(as.matrix(res), 
        bottom_annotation = ba, 
        name = &amp;quot;zscore&amp;quot;, column_title = &amp;quot;Ad1 UCP1 Targets TF High&amp;quot;, width = 1, 
        show_row_names = T, show_column_names = F,
        cluster_rows = F, cluster_columns = T,
        col = colorRamp2(breaks, colorRampPalette(rev(brewer.pal(n = 10, name = &amp;quot;RdBu&amp;quot;)))(41)), 
        heatmap_height = unit(6, &amp;quot;cm&amp;quot;), row_names_gp = gpar(fontsize = 8))


genes &amp;lt;- unique(c(&#39;ACSL1&#39;, &#39;CIDEC&#39;, &#39;SLC1A5&#39;, &#39;RETN&#39;, &#39;FASN&#39;, &#39;ADRB3&#39;, &#39;ABCC5&#39;, &#39;SH3PXD2A&#39;, &#39;NRIP1&#39;, &#39;FASN&#39;, &#39;SLC1A5&#39;, &#39;XIST&#39;, &#39;ACSL1&#39;, &#39;SH3PXD2A&#39;, &#39;ABCC5&#39;, &#39;ACACA&#39;, &#39;GHR&#39;, &#39;SH3PXD2A&#39;, &#39;SORBS1&#39;, &#39;MAPK6&#39;))
genes &amp;lt;- ort$Mouse.gene.name[which(ort$Gene.name %in% genes)]
genes &amp;lt;- genes[genes %in% rownames(data)]

tabHigh &amp;lt;- as.matrix(data@assays$SCT@data[genes, names(data$UCP1)[which(data$UCP1 == &#39;High&#39;)]])
tabLow &amp;lt;- as.matrix(data@assays$SCT@data[genes, names(data$UCP1)[which(data$UCP1 == &#39;Low&#39;)]])

df &amp;lt;- data.frame(High = rowSums(tabHigh), Low = rowSums(tabLow))
df &amp;lt;- t(df)
x &amp;lt;- as.matrix(df)
m = apply(x, 1, mean, na.rm = T)
s = apply(x, 1, sd, na.rm = T)
res &amp;lt;- (x - m)/s
cn = colnames(res)

ba &amp;lt;- HeatmapAnnotation(
  text = anno_text(cn, rot = 0, location = unit(0.9, &amp;quot;npc&amp;quot;), just = &amp;quot;centre&amp;quot;, gp = gpar(fontsize = 8)),
  annotation_height = max_text_width(cn)
)

breaks &amp;lt;- seq(-2,2, by= 0.1)
Heatmap(as.matrix(res), 
        bottom_annotation = ba, 
        name = &amp;quot;zscore&amp;quot;, column_title = &amp;quot;Ad1 UCP1 Targets TF Low&amp;quot;, width = 1, 
        show_row_names = T, show_column_names = F,
        cluster_rows = F, cluster_columns = T,
        col = colorRamp2(breaks, colorRampPalette(rev(brewer.pal(n = 10, name = &amp;quot;RdBu&amp;quot;)))(41)), 
        heatmap_height = unit(6, &amp;quot;cm&amp;quot;), row_names_gp = gpar(fontsize = 8))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
